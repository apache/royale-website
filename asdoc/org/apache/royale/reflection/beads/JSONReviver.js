/**
 * Generated by Apache Royale Compiler from org/apache/royale/reflection/beads/JSONReviver.as
 * org.apache.royale.reflection.beads.JSONReviver
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.reflection.beads.JSONReviver');
/* Royale Dependency List: org.apache.royale.core.IFlexInfo,org.apache.royale.core.IStrand,org.apache.royale.reflection.getDefinitionByName,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.core.IBead');



/**
 * @constructor
 * @implements {org.apache.royale.core.IBead}
 */
org.apache.royale.reflection.beads.JSONReviver = function() {

this.org_apache_royale_reflection_beads_JSONReviver_classMap = {};
};


/**
 * @private
 * @type {Object}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.org_apache_royale_reflection_beads_JSONReviver_classMap;


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.org_apache_royale_reflection_beads_JSONReviver__strand;


/**
 *  parse JSON but convert to ValueObjects
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @param {string} s
 * @return {Object}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.parse = function(s) {
  return JSON.parse(s, org.apache.royale.utils.Language.closure(this.org_apache_royale_reflection_beads_JSONReviver_reviver, this, 'org_apache_royale_reflection_beads_JSONReviver_reviver'));
};


/**
 * @private
 * @param {string} name
 * @param {Object} value
 * @return {Object}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.org_apache_royale_reflection_beads_JSONReviver_reviver = function(name, value) {
  if (typeof(value) === "object") {
    var /** @type {string} */ key = org.apache.royale.reflection.beads.JSONReviver.generateKey(value);
    var /** @type {Object} */ c = this.org_apache_royale_reflection_beads_JSONReviver_classMap[key];
    if (c) {
      var /** @type {Object} */ newValue = new c();
      for (var /** @type {string} */ p in value) {
        newValue[p] = value[p];
      }
      return newValue;
    } else if (key.length > 25 && key.charAt(0) != "0") {
      window.console.log("key not found: " + key, value);
    }
  }
  return value;
};


/**
 * @nocollapse
 * @param {Object} value
 * @return {string}
 */
org.apache.royale.reflection.beads.JSONReviver.generateKey = function(value) {
  var /** @type {Array} */ parts = [];
  for (var /** @type {string} */ p in value) {
    if (p == "__JSON2ASVO__")
      continue;
    var /** @type {string} */ key = "";
    key += p;
    key += ":";
    key += typeof(value[p]);
    parts.push(key);
  }
  parts.sort();
  return parts.join(";");
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.strand;


org.apache.royale.reflection.beads.JSONReviver.prototype.set__strand = function(value) {
  this.org_apache_royale_reflection_beads_JSONReviver__strand = value;
  var /** @type {org.apache.royale.core.IFlexInfo} */ app = value;
  var /** @type {Object} */ info = app.info();
  var /** @type {Object} */ map = info.remoteClassAliases;
  if (map) {
    for (var /** @type {string} */ cn in map) {
      var /** @type {string} */ alias = org.apache.royale.utils.Language.string(map[cn]);
      var /** @type {Object} */ c =  /** @type {Object|null} */ (org.apache.royale.reflection.getDefinitionByName(cn));
      if (c)
        this.org_apache_royale_reflection_beads_JSONReviver_classMap[c["key"]] = c;
    }
  }
};


Object.defineProperties(org.apache.royale.reflection.beads.JSONReviver.prototype, /** @lends {org.apache.royale.reflection.beads.JSONReviver.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.reflection.beads.JSONReviver.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'JSONReviver', qName: 'org.apache.royale.reflection.beads.JSONReviver', kind: 'class' }], interfaces: [org.apache.royale.core.IBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.reflection.beads.JSONReviver'}
      };
    },
    methods: function () {
      return {
        'JSONReviver': { type: '', declaredBy: 'org.apache.royale.reflection.beads.JSONReviver'},
        'parse': { type: 'Object', declaredBy: 'org.apache.royale.reflection.beads.JSONReviver', parameters: function () { return [ 'String', false ]; }},
        '|generateKey': { type: 'String', declaredBy: 'org.apache.royale.reflection.beads.JSONReviver', parameters: function () { return [ 'Object', false ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.reflection.beads.JSONReviver.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./JSONReviver.js.map
