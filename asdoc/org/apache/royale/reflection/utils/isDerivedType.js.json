{ "type": "method",
  "qname": "org.apache.royale.reflection.utils.isDerivedType",
  "namespace": "public",
  "bindable": [],
  "details": [],
  "deprecated": {},
    "description": "A utility method to check whether one definition is derived from another  This could be to check whether an interface extends another interface, or a class is a subclass of another class or whether a class implements an interface.",
  "tags": [
  {  "tagName": "param",
         "values": ["targetType TypeDefinition the definition to verify", "derivedFrom TypeDefinition the definition to verify against"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.0"]},
      {  "tagName": "royaleignorecoercion",
         "values": ["org.apache.royale.reflection.TypeDefinition"]},
      {  "tagName": "return",
         "values": ["true if targetType parameter represents some form of 'descendant' of derivedFrom parameter"]},
      {  "tagName": "langversion",
         "values": ["3.0"]},
      {  "tagName": "royalesuppressexport",
         "values": []}  ],
    "return": "Boolean",
    "params": [{ "name": "targetType", "type": "org.apache.royale.reflection.TypeDefinition"},
  { "name": "derivedFrom", "type": "org.apache.royale.reflection.TypeDefinition"}]}
