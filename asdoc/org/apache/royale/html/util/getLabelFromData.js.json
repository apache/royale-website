{ "type": "method",
  "qname": "org.apache.royale.html.util.getLabelFromData",
  "namespace": "public",
  "bindable": [],
  "details": [],
  "deprecated": {},
    "description": "Utility function to get a label string from a value object Strings are just returned as-is The most effective way to use the function for data is to use `ILabeledData`. If your data is an instantiated class, always implement `ILabeledData` and returns the correct value with the `label` getter. This ensures that it will work even after full minimization. If you are using plain objects (i.e. using `JSON.parse()` or similar) it will use the following logic flow: First it tries a `labelField` Then the `dataField` If both of those fail, it tries a `label` property If all else fails, it just converts the object to a string",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "royaleignorecoercion",
         "values": ["org.apache.royale.core.IHasLabelField", "org.apache.royale.core.IHasDataField", "org.apache.royale.core.ILabeledData"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
    "return": "String",
    "params": [{ "name": "obj", "type": "Object"},
  { "name": "data", "type": "Object"}]}
