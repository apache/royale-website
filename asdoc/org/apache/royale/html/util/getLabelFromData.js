/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/util/getLabelFromData.as
 * org.apache.royale.html.util.getLabelFromData
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.util.getLabelFromData');
/* Royale Dependency List: org.apache.royale.core.IHasDataField,org.apache.royale.core.IHasLabelField,org.apache.royale.core.ILabeledData,org.apache.royale.utils.Language,XML*/




/**
 *  Utility function to get a label string from a value object
 *  Strings are just returned as-is
 *  The most effective way to use the function for data is to use `ILabeledData`.
 *  If your data is an instantiated class, always implement `ILabeledData`
 *  and returns the correct value with the `label` getter.
 *  This ensures that it will work even after full minimization.
 *  If you are using plain objects (i.e. using `JSON.parse()` or similar) it will use the following logic flow:
 *  First it tries a `labelField`
 *  Then the `dataField`
 *  If both of those fail, it tries a `label` property
 *  If all else fails, it just converts the object to a string
 * 
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.3
 *  @royaleignorecoercion org.apache.royale.core.IHasLabelField
 *  @royaleignorecoercion org.apache.royale.core.IHasDataField
 *  @royaleignorecoercion org.apache.royale.core.ILabeledData
 * @param {Object} obj
 * @param {Object} data
 * @return {string}
 */
org.apache.royale.html.util.getLabelFromData = function(obj, data) {
  if (org.apache.royale.utils.Language.is(data, String))
    return "" + data;
  if (!data)
    return "";
  if (org.apache.royale.utils.Language.is(data, org.apache.royale.core.ILabeledData))
    return data.label;
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.core.IHasLabelField) && obj.labelField) {
    return data[obj.labelField] == null ? "" : "" + data[obj.labelField];
  }
  if (org.apache.royale.utils.Language.is(obj, org.apache.royale.core.IHasDataField) && obj.dataField) {
    return data[obj.dataField] == null ? "" : "" + data[obj.dataField];
  }
  var /** @type {string} */ label = org.apache.royale.utils.Language.string(data["label"]);
  if (label != null)
    return label;
  return "" + data;
}
