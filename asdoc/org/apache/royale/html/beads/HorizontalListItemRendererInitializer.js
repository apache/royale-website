/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/beads/HorizontalListItemRendererInitializer.as
 * org.apache.royale.html.beads.HorizontalListItemRendererInitializer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.beads.HorizontalListItemRendererInitializer');
/* Royale Dependency List: org.apache.royale.core.IIndexedItemRenderer,org.apache.royale.core.IStrand,org.apache.royale.core.IStrandWithPresentationModel,org.apache.royale.core.SimpleCSSStyles,org.apache.royale.core.UIBase,org.apache.royale.html.IListPresentationModel,XML*/

goog.require('org.apache.royale.html.beads.IndexedItemRendererInitializer');
goog.require('org.apache.royale.core.IIndexedItemRendererInitializer');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9.7
 * @constructor
 * @extends {org.apache.royale.html.beads.IndexedItemRendererInitializer}
 * @implements {org.apache.royale.core.IIndexedItemRendererInitializer}
 */
org.apache.royale.html.beads.HorizontalListItemRendererInitializer = function() {
  org.apache.royale.html.beads.HorizontalListItemRendererInitializer.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html.beads.HorizontalListItemRendererInitializer, org.apache.royale.html.beads.IndexedItemRendererInitializer);


/**
 * @protected
 * @type {org.apache.royale.html.IListPresentationModel}
 */
org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.presentationModel;


/**
 * @royaleignorecoercion org.apache.royale.core.UIBase
 * @protected
 * @override
 */
org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.setupVisualsForItemRenderer = function(ir) {
  var /** @type {org.apache.royale.core.SimpleCSSStyles} */ style = new org.apache.royale.core.SimpleCSSStyles();
  style.marginBottom = this.presentationModel.separatorThickness;
  ir.style = style;
  ir.height = this.presentationModel.rowHeight;
};


org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.set__strand = function(value) {
  org.apache.royale.html.beads.HorizontalListItemRendererInitializer.superClass_.set__strand.apply(this, [value]);
  this.presentationModel = this._strand.presentationModel;
};


Object.defineProperties(org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype, /** @lends {org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.set__strand}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'HorizontalListItemRendererInitializer', qName: 'org.apache.royale.html.beads.HorizontalListItemRendererInitializer', kind: 'class' }], interfaces: [org.apache.royale.core.IIndexedItemRendererInitializer] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.html.beads.HorizontalListItemRendererInitializer'}
      };
    },
    methods: function () {
      return {
        'HorizontalListItemRendererInitializer': { type: '', declaredBy: 'org.apache.royale.html.beads.HorizontalListItemRendererInitializer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.beads.HorizontalListItemRendererInitializer.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./HorizontalListItemRendererInitializer.js.map
