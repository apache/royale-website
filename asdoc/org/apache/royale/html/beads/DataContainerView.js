/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/beads/DataContainerView.as
 * org.apache.royale.html.beads.DataContainerView
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.beads.DataContainerView');
/* Royale Dependency List: org.apache.royale.core.IChild,org.apache.royale.core.IDataProviderItemRendererMapper,org.apache.royale.core.IDataProviderModel,org.apache.royale.core.IItemRenderer,org.apache.royale.core.IItemRendererClassFactory,org.apache.royale.core.IParent,org.apache.royale.core.IStrand,org.apache.royale.events.Event,org.apache.royale.events.ItemAddedEvent,org.apache.royale.events.ItemRemovedEvent,org.apache.royale.html.supportClasses.DataItemRenderer,org.apache.royale.html.util.getModelByType,org.apache.royale.utils.loadBeadFromValuesManager,org.apache.royale.utils.sendStrandEvent,org.apache.royale.utils.Language,XML*/

goog.require('org.apache.royale.core.IItemRendererOwnerView');
goog.require('org.apache.royale.html.beads.ContainerView');
goog.require('org.apache.royale.html.beads.IListView');



/**
 * @constructor
 * @extends {org.apache.royale.html.beads.ContainerView}
 * @implements {org.apache.royale.html.beads.IListView}
 * @implements {org.apache.royale.core.IItemRendererOwnerView}
 */
org.apache.royale.html.beads.DataContainerView = function() {
  org.apache.royale.html.beads.DataContainerView.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html.beads.DataContainerView, org.apache.royale.html.beads.ContainerView);


/**
 * @protected
 * @type {org.apache.royale.core.IDataProviderModel}
 */
org.apache.royale.html.beads.DataContainerView.prototype.dataModel;


/**
 * @royaleignorecoercion org.apache.royale.core.IDataProviderModel
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.html.beads.DataContainerView.prototype.beadsAddedHandler = function(event) {
  this.dataModel = org.apache.royale.html.util.getModelByType(this._strand, org.apache.royale.core.IDataProviderModel);
  this.host.addEventListener("itemsCreated", org.apache.royale.utils.Language.closure(this.itemsCreatedHandler, this, 'itemsCreatedHandler'));
  if (this.dataModel)
    this.dataModel.addEventListener("dataProviderChanged", org.apache.royale.utils.Language.closure(this.dataProviderChangeHandler, this, 'dataProviderChangeHandler'));
};


/**
 * @asprivate
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.html.beads.DataContainerView.prototype.itemsCreatedHandler = function(event) {
  org.apache.royale.utils.sendStrandEvent(this._strand, "layoutNeeded");
};


/**
 * @asprivate
 * @protected
 * @param {org.apache.royale.events.Event} event
 */
org.apache.royale.html.beads.DataContainerView.prototype.dataProviderChangeHandler = function(event) {
  org.apache.royale.utils.sendStrandEvent(this._strand, "layoutNeeded");
};


/**
 * @copy org.apache.royale.core.IItemRendererOwnerView#addItemRenderer()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 *  @royaleignorecoercion org.apache.royale.core.IParent
 * @param {org.apache.royale.core.IItemRenderer} renderer
 * @param {boolean} dispatchAdded
 */
org.apache.royale.html.beads.DataContainerView.prototype.addItemRenderer = function(renderer, dispatchAdded) {
  this.contentView.addElement(renderer, dispatchAdded);
  this.dispatchItemAdded(renderer);
};


/**
 * @copy org.apache.royale.core.IItemRendererOwnerView#addItemRendererAt()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.9
 *  @royaleignorecoercion org.apache.royale.core.IParent
 * @param {org.apache.royale.core.IItemRenderer} renderer
 * @param {number} index
 */
org.apache.royale.html.beads.DataContainerView.prototype.addItemRendererAt = function(renderer, index) {
  this.contentView.addElementAt(renderer, index, true);
  this.dispatchItemAdded(renderer);
};


/**
 * @protected
 * @param {org.apache.royale.core.IItemRenderer} renderer
 */
org.apache.royale.html.beads.DataContainerView.prototype.dispatchItemAdded = function(renderer) {
  var /** @type {org.apache.royale.events.ItemAddedEvent} */ newEvent = new org.apache.royale.events.ItemAddedEvent("itemAdded");
  newEvent.item = renderer;
  org.apache.royale.utils.sendStrandEvent(this._strand, newEvent);
};


/**
 * @copy org.apache.royale.core.IItemRendererOwnerView#removeItemRenderer()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 *  @royaleignorecoercion org.apache.royale.core.IParent
 * @param {org.apache.royale.core.IItemRenderer} renderer
 */
org.apache.royale.html.beads.DataContainerView.prototype.removeItemRenderer = function(renderer) {
  this.contentView.removeElement(renderer);
  var /** @type {org.apache.royale.events.ItemRemovedEvent} */ newEvent = new org.apache.royale.events.ItemRemovedEvent("itemRemoved");
  newEvent.item = renderer;
  org.apache.royale.utils.sendStrandEvent(this._strand, newEvent);
};


/**
 * @copy org.apache.royale.core.IItemRendererOwnerView#removeAllItemRenderers()
 * @asprivate
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 *  @royaleignorecoercion org.apache.royale.core.IParent
 */
org.apache.royale.html.beads.DataContainerView.prototype.removeAllItemRenderers = function() {
  while (this.contentView.numElements > 0) {
    var /** @type {org.apache.royale.core.IChild} */ child = this.contentView.getElementAt(0);
    this.contentView.removeElement(child);
  }
};


/**
 *  @copy org.apache.royale.core.IItemRendererOwnerView#getItemRendererForIndex()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * 	@royaleignorecoercion org.apache.royale.core.IItemRenderer
 * 	@royaleignorecoercion org.apache.royale.core.IParent
 * @param {number} index
 * @return {Object}
 */
org.apache.royale.html.beads.DataContainerView.prototype.getItemRendererForIndex = function(index) {
  if (index < 0 || index >= this.contentView.numElements)
    return null;
  return this.contentView.getElementAt(index);
};


/**
 *  @copy org.apache.royale.core.IItemRendererOwnerView#getItemRendererAt()
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * 	@royaleignorecoercion org.apache.royale.core.IItemRenderer
 *  @royaleignorecoercion org.apache.royale.core.IParent
 * @param {number} index
 * @return {Object}
 */
org.apache.royale.html.beads.DataContainerView.prototype.getItemRendererAt = function(index) {
  if (index < 0 || index >= this.contentView.numElements)
    return null;
  return this.contentView.getElementAt(index);
};


/**
 *  Refreshes the itemRenderers. Useful after a size change by the data group.
 *
 *  @copy org.apache.royale.core.IItemRendererOwnerView#updateAllItemRenderers()
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.8
 * 	@royaleignorecoercion org.apache.royale.html.supportClasses.DataItemRenderer
 *  @royaleignorecoercion org.apache.royale.core.IParent
 */
org.apache.royale.html.beads.DataContainerView.prototype.updateAllItemRenderers = function() {
  var /** @type {number} */ n = this.contentView.numElements;
  for (var /** @type {number} */ i = 0; i < n; i++) {
    var /** @type {Object} */ renderer = this.getItemRendererForIndex((i) >> 0);
    if (renderer) {
      renderer.setWidth(this.host.width, true);
      renderer.adjustSize();
    }
  }
};


org.apache.royale.html.beads.DataContainerView.prototype.set__strand = function(value) {
  org.apache.royale.html.beads.DataContainerView.superClass_.set__strand.apply(this, [value]);
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IDataProviderItemRendererMapper, "iDataProviderItemRendererMapper", value);
  org.apache.royale.utils.loadBeadFromValuesManager(org.apache.royale.core.IItemRendererClassFactory, "iItemRendererClassFactory", value);
  this.host.addEventListener("beadsAdded", org.apache.royale.utils.Language.closure(this.beadsAddedHandler, this, 'beadsAddedHandler'));
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
org.apache.royale.html.beads.DataContainerView.prototype.dataGroup;


org.apache.royale.html.beads.DataContainerView.prototype.get__dataGroup = function() {
  return this;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html.beads.DataContainerView.prototype.numItemRenderers;


org.apache.royale.html.beads.DataContainerView.prototype.get__numItemRenderers = function() {
  return this.contentView.numElements;
};


Object.defineProperties(org.apache.royale.html.beads.DataContainerView.prototype, /** @lends {org.apache.royale.html.beads.DataContainerView.prototype} */ {
/**
 * @type {org.apache.royale.core.IStrand}
 */
strand: {
set: org.apache.royale.html.beads.DataContainerView.prototype.set__strand},
/**
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
dataGroup: {
get: org.apache.royale.html.beads.DataContainerView.prototype.get__dataGroup},
/**
 * @type {number}
 */
numItemRenderers: {
get: org.apache.royale.html.beads.DataContainerView.prototype.get__numItemRenderers}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.beads.DataContainerView.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DataContainerView', qName: 'org.apache.royale.html.beads.DataContainerView', kind: 'class' }], interfaces: [org.apache.royale.html.beads.IListView, org.apache.royale.core.IItemRendererOwnerView] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.beads.DataContainerView.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.html.beads.DataContainerView'},
        'dataGroup': { type: 'org.apache.royale.core.IItemRendererOwnerView', access: 'readonly', declaredBy: 'org.apache.royale.html.beads.DataContainerView'},
        'numItemRenderers': { type: 'int', access: 'readonly', declaredBy: 'org.apache.royale.html.beads.DataContainerView'}
      };
    },
    methods: function () {
      return {
        'DataContainerView': { type: '', declaredBy: 'org.apache.royale.html.beads.DataContainerView'},
        'addItemRenderer': { type: 'void', declaredBy: 'org.apache.royale.html.beads.DataContainerView', parameters: function () { return [ 'org.apache.royale.core.IItemRenderer', false ,'Boolean', false ]; }},
        'addItemRendererAt': { type: 'void', declaredBy: 'org.apache.royale.html.beads.DataContainerView', parameters: function () { return [ 'org.apache.royale.core.IItemRenderer', false ,'int', false ]; }},
        'removeItemRenderer': { type: 'void', declaredBy: 'org.apache.royale.html.beads.DataContainerView', parameters: function () { return [ 'org.apache.royale.core.IItemRenderer', false ]; }},
        'removeAllItemRenderers': { type: 'void', declaredBy: 'org.apache.royale.html.beads.DataContainerView'},
        'getItemRendererForIndex': { type: 'org.apache.royale.core.IItemRenderer', declaredBy: 'org.apache.royale.html.beads.DataContainerView', parameters: function () { return [ 'int', false ]; }},
        'getItemRendererAt': { type: 'org.apache.royale.core.IItemRenderer', declaredBy: 'org.apache.royale.html.beads.DataContainerView', parameters: function () { return [ 'int', false ]; }},
        'updateAllItemRenderers': { type: 'void', declaredBy: 'org.apache.royale.html.beads.DataContainerView'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.beads.DataContainerView.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./DataContainerView.js.map
