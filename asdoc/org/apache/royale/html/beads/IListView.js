/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/beads/IListView.as
 * org.apache.royale.html.beads.IListView
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.beads.IListView');
/* Royale Dependency List: org.apache.royale.core.IItemRendererOwnerView*/

goog.require('org.apache.royale.core.IBeadView');



/**
 * @interface
 * @extends {org.apache.royale.core.IBeadView}
 */
org.apache.royale.html.beads.IListView = function() {
};
/**  * @type {org.apache.royale.core.IItemRendererOwnerView}
 */org.apache.royale.html.beads.IListView.prototype.dataGroup;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.beads.IListView.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IListView', qName: 'org.apache.royale.html.beads.IListView', kind: 'interface' }], interfaces: [org.apache.royale.core.IBeadView] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.beads.IListView.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'dataGroup': { type: 'org.apache.royale.core.IItemRendererOwnerView', access: 'readonly', declaredBy: 'org.apache.royale.html.beads.IListView'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.beads.IListView.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./IListView.js.map
