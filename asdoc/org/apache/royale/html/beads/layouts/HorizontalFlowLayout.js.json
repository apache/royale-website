{ "type": "class",
  "qname": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
  "baseClassname": "org.apache.royale.core.LayoutBase"
  ,
    "description": "The HorizontalFlowLayout class bead sizes and positions the elements it manages into rows and columns. It does this by seeing how many elements will fit horizontally and then flow the remainder onto the next lines. If an element does not already have an explicit or percentage size, a size is chosen for it based on the defaultColumnCount property which divides the layout space into equal number of cells as a default measurement.  The height of each row is determined by the tallest element in the row. The next row flows below that.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.0"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.html.beads.layouts.HorizontalFlowLayout",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "columnGap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The amount of spacing between the columns.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "rowGap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Amount of spacing between the rows.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "defaultColumnCount",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The default number of columns the layout should assume should any or all of the elements not have explicit or percentage widths. This value is used to divide the layout width into equal-width columns. An element's own width overrides this computed width, allowing for a ragged grid arrangement.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "computedColumnWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The calculated width of each column, in pixels. If left unspecified, the columnWidth is determined by dividing the defaultColumnCount into the strand's bounding box width.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "useChildWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines whether or not each child's width is set from the column size (false) or uses its own width (true). Default is false.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "layout",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "copy",
               "values": ["org.apache.royale.core.IBeadLayout#layout"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.IBorderPaddingMarginValuesImpl"]}  ],
          "return": "Boolean",
          "params": []}
      ]
  ,
  "events": [
  ]
  }
