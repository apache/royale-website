{ "type": "class",
  "qname": "org.apache.royale.html.beads.ContainerView",
  "baseClassname": "org.apache.royale.html.beads.GroupView"
  ,
    "description": "This class creates and manages the contents of a Container. On the ActionScript side, a Container has a contentView into which the offical children can be placed. When adding an element that implements IChrome, that element is not placed into the contentView, but is made a child of the Container directly.  Containers also have a layout associated with them which controls the size and placement of the elements in the contentView. When a Container does not have an explicit size (including a percent size), the content dictates the size of the Container.",
  "tags": [
  {  "tagName": "viewbead",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.8"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.html.beads.ContainerView",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The ContainerView class is the default view for the org.apache.royale.core.ContainerBase classes. It lets you use some CSS styles to manage the border, background and padding around the content area.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.IViewport",
        "qname": "viewport",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The viewport used to present the content and may display scroll bars (depending on the actual type of viewport).",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.ILayoutView",
        "qname": "contentView",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "The sub-element used as the parent of the container's elements. This does not include the chrome elements.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.ILayoutView"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.IViewportModel",
        "qname": "viewportModel",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The data model used by the viewport to determine how it should present the content area.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "write-only",
        "return": "org.apache.royale.core.IStrand",
        "qname": "strand",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Strand setter.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.IViewport"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addViewport",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.IContainer"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "beforeLayout",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Positions the viewport, then sets any known sizes of the Viewport prior to laying out its content.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "afterLayout",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Adjusts the size of the host, or adds scrollbars to the viewport, after the layout has been run.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ]
  }
