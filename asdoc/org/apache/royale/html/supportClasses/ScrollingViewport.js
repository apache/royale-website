/**
 * Generated by Apache Royale Compiler from org/apache/royale/html/supportClasses/ScrollingViewport.as
 * org.apache.royale.html.supportClasses.ScrollingViewport
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.supportClasses.ScrollingViewport');
/* Royale Dependency List: XML*/

goog.require('org.apache.royale.html.supportClasses.Viewport');
goog.require('org.apache.royale.core.IBead');
goog.require('org.apache.royale.core.IScrollingViewport');



/**
 * Constructor
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.html.supportClasses.Viewport}
 * @implements {org.apache.royale.core.IBead}
 * @implements {org.apache.royale.core.IScrollingViewport}
 */
org.apache.royale.html.supportClasses.ScrollingViewport = function() {
  org.apache.royale.html.supportClasses.ScrollingViewport.base(this, 'constructor');
};
goog.inherits(org.apache.royale.html.supportClasses.ScrollingViewport, org.apache.royale.html.supportClasses.Viewport);


/**
 * 
 *  @royaleignorecoercion org.apache.royale.core.ILayoutChild
 * @protected
 * @override
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.setScrollStyle = function() {
  this.contentArea.element.style.overflow = "auto";
  this.adaptContentArea();
};


/**
 * If the contentArea is not the same as the strand,
 * we need to size it to 100% for scrolling to work correctly.
 * @royaleignorecoercion org.apache.royale.events.IEventDispatcher
 * @protected
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.adaptContentArea = function() {
  if (this._strand != this.contentArea) {
    this.contentArea.percentHeight = 100;
    this.contentArea.percentWidth = 100;
    this.contentArea.element.style.position = "absolute";
  }
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.verticalScrollPosition;


org.apache.royale.html.supportClasses.ScrollingViewport.prototype.get__verticalScrollPosition = function() {
  return this.contentArea.element.scrollTop;
};


org.apache.royale.html.supportClasses.ScrollingViewport.prototype.set__verticalScrollPosition = function(value) {
  this.contentArea.element.scrollTop = value;
};


/**
 * @nocollapse
 * @export
 * @type {number}
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.horizontalScrollPosition;


org.apache.royale.html.supportClasses.ScrollingViewport.prototype.get__horizontalScrollPosition = function() {
  return this.contentArea.element.scrollLeft;
};


org.apache.royale.html.supportClasses.ScrollingViewport.prototype.set__horizontalScrollPosition = function(value) {
  this.contentArea.element.scrollLeft = value;
};


Object.defineProperties(org.apache.royale.html.supportClasses.ScrollingViewport.prototype, /** @lends {org.apache.royale.html.supportClasses.ScrollingViewport.prototype} */ {
/**
 * @type {number}
 */
verticalScrollPosition: {
get: org.apache.royale.html.supportClasses.ScrollingViewport.prototype.get__verticalScrollPosition,
set: org.apache.royale.html.supportClasses.ScrollingViewport.prototype.set__verticalScrollPosition},
/**
 * @type {number}
 */
horizontalScrollPosition: {
get: org.apache.royale.html.supportClasses.ScrollingViewport.prototype.get__horizontalScrollPosition,
set: org.apache.royale.html.supportClasses.ScrollingViewport.prototype.set__horizontalScrollPosition}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ScrollingViewport', qName: 'org.apache.royale.html.supportClasses.ScrollingViewport', kind: 'class' }], interfaces: [org.apache.royale.core.IBead, org.apache.royale.core.IScrollingViewport] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'verticalScrollPosition': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.html.supportClasses.ScrollingViewport'},
        'horizontalScrollPosition': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.html.supportClasses.ScrollingViewport'}
      };
    },
    methods: function () {
      return {
        'ScrollingViewport': { type: '', declaredBy: 'org.apache.royale.html.supportClasses.ScrollingViewport'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.html.supportClasses.ScrollingViewport.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ScrollingViewport.js.map
