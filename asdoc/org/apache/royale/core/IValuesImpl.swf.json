{ "type": "interface",
  "qname": "org.apache.royale.core.IValuesImpl",
"baseInterfaceNames": [
]
,
    "description": "The IValuesImpl interface is the basic interface for the subsystem that provides default values to components.  The most common implementation implements a simple version of CSS and uses data structures compiled from CSS files.",
  "tags": [
  {  "tagName": "see",
         "values": ["org.apache.royale.core.SimpleCSSValuesImpl"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.0"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
    "qname": "getValue",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns a value for a given object based on a property name, and optionally, the current state, and a set of property value pairs.",
    "tags": [
    {  "tagName": "param",
           "values": ["thisObject The object to get the value for.", "valueName The name of a property. e.g. fontFamily, color, etc.", "state The name of a state. e.g. hovered, visited", "attrs A map of property value pairs that may affect the returned value."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "return",
           "values": ["A value or undefined"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "*",
      "params": [{ "name": "thisObject", "type": "Object"},
    { "name": "valueName", "type": "String"},
    { "name": "state", "type": "String"},
    { "name": "attrs", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "newInstance",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns a new instance based on the value for a given object based on a property name, and optionally, the current state, and a set of property value pairs.  This is a way to avoid using the Class type in AS code.",
    "tags": [
    {  "tagName": "param",
           "values": ["thisObject The object to get the value for.", "valueName The name of a property. e.g. fontFamily, color, etc.", "state The name of a state. e.g. hovered, visited", "attrs A map of property value pairs that may affect the returned value."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "return",
           "values": ["A value or undefined"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "*",
      "params": [{ "name": "thisObject", "type": "Object"},
    { "name": "valueName", "type": "String"},
    { "name": "state", "type": "String"},
    { "name": "attrs", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "getInstance",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Returns a shared instance, instantiating the shared instance if it doesn't exist.  Often used to share &quot;managers&quot;  qualified class name is used.",
    "tags": [
    {  "tagName": "param",
           "values": ["valueName The name of a shared instance.  Often, the fully"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "return",
           "values": ["The shared instance."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Object",
      "params": [{ "name": "valueName", "type": "String"}]}
  ,
  { "type": "method",
    "qname": "init",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "MXML Documents that support &lt;fx:Style&gt; blocks should call init to install the styles for each instance.",
    "tags": [
    {  "tagName": "param",
           "values": ["mainClass An instance that may have styles from an &lt;fx:Style&gt; block."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "mainClass", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "convertColor",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Converts a color value into a uint.  a color value like #ffffff or &quot;red&quot; in some cases.",
    "tags": [
    {  "tagName": "param",
           "values": ["value A string for a color.  Typically it is"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "uint",
      "params": [{ "name": "value", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "parseStyles",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Converts an HTML-like style format into an object.",
    "tags": [
    {  "tagName": "param",
           "values": ["value A string, such as \"color:red;fontSize:10px\"."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Object",
      "params": [{ "name": "value", "type": "String"}]}
  ,
  { "type": "method",
    "qname": "addRule",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Add a style rule like a class selector.",
    "tags": [
    {  "tagName": "param",
           "values": ["ruleName The name of the rule like '.myClassSelector'.", "values Name/value pairs."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10.2", "AIR 2.6"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.0"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "ruleName", "type": "String"},
    { "name": "values", "type": "Object"}]}
  ]
  }
