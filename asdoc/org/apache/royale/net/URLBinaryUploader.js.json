{ "type": "class",
  "qname": "org.apache.royale.net.URLBinaryUploader",
  "baseClassname": "org.apache.royale.net.URLBinaryLoader"
  ,
    "description": "The URLBinaryUploader class subclasses URLBinaryLoader to offer upload progress events.  This class is only used for JS implementations because Flash upload events need to be handled differently. In Flash, URLLoader does not dispatch upload events. It only dispatches download events. To get upload events in Flash, you need to use File/FileReference.upload() and attach event listeners to that.  Care should be taken when using this class because it attaches a progress listener to the xhr.upload object. Doing so causes browsers to send OPTIONS requests. This will return an unauthorized response from servers not configured to allow CORS OPTIONS requests. See this S.O. post for details. https://stackoverflow.com/a/17057853",
  "tags": [
  {  "tagName": "see",
         "values": ["URLBinaryLoader"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.0"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.net.URLBinaryUploader",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "createStream",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "setupCallbacks",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.net.URLUploadStream"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "cleanupCallbacks",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "field",
        "qname": "onUploadProgress",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Callback for upload progress event.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "method",
        "qname": "uploadProgress",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Convenience function for upoad progress event to allow chaining.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.net.URLBinaryUploader",
          "params": [{ "name": "callback", "type": "Function"}]}
      ]
  ,
  "events": [
  ]
  }
