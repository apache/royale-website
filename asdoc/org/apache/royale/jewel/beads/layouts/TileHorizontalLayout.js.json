{ "type": "class",
  "qname": "org.apache.royale.jewel.beads.layouts.TileHorizontalLayout",
  "baseClassname": "org.apache.royale.jewel.beads.layouts.SimpleHorizontalLayout"
  ,
    "description": "The TileHorizontalLayout class bead sizes and positions the elements it manages into rows and columns. The size of each element is determined either by setting TileHorizontalLayout's columnWidth and rowHeight properties, or having the tile size determined by factoring the columnCount into the area assigned for the layout.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.8"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.jewel.beads.layouts.TileHorizontalLayout",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "LAYOUT_TYPE_NAMES",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.events.IEventDispatcher",
        "qname": "dispatcher",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.11"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addEventListener",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "type", "type": "String"},
        { "name": "handler", "type": "Function"},
        { "name": "opt_capture", "type": "Boolean"},
        { "name": "opt_handlerScope", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "removeEventListener",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "type", "type": "String"},
        { "name": "handler", "type": "Function"},
        { "name": "opt_capture", "type": "Boolean"},
        { "name": "opt_handlerScope", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "dispatchEvent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "event", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "hasEventListener",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "type", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "beadsAddedHandler",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Add class selectors when the component is addedToParent Otherwise component will not get the class selectors when perform &quot;removeElement&quot; and then &quot;addElement&quot;",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "columnCount",
        "namespace": "public",
        "bindable": ["columnCountChanged"],
        "details": [],
        "deprecated": {},
          "description": "The number of tiles to fit horizontally into the layout. Contain the actual column count. The default value is -1.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "requestedColumnCount",
        "namespace": "public",
        "bindable": ["requestedColumnCountChanged"],
        "details": [],
        "deprecated": {},
          "description": "Number of columns to be displayed. Set to -1 to allow the TileHorizontalLayout to determine the column count automatically.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "columnWidth",
        "namespace": "public",
        "bindable": ["columnWidthChanged"],
        "details": [],
        "deprecated": {},
          "description": "Contain the actual column width, in pixels. If not explicitly set, the column width is determined from the width of the widest element. If the columnAlign property is set to &quot;justifyUsingWidth&quot;, the column width grows to the container width to justify the fully-visible columns. The default value is NaN. This property can be used as the source for data binding.  The width of each column, in pixels. If left unspecified, the columnWidth is determined by dividing the columnCount into the strand's bounding box width.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "rowCount",
        "namespace": "public",
        "bindable": ["rowCountChanged"],
        "details": [],
        "deprecated": {},
          "description": "The number of tiles to fit horizontally into the layout. The row count. The default value is -1.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "rowHeight",
        "namespace": "public",
        "bindable": ["rowHeightChanged"],
        "details": [],
        "deprecated": {},
          "description": "The row height, in pixels. If not explicitly set, the row height is determined from the maximum of elements' height. If rowAlign is set to &quot;justifyUsingHeight&quot;, the actual row height increases to justify the fully-visible rows to the container height. The default value is NaN. This property can be used as the source for data binding.  The height of each row, in pixels. If left unspecified, the rowHeight is determine by dividing the possible number of rows into the strand's bounding box height.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "horizontalGap",
        "namespace": "public",
        "bindable": ["horizontalGapChanged"],
        "details": [],
        "deprecated": {},
          "description": "The horizontalGap between items.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "verticalGap",
        "namespace": "public",
        "bindable": ["verticalGapChanged"],
        "details": [],
        "deprecated": {},
          "description": "The verticalGap between items.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "layout",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Layout children",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.8"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.ILayoutHost", "org.apache.royale.core.WrappedHTMLElement"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ]
  ,
  "events": [
  ]
  }
