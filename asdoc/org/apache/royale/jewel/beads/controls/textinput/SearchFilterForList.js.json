{ "type": "class",
  "qname": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
  "baseClassname": "org.apache.royale.core.DispatcherBead"
  ,
    "description": "The SearchFilterForList bead class is a specialty bead that can be used with a Jewel TextInput to filter options in other List component  Notice that the filtering is only visual, and the underlaying dataProvider is not filtered itself. To get a filtered view of the dataProvider you should use ArrayListView API.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.6"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.jewel.beads.controls.textinput.SearchFilterForList",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.jewel.List",
        "qname": "list",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "the list to filter",
        "tags": [
          ]},
      { "type": "method",
        "qname": "addListListeners",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "removeListListeners",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "keyDownEventHandler",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "param",
               "values": ["event"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.KeyboardEvent"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.jewel.supportClasses.list.IListPresentationModel",
        "qname": "presentationModel",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "scrollToIndex",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Ensures that the data provider item at the given index is visible.  This implementation consider only visible items",
        "tags": [
        {  "tagName": "param",
               "values": ["index The index of the item in the data provider."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.7"]},
            {  "tagName": "return",
               "values": ["<code>true</code> if <code>verticalScrollPosition</code> changed."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "field",
        "qname": "filterFunction",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "the filter function to use to filter entries in the list  Notice that defaultFilterFunction receive a text string, while a custom filter function can receive the whole data object from the renderer so the user can make an kind of process over the data object and its subfields",
        "tags": [
          ]},
      { "type": "field",
        "qname": "useDecoration",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "enables label decoration when filter",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "length",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "enables label decoration when filter",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "write-only",
        "return": "org.apache.royale.core.IStrand",
        "qname": "strand",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.core.IBead#strand"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.events.IEventDispatcher;"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "onBeadsAdded",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "onInputFocus",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "textInputKeyUpHandler",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.KeyboardEvent"}]}
      ,
      { "type": "method",
        "qname": "textInputKeyUpLogic",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "input", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "defaultFilterFunction",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "default filter function just filters substrings you can use other advanced methods like levenshtein distance  notice that defaultFilterFunction receive a text string, while a custom filter function can receive the whole data object from the renderer.",
        "tags": [
        {  "tagName": "param",
               "values": ["text, the text where perform the seach", "filterText, the text to use as Filter"]},
            {  "tagName": "return",
               "values": ["true if filterText was found in text, false otherwise"]}  ],
          "return": "Boolean",
          "params": [{ "name": "text", "type": "String"},
        { "name": "filterText", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "decorateText",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Used to decorated the filtered text",
        "tags": [
        {  "tagName": "param",
               "values": ["originalString, the original String", "toReplace, the string to replace", "decoration, the decoration to use, defaults to \"strong\""]},
            {  "tagName": "return",
               "values": ["the originalString with the replacement performed"]}  ],
          "return": "String",
          "params": [{ "name": "originalString", "type": "String"},
        { "name": "location", "type": "int"},
        { "name": "len", "type": "int"},
        { "name": "decorationPrefix", "type": "String"},
        { "name": "decorationSufix", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "applyFilter",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "filterText", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "selectItem",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "item", "type": "Object"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "visibleIndexes",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.7"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "numberSort",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "int",
          "params": [{ "name": "a", "type": "int"},
        { "name": "b", "type": "int"}]}
      ]
  ,
  "events": [
  ]
  }
