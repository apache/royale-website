{ "type": "class",
  "qname": "org.apache.royale.textLayout.compose.BaseCompose",
  "baseClassname": ""
  ,
    "description": "Common composer base class",
  "tags": [
    ],
  "members": [
  { "type": "field",
        "qname": "_parcelList",
        "return": "org.apache.royale.textLayout.compose.ParcelList",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.compose.ParcelList",
        "qname": "parcelList",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "List of areas we're composing into, matches the container's bounding box",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curElement",
        "return": "org.apache.royale.textLayout.elements.IFlowLeafElement",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Element of current location",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curElementStart",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Absolute start position of _curElement",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curElementOffset",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Offset from element start to current location",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curParaElement",
        "return": "org.apache.royale.textLayout.elements.IParagraphElement",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "ParagraphElement that contains the current location",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curParaFormat",
        "return": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curParaStart",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Absolute start position of _curParaElement",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curLineStart",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Absolute start position of the current line",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_lastLineLeadingModel",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "leading model for the last line's para",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_lastLineLeading",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "leading factor calculated for the line composed last.",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_lastLineDescent",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "effective descent of the last line. This is the distance between a line's Roman baseline and",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_paragraphSpaceCarried",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Amount of spaceAfter added to the previous line (used in calculating effective paragraphSpaceBefore/paragraphSpaceAfter",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_verticalSpaceCarried",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Amount of vertical space added to the previous element (used in calculating vertical space collapse) *",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_blockProgression",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "BlockProgression - vertical horizontal etc. @see text.formats.BlockProgression",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_atColumnStart",
        "return": "Boolean",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Are we at the top of the column?",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_textIndent",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Current textIndent amount, 0 if line is not the first",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_contentLogicalExtent",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Maximum horizontal extension from left/right edge of the parcel.  Alignment width for the parcel when measuring.",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_contentCommittedExtent",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Commited extent any lines needing additional alignment must update this number",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_contentCommittedHeight",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Committed logical height from floats",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_workingContentLogicalExtent",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Maximum horizontal extension for the current line from left/right edge of the parcel.",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_workingContentExtent",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_workingContentHeight",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_workingTotalDepth",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_workingParcelIndex",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_workingParcelLogicalTop",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "logical top of the parcel, for the line in progress",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_accumulatedMinimumStart",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Minimum starting coord for parcel bounds",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_parcelLogicalTop",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Minimum starting coord for parcel bounds",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_parcelLeft",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Minimum left edge coordinate across all the parcels in a controller",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_parcelTop",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Minimum top edge across all the parcels in a controller",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_parcelRight",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Maximum right edge coordinate across all the parcels in a controller",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_parcelBottom",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Maximum bottom edge coordinate across all the parcels in a controller",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_textFlow",
        "return": "org.apache.royale.textLayout.elements.ITextFlow",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "owning textFlow of current compose",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_flowComposer",
        "return": "org.apache.royale.textLayout.compose.IFlowComposer",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "flowComposer of current compose",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_rootElement",
        "return": "org.apache.royale.textLayout.elements.IContainerFormattedElement",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "rootElement of current compose",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_stopComposePos",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "position to stop composing at",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_startController",
        "return": "org.apache.royale.textLayout.container.IContainerController",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "First damaged controller to begin composing",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_startComposePosition",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Beginning composition position.  Note this gets cleared once its been passed",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_controllerVisibleBoundsXTW",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Visible area of the current controller. Used to determine which lines are going to be in view.",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_controllerVisibleBoundsYTW",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_controllerVisibleBoundsWidthTW",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_controllerVisibleBoundsHeightTW",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_forceILGs",
        "return": "Boolean",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_lastGoodStart",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_linePass",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_paragraphContainsVisibleLines",
        "return": "Boolean",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_savedLineSlug",
        "return": "org.apache.royale.textLayout.compose.Slug",
        "namespace": "protected",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_lineSlug",
        "return": "org.apache.royale.textLayout.compose.Slug",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_floatSlug",
        "return": "org.apache.royale.textLayout.compose.Slug",
        "namespace": "protected",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_pushInFloats",
        "return": "Array",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curParcel",
        "return": "org.apache.royale.textLayout.compose.Parcel",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Parcel we are composing - used for keeping track of when it changes b/c parcelList.parcel may have advanced",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curParcelStart",
        "return": "int",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Start position of _curParcel",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curInteractiveObjects",
        "return": "org.apache.royale.utils.ObjectMap",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "For interactive objects",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_measuring",
        "return": "Boolean",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Are we measuring",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_curLine",
        "return": "org.apache.royale.textLayout.compose.ITextFlowLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_previousLine",
        "return": "org.apache.royale.text.engine.ITextLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_listItemElement",
        "return": "org.apache.royale.textLayout.elements.IListItemElement",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "createParcelList",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.compose.ParcelList",
          "params": []}
      ,
      { "type": "method",
        "qname": "releaseParcelList",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "list", "type": "org.apache.royale.textLayout.compose.ParcelList"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.container.IContainerController",
        "qname": "startController",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Starting controller for skipping ahead",
        "tags": [
          ]},
      { "type": "method",
        "qname": "initializeForComposer",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Initialize for a composition that will compose up through the controllerEndIndex, or all the way to the end of the flow",
        "tags": [
        {  "tagName": "param",
               "values": ["composer", "composeToPosition  -1 means not specified.  0 means request to compose nothing, >0 specifies a position to force compose to", "controllerStartIndex index of the first controller to compose for, derived class allows -1 for default", "controllerEndIndex index of the last controller to compose for, or -1 to compose through all controllers"]}  ],
          "return": "void",
          "params": [{ "name": "composer", "type": "org.apache.royale.textLayout.compose.IFlowComposer"},
        { "name": "composeToPosition", "type": "int"},
        { "name": "controllerStartIndex", "type": "int"},
        { "name": "controllerEndIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "endTableBlock",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called when we are finished composing a line, and it is committed. Handler for derived classes to override default behavior.",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "block", "type": "org.apache.royale.textLayout.compose.ITextFlowTableBlock"}]}
      ,
      { "type": "method",
        "qname": "composeTextFlow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Compose the flow into the text container. Starts at the root element, and composes elements until either there are no more elements, or the text container is full. It will compose only the lines which are marked invalid, so that existing lines that are unchanged are not recomposed.",
        "tags": [
          ],
          "return": "int",
          "params": [{ "name": "textFlow", "type": "org.apache.royale.textLayout.elements.ITextFlow"},
        { "name": "composeToPosition", "type": "int"},
        { "name": "controllerEndIndex", "type": "int"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "releaseLineCreationData",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Release line creation data during this compose",
        "tags": [
          ]},
      { "type": "method",
        "qname": "composeInternal",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "composeRoot", "type": "org.apache.royale.textLayout.elements.IFlowGroupElement"},
        { "name": "absStart", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getFirstIndentCharPos",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "int",
          "params": [{ "name": "paragraph", "type": "org.apache.royale.textLayout.elements.IParagraphElement"}]}
      ,
      { "type": "method",
        "qname": "composeParagraphElementIntoLines",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Compose the lines in the paragraph. Updates the _paragraphContainsVisibleLines flag if the paragraph contains at least one visible line. Returns true if composition should continue, false if all space is used and composition should stop.",
        "tags": [
          ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "startLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called when we are about to compose a line. Handler for derived classes to override default behavior.",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "isLineVisible",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "endLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called when we are finished composing a line, and it is committed. Handler for derived classes to override default behavior.",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "resetLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "preProcessILGs",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "startPos", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "processFloatsAtLineStart",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "processFloatsAtLineEnd",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "processInlinesAtLineEnd",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "composeInlineGraphicElement",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.IParentIUIBase"]}  ],
          "return": "Boolean",
          "params": [{ "name": "inlineGraphic", "type": "org.apache.royale.textLayout.elements.IInlineGraphicElement"},
        { "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "composeFloat",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "elem", "type": "org.apache.royale.textLayout.elements.IInlineGraphicElement"},
        { "name": "afterLine", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "composeNextLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "org.apache.royale.text.engine.ITextLine",
          "params": []}
      ,
      { "type": "method",
        "qname": "fitLineToParcel",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"},
        { "name": "isNewLine", "type": "Boolean"},
        { "name": "numberLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "calculateLeadingParameters",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Number",
          "params": [{ "name": "curElement", "type": "org.apache.royale.textLayout.elements.IFlowLeafElement"},
        { "name": "curElementStart", "type": "int"},
        { "name": "numberLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "finishComposeLine",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "curTextLine", "type": "org.apache.royale.text.engine.ITextLine"},
        { "name": "numberLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "commitLastLineState",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "curLine", "type": "org.apache.royale.textLayout.compose.ITextFlowLine"}]}
      ,
      { "type": "method",
        "qname": "doVerticalAlignment",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "canVerticalAlign", "type": "Boolean"},
        { "name": "nextParcel", "type": "org.apache.royale.textLayout.compose.Parcel"}]}
      ,
      { "type": "method",
        "qname": "finalParcelAdjustment",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "controller", "type": "org.apache.royale.textLayout.container.IContainerController"}]}
      ,
      { "type": "method",
        "qname": "finishParcel",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "controller", "type": "org.apache.royale.textLayout.container.IContainerController"},
        { "name": "nextParcel", "type": "org.apache.royale.textLayout.compose.Parcel"}]}
      ,
      { "type": "method",
        "qname": "applyVerticalAlignmentToColumn",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "apply vj and adjust the parcel bounds",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "controller", "type": "org.apache.royale.textLayout.container.IContainerController"},
        { "name": "vjType", "type": "String"},
        { "name": "lines", "type": "Array"},
        { "name": "beginIndex", "type": "int"},
        { "name": "numLines", "type": "int"},
        { "name": "beginFloatIndex", "type": "int"},
        { "name": "endFloatIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "finishController",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "controller", "type": "org.apache.royale.textLayout.container.IContainerController"}]}
      ,
      { "type": "method",
        "qname": "advanceToNextParcel",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "advanceToNextContainer",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Go to next container",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "parcelHasChanged",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "This is called when the parcel has changed",
        "tags": [
        {  "tagName": "param",
               "values": ["oldParcel - the parcel we had before (you can get the new parcel from the parcel list)"]}  ],
          "return": "void",
          "params": [{ "name": "newParcel", "type": "org.apache.royale.textLayout.compose.Parcel"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.compose.ISWFContext",
        "qname": "swfContext",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "pushInsideListItemMargins",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "numberLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "popInsideListItemMargins",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "numberLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ]
  ,
  "events": [
  ]
  }






