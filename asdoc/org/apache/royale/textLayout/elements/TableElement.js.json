{ "type": "class",
  "qname": "org.apache.royale.textLayout.elements.TableElement",
  "baseClassname": "org.apache.royale.textLayout.elements.TableFormattedElement"
  ,
    "description": "The TableElement class is used for grouping together items into a table. A TableElement's children must be of type TableRowElement, TableColElement, TableColGroupElement, TableBodyElement.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "x",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "y",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "org.apache.royale.textLayout.elements.TableElement",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "String",
        "qname": "className",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "abstract",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "@private",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "String",
        "qname": "defaultTypeName",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "@private",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "cellSpacing",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "TextLayoutFormat: cellSpacing specifies how much space the user agent should leave between the left side of the table and the left-hand side of the leftmost column, the top of the table and the top side of the topmost row, and so on for the right and bottom of the table. The attribute also specifies the amount of space to leave between cells. <p>Legal values are numbers from 0 to 1000 and FormatValue.INHERIT.</p> <p>Default value is undefined indicating not set.</p> <p>If undefined during the cascade this property will have a value of 0.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5", "Flash 10", "AIR 1.5"]},
            {  "tagName": "throws",
               "values": ["RangeError when set value is not within range for this property", "RangeError when set value is not within range for this property"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "numRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Total number of rows in the table. If set to a value lower than the current number of rows the rows at the end of the table are removed. If the set to a value greater than the current number of rows additional rows are added to the table.",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "numColumns",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Total number of columns in the table. If set to a value lower than the current number of columns the columns at the end of the table are removed. If the set to a value greater than the current number of columns additional columns are added to the table.",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "numCells",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Total number of cells",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
        "qname": "defaultRowFormat",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Gets the row format for new rows.",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
        "qname": "defaultColumnFormat",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Gets the column format for new columns.",
        "tags": [
          ]},
      { "type": "method",
        "qname": "addChild",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Adds a table cell element to the table.",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []}  ],
          "return": "org.apache.royale.textLayout.elements.IFlowElement",
          "params": [{ "name": "child", "type": "org.apache.royale.textLayout.elements.IFlowElement"}]}
      ,
      { "type": "method",
        "qname": "removeChild",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Removes a table cell element from the table.",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []}  ],
          "return": "org.apache.royale.textLayout.elements.IFlowElement",
          "params": [{ "name": "child", "type": "org.apache.royale.textLayout.elements.IFlowElement"}]}
      ,
      { "type": "method",
        "qname": "addRow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Add a row at the end of the table. You would use this if you want to add a row without changing the table cells.",
        "tags": [
        {  "tagName": "see",
               "values": ["addRowAt", "insertRow", "insertRowAt"]}  ],
          "return": "void",
          "params": [{ "name": "format", "type": "org.apache.royale.textLayout.formats.ITextLayoutFormat"}]}
      ,
      { "type": "method",
        "qname": "addRowAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Add a row at the index specified.",
        "tags": [
        {  "tagName": "see",
               "values": ["addRow", "insertRow", "insertRowAt"]}  ],
          "return": "void",
          "params": [{ "name": "idx", "type": "int"},
        { "name": "format", "type": "org.apache.royale.textLayout.formats.ITextLayoutFormat"}]}
      ,
      { "type": "method",
        "qname": "addColumn",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adds a column. You would use this if you want to add a column without changing the table cells. The cells would reflow, so a cell in row 2 might move up to row 1.",
        "tags": [
        {  "tagName": "see",
               "values": ["addColumnAt", "insertColumn", "insertColumnAt"]}  ],
          "return": "void",
          "params": [{ "name": "format", "type": "org.apache.royale.textLayout.formats.ITextLayoutFormat"}]}
      ,
      { "type": "method",
        "qname": "addColumnAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adds a column at the index specified.",
        "tags": [
        {  "tagName": "see",
               "values": ["addColumn", "insertColumn", "insertColumnAt"]}  ],
          "return": "void",
          "params": [{ "name": "idx", "type": "int"},
        { "name": "format", "type": "org.apache.royale.textLayout.formats.ITextLayoutFormat"}]}
      ,
      { "type": "method",
        "qname": "getColumnAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the column at the index specified or null if the index is out of range.",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableColElement",
          "params": [{ "name": "columnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getRowAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the row at the index specified or null if the index is out of range.",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableRowElement",
          "params": [{ "name": "rowIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getRowIndex",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Return the index of the row provided or -1 if the row is not found.",
        "tags": [
          ],
          "return": "int",
          "params": [{ "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"}]}
      ,
      { "type": "method",
        "qname": "getCellsForRow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of the cells for the row specified.",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": [{ "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"}]}
      ,
      { "type": "method",
        "qname": "getCellsForRowArray",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of the cells for the row specified.",
        "tags": [
          ],
          "return": "Array",
          "params": [{ "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"}]}
      ,
      { "type": "method",
        "qname": "getCellsForRowAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of the cells for the row at the specified index.",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getCellsForRowAtArray",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns an array of the cells for the row specified.",
        "tags": [
          ],
          "return": "Array",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getCellsForColumn",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a Vector of the TableCellElements for the column specified.",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": [{ "name": "column", "type": "org.apache.royale.textLayout.elements.ITableColElement"}]}
      ,
      { "type": "method",
        "qname": "getCellsForColumnAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a Vector of the TableCellElements for the column at the specified index.",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "hasMergedCells",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Convenience method for checking if table has merged cells",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "insertColumn",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Inserts a column at the end of the table. If a column is not provided one is created.",
        "tags": [
        {  "tagName": "see",
               "values": ["addColumn", "addColumnAt", "insertColumnAt"]}  ],
          "return": "Boolean",
          "params": [{ "name": "column", "type": "org.apache.royale.textLayout.elements.TableColElement"},
        { "name": "cells", "type": "Array"}]}
      ,
      { "type": "method",
        "qname": "insertColumnAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Inserts a column at the column specified. If the column is not provided it creates a new column containing the cells supplied or creates the cells based on the number of rows in the table.",
        "tags": [
        {  "tagName": "see",
               "values": ["addColumn", "addColumnAt", "insertColumn"]}  ],
          "return": "Boolean",
          "params": [{ "name": "idx", "type": "int"},
        { "name": "column", "type": "org.apache.royale.textLayout.elements.TableColElement"},
        { "name": "cells", "type": "Array"}]}
      ,
      { "type": "method",
        "qname": "insertRow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Inserts a row at the end of the table. If a row is not provided one is created.",
        "tags": [
        {  "tagName": "see",
               "values": ["insertRowAt"]}  ],
          "return": "Boolean",
          "params": [{ "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"},
        { "name": "cells", "type": "Array"}]}
      ,
      { "type": "method",
        "qname": "insertRowAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Inserts a row at the index specified. If the row is not provided it creates a new row containing the cells supplied or creates the cells based on the number of columns in the table.",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "idx", "type": "int"},
        { "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"},
        { "name": "cells", "type": "Array"}]}
      ,
      { "type": "method",
        "qname": "removeRow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the row",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableRowElement",
          "params": [{ "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"}]}
      ,
      { "type": "method",
        "qname": "removeRowWithContent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the row and the cells it contains.",
        "tags": [
          ],
          "return": "Array",
          "params": [{ "name": "row", "type": "org.apache.royale.textLayout.elements.ITableRowElement"}]}
      ,
      { "type": "method",
        "qname": "removeRowAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the row at the index specified.",
        "tags": [
        {  "tagName": "see",
               "values": ["removeRowWithContentAt"]}  ],
          "return": "org.apache.royale.textLayout.elements.ITableRowElement",
          "params": [{ "name": "idx", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "removeRowWithContentAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the row at the index specified and the cells it contains.",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "Array",
          "params": [{ "name": "idx", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "removeAllRowsWithContent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes all the rows and the cells.",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "removeAllRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes all the rows. Does not remove the cells.",
        "tags": [
        {  "tagName": "see",
               "values": ["removeAllRowsWithContent"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "removeColumn",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the column",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableColElement",
          "params": [{ "name": "column", "type": "org.apache.royale.textLayout.elements.ITableColElement"}]}
      ,
      { "type": "method",
        "qname": "removeColumnWithContent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the column and the cells it contains.",
        "tags": [
          ],
          "return": "Array",
          "params": [{ "name": "column", "type": "org.apache.royale.textLayout.elements.ITableColElement"}]}
      ,
      { "type": "method",
        "qname": "removeColumnAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the column at the index specified",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableColElement",
          "params": [{ "name": "idx", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "removeColumnWithContentAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the column at the index specified and the cells it contains.",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "Array",
          "params": [{ "name": "idx", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "removed",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Remove all cells",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "normalizeCells",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the row and column indices of the cells in the table to match their logical position as described by the table columns and rows",
        "tags": [
        {  "tagName": "suppress",
               "values": ["{uselessCode}"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "setColumnWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set the width of the specified column. The value can be a number or percent.",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "columnIndex", "type": "int"},
        { "name": "value", "type": "*"}]}
      ,
      { "type": "method",
        "qname": "setRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Set the height of the specified row. The value can be a number or percent.",
        "tags": [
          ],
          "return": "Boolean",
          "params": [{ "name": "rowIdx", "type": "int"},
        { "name": "value", "type": "*"}]}
      ,
      { "type": "method",
        "qname": "getColumnWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Get the width of the column.",
        "tags": [
          ],
          "return": "*",
          "params": [{ "name": "columnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "composeCells",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sizes and positions the cells in the table.",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "getHeaderRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "returns the header rows for composition",
        "tags": [
          ],
          "return": "Vector.<Vector.<org.apache.royale.textLayout.elements.ITableCellElement>>",
          "params": []}
      ,
      { "type": "method",
        "qname": "getFooterRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "returns the footer rows for composition",
        "tags": [
          ],
          "return": "Vector.<Vector.<org.apache.royale.textLayout.elements.ITableCellElement>>",
          "params": []}
      ,
      { "type": "method",
        "qname": "getBodyRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "returns the body rows (sans header and footer cells) for composition",
        "tags": [
          ],
          "return": "Vector.<Vector.<org.apache.royale.textLayout.elements.ITableCellElement>>",
          "params": []}
      ,
      { "type": "method",
        "qname": "getNextRow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "returns a vector of table cells in the next row during composition",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": []}
      ,
      { "type": "method",
        "qname": "getNextCell",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the next table cell after the supplied table cell",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableCellElement",
          "params": [{ "name": "tableCell", "type": "org.apache.royale.textLayout.elements.ITableCellElement"}]}
      ,
      { "type": "method",
        "qname": "getPreviousCell",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the previous table cell after the supplied table cell",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "org.apache.royale.textLayout.elements.ITableCellElement",
          "params": [{ "name": "tableCell", "type": "org.apache.royale.textLayout.elements.ITableCellElement"}]}
      ,
      { "type": "method",
        "qname": "getCellAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the table cell at the row and column specified.",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "org.apache.royale.textLayout.elements.ITableCellElement",
          "params": [{ "name": "rowIndex", "type": "int"},
        { "name": "columnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getHeaderHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Computed height of the header cells",
        "tags": [
          ],
          "return": "Number",
          "params": []}
      ,
      { "type": "method",
        "qname": "getFooterHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Computed height of the footer cells",
        "tags": [
          ],
          "return": "Number",
          "params": []}
      ,
      { "type": "method",
        "qname": "normalizeColumnWidths",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Accepts a suggested table width and calculates the column widths.",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "suggestedWidth", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getCells",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of all the table cell elements in the table.",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": []}
      ,
      { "type": "method",
        "qname": "getCellsArray",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns an array of all the table cells.",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.textLayout.elements.ITableCellElement"]}  ],
          "return": "Array",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "width",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the table width",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "hasCellDamage",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Indicates elements in the table have been modified and the table must be recomposed.",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "uint",
        "qname": "headerRowCount",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the number of header rows in the table",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "uint",
        "qname": "footerRowCount",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the number of footer rows in the table",
        "tags": [
          ]},
      { "type": "method",
        "qname": "getFirstBlock",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Gets the first TextFlowTableBlock in the table.",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
          "params": []}
      ,
      { "type": "method",
        "qname": "getNextBlock",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Gets the next TextFlowTableBlock.",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "textLength",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Gets the total atom length of this flow element in the text flow.",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []}  ]},
      { "type": "method",
        "qname": "getText",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "String",
          "params": [{ "name": "relativeStart", "type": "int"},
        { "name": "relativeEnd", "type": "int"},
        { "name": "paragraphSeparator", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "getCellsInRange",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of table cell elements in the given cell range.",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.elements.ITableCellElement>",
          "params": [{ "name": "anchorCoords", "type": "org.apache.royale.textLayout.elements.CellCoordinates"},
        { "name": "activeCoords", "type": "org.apache.royale.textLayout.elements.CellCoordinates"},
        { "name": "block", "type": "org.apache.royale.textLayout.compose.ITextFlowTableBlock"}]}
      ,
      { "type": "method",
        "qname": "findCell",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Finds the cell at the specified cell coordinates or null if no cell is found.",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableCellElement",
          "params": [{ "name": "coords", "type": "org.apache.royale.textLayout.elements.CellCoordinates"}]}
      ,
      { "type": "method",
        "qname": "addCellToBlock",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adds the table cell container to the table block specified.",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "cell", "type": "org.apache.royale.textLayout.elements.ITableCellElement"},
        { "name": "block", "type": "org.apache.royale.textLayout.compose.ITextFlowTableBlock"}]}
      ,
      { "type": "method",
        "qname": "getCellBlock",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the table block for the given table cell.",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.compose.ITextFlowTableBlock",
          "params": [{ "name": "cell", "type": "org.apache.royale.textLayout.elements.ITableCellElement"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Vector.<org.apache.royale.textLayout.compose.ITextFlowTableBlock>",
        "qname": "tableBlocks",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of the table blocks.",
        "tags": [
          ]},
      { "type": "method",
        "qname": "getTableBlocksInRange",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a vector of the table blocks in the specified cell range.",
        "tags": [
          ],
          "return": "Vector.<org.apache.royale.textLayout.compose.ITextFlowTableBlock>",
          "params": [{ "name": "start", "type": "org.apache.royale.textLayout.elements.CellCoordinates"},
        { "name": "end", "type": "org.apache.royale.textLayout.elements.CellCoordinates"}]}
      ,
      { "type": "method",
        "qname": "findLeaf",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.IFlowLeafElement",
          "params": [{ "name": "relativePosition", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getLastLeaf",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.IFlowLeafElement",
          "params": []}
      ,
      { "type": "method",
        "qname": "getFirstLeaf",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.IFlowLeafElement",
          "params": []}
      ,
      { "type": "method",
        "qname": "createContentElement",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "createRowElement",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates and returns a default row",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.ITableRowElement",
          "params": [{ "name": "index", "type": "int"},
        { "name": "defaultRowFormat", "type": "org.apache.royale.textLayout.formats.ITextLayoutFormat"}]}
      ,
      { "type": "method",
        "qname": "createColumnElement",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates and returns a default column",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.elements.TableColElement",
          "params": [{ "name": "index", "type": "int"},
        { "name": "defaultColumnFormat", "type": "org.apache.royale.textLayout.formats.ITextLayoutFormat"}]}
      ,
      { "type": "method",
        "qname": "normalizeRange",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "normalizeStart", "type": "uint"},
        { "name": "normalizeEnd", "type": "uint"}]}
      ]
  ,
  "events": [
  ]
  }



