{ "type": "class",
  "qname": "org.apache.royale.textLayout.container.TextContainerManager",
  "baseClassname": "org.apache.royale.events.EventDispatcher"
  ,
    "description": "Manages text in a container. Assumes that it manages all children of the container. Consider using TextContainerManager for better performance in cases where there is a one container per ITextFlow, and the ITextFlow is not the main focus, is static text, or is infrequently selected. Good for text in form fields, for example.",
  "tags": [
  {  "tagName": "see",
         "values": ["ContainerController"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.elements.IConfiguration",
        "qname": "defaultConfiguration",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The default configuration for this TextContainerManager. Column and padding attributes are set to <code>FormatValue.INHERIT</code>.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.elements.IConfiguration IConfiguration", "org.apache.royale.textLayout.formats.FormatValue#INHERIT FormatValue.INHERIT"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "sourceState",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@private",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "composeState",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@private",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "handlersState",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@private",
        "tags": [
          ]},
      { "type": "method",
        "qname": "org.apache.royale.textLayout.container.TextContainerManager",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor function - creates a TextContainerManager instance.  For best results: <ol> <li>Start with TextContainerManager.defaultConfiguration and modify it</li> <li>Share the same Configuration among many InputManagers</li> </ol>",
        "tags": [
        {  "tagName": "param",
               "values": ["container The DisplayObjectContainer in which to manage the text lines.", "config - The IConfiguration instance to use with this TextContainerManager instance."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "container", "type": "org.apache.royale.core.IParentIUIBase"},
        { "name": "configuration", "type": "org.apache.royale.textLayout.elements.IConfiguration"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.IParentIUIBase",
        "qname": "container",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the container (DisplayObjectContainer) that holds the text that this TextContainerManager manages.",
        "tags": [
        {  "tagName": "see",
               "values": ["ContainerController#container"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "isDamaged",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns <code>true</code> if the content needs composing.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["<code>true</code> if the content needs composing; <code>false</code> otherwise."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "editingMode",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Editing mode of this TextContainerManager. Modes are reading only, reading and selection permitted, and editing (reading, selection, and writing)  permitted. Use the constant values of the EditingMode class to set this property. <p>Default value is READ_WRITE.</p>",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.edit.EditingMode EditingMode"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "getText",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the current text using a separator between paragraphs. The separator can be specified with the <code>separator</code> argument. The default value of the <code>separator</code> argument is the Unicode character <code>'PARAGRAPH SEPARATOR' (U+2029)</code>.  <p>Calling the setter discards any attached ITextFlow. Any selection is lost.</p>",
        "tags": [
        {  "tagName": "param",
               "values": ["separator String to set between paragraphs."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "String",
          "params": [{ "name": "separator", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "setText",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the <code>text</code> property to the specified String.  Discards any attached ITextFlow. Any selection is lost.",
        "tags": [
        {  "tagName": "param",
               "values": ["str the String to set"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "text", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.textLayout.formats.ITextLayoutFormat",
        "qname": "hostFormat",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the format when display just a string.  If displaying a ITextFlow this has no immediate effect.  The supplied ITextLayoutFormat is not copied.  Modifying it without calling this setter has indeterminate effects.",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "compositionWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the horizontal extent allowed for text inside the container. The value is specified in pixels.  <p>After setting this property, the text in the container is damaged and requires composing.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "compositionHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the vertical extent allowed for text inside the container. The value is specified in pixels. <p>After setting this property, the text in the container is damaged and requires composing.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.elements.IConfiguration",
        "qname": "configuration",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The Configuration object for this TextContainerManager.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.IConfiguration IConfiguration"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "getContentBounds",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a rectangle that shows where the last call to either the <code>compose()</code> method or the <code>updateContainer()</code> method placed the text.",
        "tags": [
        {  "tagName": "see",
               "values": ["#compose()", "#updateContainer()"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["the bounds of the content"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.geom.Rectangle",
          "params": []}
      ,
      { "type": "method",
        "qname": "getTextFlow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The current ITextFlow. Converts this to a full ITextFlow representation if it isn't already one.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["the current ITextFlow object"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.elements.ITextFlow",
          "params": []}
      ,
      { "type": "method",
        "qname": "setTextFlow",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets a ITextFlow into this TextContainerManager replacing any existing ITextFlow and discarding the current text.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "textFlow", "type": "org.apache.royale.textLayout.elements.ITextFlow"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "horizontalScrollPolicy",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Controls whether the factory generates all text lines or stops when the container bounds are filled.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.textLayout.container.ContainerController#horizontalScrollPolicy"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "verticalScrollPolicy",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Controls whether the factory generates all text lines or stops when the container bounds are filled.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.textLayout.container.ContainerController#verticalScrollPolicy"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "horizontalScrollPosition",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.textLayout.container.ContainerController#horizontalScrollPosition"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "verticalScrollPosition",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.textLayout.container.ContainerController#verticalScrollPosition"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "getScrollDelta",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.textLayout.container.ContainerController#getScrollDelta()"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "numLines", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "scrollToRange",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.textLayout.container.ContainerController#scrollToRange()"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "activePosition", "type": "int"},
        { "name": "anchorPosition", "type": "int"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.textLayout.compose.ISWFContext",
        "qname": "swfContext",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Optional ISWFContext instance used to make FTE calls as needed in the proper swf context.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.compose.ISWFContext"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "resetLine",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "textLine", "type": "org.apache.royale.text.engine.ITextLine"}]}
      ,
      { "type": "method",
        "qname": "beginInteraction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the current ISelectionManager instance. Converts to ITextFlow instance and creates one if necessary.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.edit.ISelectionManager ISelectionManager"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["the interaction manager for this TextContainerManager instance."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.edit.ISelectionManager",
          "params": []}
      ,
      { "type": "method",
        "qname": "endInteraction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Terminates interaction.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.edit.ISelectionManager ISelectionManager"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "invalidateUndoManager",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Call this if you are editing, and want to reset the undo manager used for editing.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "invalidateSelectionFormats",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Call this if you change the selection formats (SelectionFormat) and want the interactionManager to update.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "createSelectionManager",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Create a selection manager to use for selection. Override this method if you have a custom SelectionManager that you want to use in place of the default.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["a new SelectionManager instance."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.edit.ISelectionManager",
          "params": []}
      ,
      { "type": "method",
        "qname": "createEditManager",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Create an edit manager to use for editing. Override this method if you have a custom EditManager that you want to use in place of the default.",
        "tags": [
        {  "tagName": "param",
               "values": ["an IUndoManager instance for the EditManager being created."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["the editing manager for this TextContainerManager instance."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.edit.IEditManager",
          "params": [{ "name": "undoManager", "type": "org.apache.royale.utils.undo.IUndoManager"}]}
      ,
      { "type": "method",
        "qname": "getLineAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Return the ITextLine at the index from array of composed lines.",
        "tags": [
        {  "tagName": "param",
               "values": ["index Finds the line at this index position in the text."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["the ITextLine that occurs at the specified index."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.text.engine.ITextLine",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "numLines",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.compose.IFlowComposer#numLines",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "compose",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Composes the container text; calls either the factory or <code>updateAllControllers()</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "updateContainer",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Updates the display; calls either the factory or updateAllControllers().",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["true if anything changed."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "drawBackgroundAndSetScrollRect",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns <code>true</code> if it has filled in the container's scrollRect property. This method enables you to test whether <code>scrollRect</code> is set without actually accessing the <code>scrollRect</code> property which can possibly create a  performance issue. <p>Override this method to draw a background or a border.  Overriding this method can be tricky as the scrollRect <bold>must</bold> be set as specified.</p>",
        "tags": [
        {  "tagName": "param",
               "values": ["scrollX The starting horizontal position of the scroll rectangle.", "scrollY The starting vertical position of the scroll rectangle."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["<code>true</code> if it has created the <code>scrollRect</code> object."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": [{ "name": "scrollX", "type": "Number"},
        { "name": "scrollY", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getFocusedSelectionFormat",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the focusedSelectionFormat - by default get it from the configuration. This can be overridden in the subclass to supply a different SelectionFormat",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.edit.SelectionFormat",
          "params": []}
      ,
      { "type": "method",
        "qname": "getInactiveSelectionFormat",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the inactiveSelectionFormat - by default get it from the configuration This can be overridden in the subclass to supply a different SelectionFormat",
        "tags": [
          ],
          "return": "org.apache.royale.textLayout.edit.SelectionFormat",
          "params": []}
      ,
      { "type": "method",
        "qname": "getUnfocusedSelectionFormat",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the unfocusedSelectionFormat - by default get it from the configuration You can override this method in the subclass to supply a different SelectionFormat.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.edit.SelectionFormat",
          "params": []}
      ,
      { "type": "method",
        "qname": "getUndoManager",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the undo manager to use. By default, creates a unique undo manager. You can override this method in the subclass if you want to customize the undo manager (for example, to use a shared undo manager for multiple TextContainerManager instances).",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["new IUndoManager instance."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.utils.undo.IUndoManager",
          "params": []}
      ,
      { "type": "method",
        "qname": "createContextMenu",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a ContextMenu for the TextContainerManager. Use the methods of the ContextMenu class to add items to the menu. <p>You can override this method to define a custom context menu.</p>",
        "tags": [
        {  "tagName": "see",
               "values": ["flash.ui.ContextMenu ContextMenu"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["the created context menu."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.dummy.ContextMenu",
          "params": []}
      ,
      { "type": "method",
        "qname": "editHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#editHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.Event Event"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "keyDownHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#keyDownHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.KeyboardEvent#KEY_DOWN KeyboardEvent.KEY_DOWN"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.KeyboardEvent"}]}
      ,
      { "type": "method",
        "qname": "keyUpHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#keyUpHandler().",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.KeyboardEvent#KEY_UP KeyboardEvent.KEY_UP"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.KeyboardEvent"}]}
      ,
      { "type": "method",
        "qname": "keyFocusChangeHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#keyFocusChangeHandler().",
        "tags": [
        {  "tagName": "param",
               "values": ["event the FocusChange event"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "textInputHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#textInputHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.TextEvent#TEXT_INPUT TextEvent.TEXT_INPUT"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.text.events.TextEvent"}]}
      ,
      { "type": "method",
        "qname": "imeStartCompositionHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Processes the <code>IME_START_COMPOSITION</code> event when the client manages events.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.IMEEvent#IME_START_COMPOSITION IMEEvent.IME_START_COMPOSITION"]},
            {  "tagName": "param",
               "values": ["event  The IMEEvent object."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10.1", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.text.events.IMEEvent"}]}
      ,
      { "type": "method",
        "qname": "softKeyboardActivatingHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Processes the <code>SOFT_KEYBOARD_ACTIVATING</code> event when the client manages events.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.SoftKeyboardEvent#SOFT_KEYBOARD_ACTIVATING SoftKeyboardEvent.SOFT_KEYBOARD_ACTIVATING"]},
            {  "tagName": "param",
               "values": ["event  The SoftKeyboardEvent object."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "mouseDownHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#mouseDownHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#MOUSE_DOWN MouseEvent.MOUSE_DOWN"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "mouseMoveHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#mouseMoveHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#MOUSE_MOVE MouseEvent.MOUSE_MOVE"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "mouseUpHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#mouseUpHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#MOUSE_UP MouseEvent.MOUSE_UP"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "mouseDoubleClickHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#mouseDoubleClickHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#DOUBLE_CLICK MouseEvent.DOUBLE_CLICK"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "mouseOverHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Process a mouseOver event.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#MOUSE_OVER MouseEvent.MOUSE_OVER"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "mouseOutHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#mouseOutHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#MOUSE_OUT MouseEvent.MOUSE_OUT"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "focusInHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Process a focusIn event.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "focusOutHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#focusOutHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.FocusEvent#FOCUS_OUT FocusEvent.FOCUS_OUT"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "activateHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#activateHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.Event#ACTIVATE Event.ACTIVATE"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "deactivateHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#deactivateHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.Event#DEACTIVATE Event.DEACTIVATE"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "focusChangeHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#focusChangeHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.FocusEvent#KEY_FOCUS_CHANGE FocusEvent.KEY_FOCUS_CHANGE", "org.apache.royale.events.FocusEvent#MOUSE_FOCUS_CHANGE FocusEvent.MOUSE_FOCUS_CHANGE"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "menuSelectHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#menuSelectHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.ContextMenuEvent#MENU_SELECT ContextMenuEvent.MENU_SELECT"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.textLayout.events.ContextMenuEvent"}]}
      ,
      { "type": "method",
        "qname": "mouseWheelHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@copy org.apache.royale.textLayout.container.ContainerController#mouseWheelHandler()",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.events.MouseEvent#MOUSE_WHEEL MouseEvent.MOUSE_WHEEL"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "beginMouseCapture",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called to request clients to begin the forwarding of mouseup and mousemove events from outside a security sandbox.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "endMouseCapture",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called to inform clients that the the forwarding of mouseup and mousemove events from outside a security sandbox is no longer needed.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "mouseUpSomewhere",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Client call to forward a mouseUp event from outside a security sandbox.  Coordinates of the mouse up are not needed.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "e", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "mouseMoveSomewhere",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Client call to forward a mouseMove event from outside a security sandbox.  Coordinates of the mouse move are not needed.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "e", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "preserveSelectionOnSetText",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "@public It's <code>_preserveSelectionOnSetText</code> to decide whether or not TLF preserve selection state during setText().  The default value is false, which means <code>setText()</code> does not preserve original selection state, <code>setText()</code> acts as what it was. If <code>_preserveSelectionOnSetText</code> is true, the original selection state is preserved during <code>setText()</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  { "qname": "flowOperationBegin",
        "type": "org.apache.royale.textLayout.events.FlowOperationEvent"
      ,
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["org.apache.royale.textLayout.events.FlowOperationEvent.FLOW_OPERATION_BEGIN"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "flowOperationEnd",
        "type": "org.apache.royale.textLayout.events.FlowOperationEvent"
      ,
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["org.apache.royale.textLayout.events.FlowOperationEvent.FLOW_OPERATION_END"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "flowOperationComplete",
        "type": "org.apache.royale.textLayout.events.FlowOperationEvent"
      ,
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["org.apache.royale.textLayout.events.FlowOperationEvent.FLOW_OPERATION_COMPLETE"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "selectionChange",
        "type": "org.apache.royale.textLayout.events.SelectionEvent"
      ,
          "description": "Dispatched whenever the selection is changed.  Primarily used to update selection-dependent user interface.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "compositionComplete",
        "type": "org.apache.royale.textLayout.events.CompositionCompleteEvent"
      ,
          "description": "Dispatched after every recompose.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "mouseDown",
        "type": "org.apache.royale.textLayout.events.FlowElementMouseEvent"
      ,
          "description": "Dispatched when the mouse is pressed down over any link.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "mouseUp",
        "type": "org.apache.royale.textLayout.events.FlowElementMouseEvent"
      ,
          "description": "Dispatched when the mouse is released over any link.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "mouseMove",
        "type": "org.apache.royale.textLayout.events.FlowElementMouseEvent"
      ,
          "description": "Dispatched when the mouse passes over any link.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "rollOver",
        "type": "org.apache.royale.textLayout.events.FlowElementMouseEvent"
      ,
          "description": "Dispatched when the mouse first enters any link.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "rollOut",
        "type": "org.apache.royale.textLayout.events.FlowElementMouseEvent"
      ,
          "description": "Dispatched when the mouse goes out of any link.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "click",
        "type": "org.apache.royale.textLayout.events.FlowElementMouseEvent"
      ,
          "description": "Dispatched when any link is clicked.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "inlineGraphicStatusChanged",
        "type": "org.apache.royale.textLayout.events.StatusChangeEvent"
      ,
          "description": "Dispatched when a InlineGraphicElement is resized due to having width or height as auto or percent and the graphic has finished loading.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "scroll",
        "type": "org.apache.royale.textLayout.events.TextLayoutEvent"
      ,
          "description": "Dispatched by a ITextFlow object after text is scrolled within a controller container.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "damage",
        "type": "org.apache.royale.textLayout.events.DamageEvent"
      ,
          "description": "Dispatched by a ITextFlow object each time it is damaged",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "updateComplete",
        "type": "org.apache.royale.textLayout.events.UpdateCompleteEvent"
      ,
          "description": "Dispatched by a ITextFlow object each time a container has had new DisplayObjects added or updated as a result of composition.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }



