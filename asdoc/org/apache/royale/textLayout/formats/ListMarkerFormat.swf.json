{ "type": "class",
  "qname": "org.apache.royale.textLayout.formats.ListMarkerFormat",
  "baseClassname": "org.apache.royale.textLayout.formats.TextLayoutFormat"
  ,
    "description": "Defines the marker format in a ListItemElement.",
  "tags": [
  {  "tagName": "see",
         "values": ["org.apache.royale.textLayout.elements.ListItemElement"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.property.Property",
        "qname": "counterResetProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.property.Property",
        "qname": "counterIncrementProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.property.Property",
        "qname": "beforeContentProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.property.Property",
        "qname": "contentProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.property.Property",
        "qname": "afterContentProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.textLayout.property.Property",
        "qname": "suffixProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "org.apache.royale.textLayout.formats.ListMarkerFormat",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Create a ListMarkerFormat that holds all the properties possible for a list marker.",
        "tags": [
        {  "tagName": "param",
               "values": ["initialValues An optional instance from which to copy initial values."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "initialValues", "type": "org.apache.royale.textLayout.formats.IListMarkerFormat"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "counterReset",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Controls resetting the value of the counter. <p>Legal values for this property are: <ul> <li><code>none</code> - No reset.</li> <li><code>ordered</code> - Reset the counter to zero.</li> <li><code>ordered <i>integer</i></code> - Reset the counter to <code><i>integer</i></code>.</li> </ul> </p> <p>If <code>undefined</code>, the default value of this property is &quot;none&quot;.</p> <p>Note: The <code>counterReset</code> property is applied before the <code>counterIncrement</code> property.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "throws",
               "values": ["RangeError when set value is not within range for this property"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "counterIncrement",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Controls incrementing the value of the counter. <p>Legal values for this string are: <ul> <li><code>none</code> - No increment.</li> <li><code>ordered</code> - Increment the counter by one.</li> <li><code>ordered <i>integer</i></code> - Increment the counter by <code><i>integer</i></code>.</li> </ul> </p> <p>If undefined, the default vaule of this property is <code>&quot;ordered 1&quot;</code>.</p> <p>Note: The <code>counterIncrement</code> property is applied before the <code>counterReset</code> property.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "throws",
               "values": ["RangeError when set value is not within range for this property"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "content",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Controls the content of the marker. <p>Legal values for this string are: <ul> <li><code>none</code> - No marker.</li> <li><code>counter(ordered)</code> - Display the marker.</li> <li><code>counter(ordered,ListStyleType)</code> - Display the marker but change the listStyleType to the specified value.</li> <li><code>counters(ordered)</code> - Starting from the top-most parent ListElement creating a string of values of the ordered counter in each counters specified listStyleType separated by the suffix for each.  This is used for outline number - for example I.1., I.2. etc.</li> <li><code>counters(ordered,&quot;&lt;string&gt;&quot;)</code> - Similar to the previous value, except the suffix for each ordered counter is replaced by &lt;string&gt;.</li> <li><code>counters(ordered,&quot;&lt;string&gt;&quot;,ListStyleType)</code> - Similar to the previous value, except each counter's <code>listStyleType</code> is replaced with the specified value.</li> </ul> </p> <p>If undefined, the default vaule of this property is <code>&quot;counter(ordered)&quot;</code>.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "throws",
               "values": ["RangeError when set value is not within range for this property"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "beforeContent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies a string that goes before the marker. Default is the empty string.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "afterContent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies a string that goes after the marker. Default is the empty string.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "*",
        "qname": "suffix",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Controls the application of the suffix in the generated text in the ListItemElement. <p>Legal values are: <ul> <li><code>org.apache.royale.textLayout.formats.Suffix.NONE</code> - No suffix.</li> <li><code>org.apache.royale.textLayout.formats.Suffix.AUTO</code> - Follow CSS rules for adding a suffix.</li> </ul> </p> <p>Default value is <code>Suffix.AUTO</code>.</p>",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.textLayout.formats.Suffix"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "throws",
               "values": ["RangeError when set value is not within range for this property"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Object",
        "qname": "description",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Property descriptions accessible by name. @private",
        "tags": [
          ]},
      { "type": "method",
        "qname": "createListMarkerFormat",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Creates a new ListMarkerFormat object. All settings are empty or, optionally, are initialized from the supplied <code>initialValues</code> object.  Otherwise the <code>initialValues</code> parameter is treated like a ObjectMap or Object and iterated over.",
        "tags": [
        {  "tagName": "see",
               "values": ["#defaultFormat"]},
            {  "tagName": "param",
               "values": ["initialValues Optional instance from which to copy initial values. If the object is of type IListMarkerFormat or ITextLayoutFormat, the values are copied."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "return",
               "values": ["The new ListMarkerFormat object."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.textLayout.formats.ListMarkerFormat",
          "params": [{ "name": "initialValues", "type": "Object"}]}
      ]
  ,
  "events": [
  ]
  }
