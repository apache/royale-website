{ "type": "interface",
  "qname": "org.apache.royale.textLayout.edit.ISelectionManager",
"baseInterfaceNames": [
"org.apache.royale.textLayout.edit.IInteractionEventHandler"]
,
    "description": "The ISelectionManager interface defines the interface for handling text selection.  <p>A SelectionManager keeps track of the selected text range and handles events for a TextFlow.</p>  <p>A selection can be either a point selection or a range selection. A point selection is the insertion point and is indicated visually by drawing a cursor. A range selection includes the text between an anchor point and an active point.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["org.apache.royale.textLayout.edit.SelectionManager", "org.apache.royale.textLayout.edit.TextScrap", "org.apache.royale.textLayout.elements.TextFlow"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.elements.ITextFlow",
    "qname": "textFlow",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The TextFlow object managed by this selection manager.  <p>A selection manager manages a single text flow. A selection manager can also be assigned to a text flow by setting the <code>interactionManager</code> property of the TextFlow object.</p>",
    "tags": [
    {  "tagName": "see",
           "values": ["org.apache.royale.textLayout.elements.TextFlow#interactionManager"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.elements.ITableElement",
    "qname": "currentTable",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
      ]},
  { "type": "method",
    "qname": "hasCellRangeSelection",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
      ],
      "return": "Boolean",
      "params": []}
  ,
  { "type": "method",
    "qname": "selectCellRange",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
      ],
      "return": "void",
      "params": [{ "name": "anchorCoords", "type": "org.apache.royale.textLayout.elements.CellCoordinates"},
    { "name": "activeCoords", "type": "org.apache.royale.textLayout.elements.CellCoordinates"}]}
  ,
  { "type": "method",
    "qname": "getCellRange",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
      ],
      "return": "org.apache.royale.textLayout.elements.CellRange",
      "params": []}
  ,
  { "type": "method",
    "qname": "setCellRange",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
      ],
      "return": "void",
      "params": [{ "name": "range", "type": "org.apache.royale.textLayout.elements.CellRange"}]}
  ,
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.elements.CellCoordinates",
    "qname": "anchorCellPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Anchor point of the current cell selection, as coordinates within the table.",
    "tags": [
      ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.elements.CellCoordinates",
    "qname": "activeCellPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Active end of the current cell selection, as coordinates within the table.",
    "tags": [
      ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "absoluteStart",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The text position of the start of the selection, as an offset from the start of the text flow.  <p>The absolute start is the same as either the active or the anchor point of the selection, whichever comes first in the text flow.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "absoluteEnd",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The text position of the end of the selection, as an offset from the start of the text flow.  <p>The absolute end is the same as either the active or the anchor point of the selection, whichever comes last in the text flow.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "selectRange",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Selects a range of text.  <p>If a negative number is passed as either of the parameters, then any existing selection is removed.</p>",
    "tags": [
    {  "tagName": "param",
           "values": ["anchorPosition The anchor point for the new selection, as an absolute position in the TextFlow", "activePosition The active end of the new selection, as an absolute position in the TextFlow"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "anchorPosition", "type": "int"},
    { "name": "activePosition", "type": "int"}]}
  ,
  { "type": "method",
    "qname": "selectAll",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Selects the entire flow.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "selectLastPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Selects the last position in the entire flow.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "selectFirstPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Selects the first position in the entire flow.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "deselect",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Removes any selection from the text flow",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "anchorPosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The anchor point of the selection.  <p>An <em>anchor</em> point is the stable end of the selection. When the selection is extended, the anchor point does not change. The anchor point can be at either the beginning or the end of the selection.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "int",
    "qname": "activePosition",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The active point of the selection.  <p>The <em>active</em> point is the volatile end of the selection. The active point is changed when the selection is modified. The active point can be at either the beginning or the end of the selection.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "hasSelection",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates whether there is a text selection.  <p>Returns <code>true</code> if there is either a range selection or a point selection. By default, when a selection manager is first set up, there is no selection (the start and end are -1).</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Boolean",
      "params": []}
  ,
  { "type": "method",
    "qname": "hasAnySelection",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates whether there is a text or cell selection.  <p>Returns <code>true</code> if there is either a range selection or a point selection. By default, when a selection manager is first set up, there is no selection (the start and end are -1).</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Boolean",
      "params": []}
  ,
  { "type": "accessor",
    "access": "read-only",
    "return": "String",
    "qname": "selectionType",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates the type of selection.  <p>The <code>selectionType</code> describes the kind of selection. It can either be <code>SelectionType.TEXT</code> or <code>SelectionType.CELLS</code></p>",
    "tags": [
    {  "tagName": "see",
           "values": ["org.apache.royale.textLayout.edit.SelectionType"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "isRangeSelection",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates whether the selection covers a range of text.  <p>Returns <code>true</code> if there is a selection that extends past a single position.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "Boolean",
      "params": []}
  ,
  { "type": "method",
    "qname": "getSelectionState",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Gets the SelectionState object of the current selection.",
    "tags": [
    {  "tagName": "see",
           "values": ["org.apache.royale.textLayout.edit.SelectionState"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "org.apache.royale.textLayout.edit.SelectionState",
      "params": []}
  ,
  { "type": "method",
    "qname": "setSelectionState",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Sets the SelectionState object of the current selection.",
    "tags": [
    {  "tagName": "see",
           "values": ["org.apache.royale.textLayout.edit.SelectionState"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "state", "type": "org.apache.royale.textLayout.edit.SelectionState"}]}
  ,
  { "type": "method",
    "qname": "refreshSelection",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Redisplays the selection shapes.  <p><b>Note:</b> You do not need to call this method directly. It is called automatically.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "clearSelection",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Clears the selection shapes.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "setFocus",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Gives the focus to the first container in the selection.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "accessor",
    "access": "read-only",
    "return": "Boolean",
    "qname": "focused",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates whether a container in the text flow has the focus.  <p>The <code>focused</code> property is <code>true</code> if any of the containers in the text flow has key focus.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Boolean",
    "qname": "windowActive",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Indicates whether the window associated with the text flow is active.  <p>The <code>windowActive</code> property is <code>true</code> if the window displaying with the text flow is the active window.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "currentSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The current SelectionFormat object.  <p>The current SelectionFormat object is chosen from the SelectionFormat objects assigned to the <code>unfocusedSelectionFormat</code>, <code>inactiveSelectionFormat</code> and <code>focusedSelectionFormat</code> properties based on the current state of the <code>windowActive</code> and <code>focused</code> properties.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "currentCellSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The current Cell SelectionFormat object.  <p>The current cell SelectionFormat object is chosen from the SelectionFormat objects assigned to the <code>unfocusedCellSelectionFormat</code>, <code>inactiveCellSelectionFormat</code> and <code>focusedCellSelectionFormat</code> properties based on the current state of the <code>windowActive</code> and <code>focused</code> properties.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "getCommonCharacterFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Gets the character format attributes that are common to all characters in the specified text range or current selection.  <p>Format attributes that do not have the same value for all characters in the specified element range or selection are set to <code>null</code> in the returned TextLayoutFormat instance.</p>",
    "tags": [
    {  "tagName": "param",
           "values": ["range The optional range of text for which common attributes are requested. If null, the current selection is used."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "return",
           "values": ["The common character style settings"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "org.apache.royale.textLayout.formats.TextLayoutFormat",
      "params": [{ "name": "range", "type": "org.apache.royale.textLayout.elements.TextRange"}]}
  ,
  { "type": "method",
    "qname": "getCommonParagraphFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Gets the paragraph format attributes that are common to all paragraphs in the specified text range or current selection.  <p>Format attributes that do not have the same value for all paragraphs in the specified element range or selection are set to <code>null</code> in the returned TextLayoutFormat instance.</p>",
    "tags": [
    {  "tagName": "param",
           "values": ["range The optional range of text for which common attributes are requested. If null, the current selection is used."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "return",
           "values": ["The common paragraph style settings"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "org.apache.royale.textLayout.formats.TextLayoutFormat",
      "params": [{ "name": "range", "type": "org.apache.royale.textLayout.elements.TextRange"}]}
  ,
  { "type": "method",
    "qname": "getCommonContainerFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Gets the container format attributes that are common to all containers in the specified text range or current selection.  <p>Format attributes that do not have the same value for all containers in the specified element range or selection are set to <code>null</code> in the returned TextLayoutFormat instance.</p>",
    "tags": [
    {  "tagName": "param",
           "values": ["range The optional range of text for which common attributes are requested. If null, the current selection is used."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "return",
           "values": ["The common container style settings"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "org.apache.royale.textLayout.formats.TextLayoutFormat",
      "params": [{ "name": "range", "type": "org.apache.royale.textLayout.elements.TextRange"}]}
  ,
  { "type": "accessor",
    "access": "read-only",
    "return": "String",
    "qname": "editingMode",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The editing mode.  <p>The editing mode indicates whether the text flow supports selection, editing, or only reading. A text flow is made selectable by assigning a selection manager and editable by assigning an edit manager. Constants representing the editing modes are defined in the EditingMode class.</p>",
    "tags": [
    {  "tagName": "see",
           "values": ["org.apache.royale.textLayout.EditingMode"]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "focusedSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The SelectionFormat object used to draw the selection in a focused container.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "unfocusedSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The SelectionFormat object used to draw the selection when it is not in a focused container, but is in the active window.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "inactiveSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The SelectionFormat object used to draw the selection when it is not in the active window.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "focusedCellSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The SelectionFormat object used to draw cell selections in a focused container.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "unfocusedCellSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The SelectionFormat object used to draw cell selections when they are not in a focused container, but are in the active window.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.SelectionFormat",
    "qname": "inactiveCellSelectionFormat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The SelectionFormat object used to draw cell selections when they are not in the active window.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "flushPendingOperations",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Executes any pending FlowOperations.  <p>The execution of some editing operations, such as text insertion, is delayed until the next enterFrame event. Calling <code>flushPendingOperations()</code> causes any deferred operations to be executed immediately.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "notifyInsertOrDelete",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Updates the selection manager when text is inserted or deleted.  <p>Operations must call <code>notifyInsertOrDelete</code> when changing the text in the text flow. The selection manager adjusts index-based position indicators accordingly. If you create a new Operation class that changes text in a text flow directly (not using another operation) your operation must call this function to keep the selection up to date.</p>",
    "tags": [
    {  "tagName": "param",
           "values": ["absolutePosition The point in the text where the change was made.", "length A positive or negative number indicating how many characters were inserted or deleted."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "absolutePosition", "type": "int"},
    { "name": "length", "type": "int"}]}
  ,
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.ISelectionManager",
    "qname": "subManager",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The ISelectionManager object used to for cell selections nested within the TextFlow managed by this ISelectionManager.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "org.apache.royale.textLayout.edit.ISelectionManager",
    "qname": "superManager",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The ISelectionManager object used to manage the parent TextFlow of this ISelectionManager (i.e. for cell ISelectionManagers).",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "copy",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
      ],
      "return": "org.apache.royale.textLayout.edit.ISelectionManager",
      "params": [{ "name": "sharedUndo", "type": "Boolean"}]}
  ]
  }
