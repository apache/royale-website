/**
 * Generated by Apache Royale Compiler from org/apache/royale/states/State.as
 * org.apache.royale.states.State
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.states.State');
/* Royale Dependency List: */

goog.require('org.apache.royale.core.IState');



/**
 *  Constructor.
 *  
 *  @asparam properties This parameter is not used in Royale and exists to make legacy compilers happy.
 *  @langversion 3.0
 *  @playerversion Flash 9
 *  @playerversion AIR 1.1
 *  @productversion Royale 1.0.0
 * @constructor
 * @implements {org.apache.royale.core.IState}
 * @param {Object=} properties
 */
org.apache.royale.states.State = function(properties) {
  properties = typeof properties !== 'undefined' ? properties : null;
  ;
};


/**
 * @private
 * @type {string}
 */
org.apache.royale.states.State.prototype.org_apache_royale_states_State__name;


/**
 * @private
 * @type {string}
 */
org.apache.royale.states.State.prototype.org_apache_royale_states_State__stateGroups;


/**
 * @private
 * @type {Array}
 */
org.apache.royale.states.State.prototype.org_apache_royale_states_State__overrides;


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.states.State.prototype.name;


org.apache.royale.states.State.prototype.get__name = function() {
  return this.org_apache_royale_states_State__name;
};


org.apache.royale.states.State.prototype.set__name = function(value) {
  this.org_apache_royale_states_State__name = value;
};


/**
 * @nocollapse
 * @export
 * @type {string}
 */
org.apache.royale.states.State.prototype.stateGroups;


org.apache.royale.states.State.prototype.get__stateGroups = function() {
  return this.org_apache_royale_states_State__stateGroups;
};


org.apache.royale.states.State.prototype.set__stateGroups = function(value) {
  this.org_apache_royale_states_State__stateGroups = value;
};


/**
 * @nocollapse
 * @export
 * @type {Array}
 */
org.apache.royale.states.State.prototype.overrides;


org.apache.royale.states.State.prototype.get__overrides = function() {
  return this.org_apache_royale_states_State__overrides;
};


org.apache.royale.states.State.prototype.set__overrides = function(value) {
  this.org_apache_royale_states_State__overrides = value;
};


Object.defineProperties(org.apache.royale.states.State.prototype, /** @lends {org.apache.royale.states.State.prototype} */ {
/**
 * @type {string}
 */
name: {
get: org.apache.royale.states.State.prototype.get__name,
set: org.apache.royale.states.State.prototype.set__name},
/**
 * @type {string}
 */
stateGroups: {
get: org.apache.royale.states.State.prototype.get__stateGroups,
set: org.apache.royale.states.State.prototype.set__stateGroups},
/**
 * @type {Array}
 */
overrides: {
get: org.apache.royale.states.State.prototype.get__overrides,
set: org.apache.royale.states.State.prototype.set__overrides}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.states.State.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'State', qName: 'org.apache.royale.states.State', kind: 'class' }], interfaces: [org.apache.royale.core.IState] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.states.State.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'name': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.states.State'},
        'stateGroups': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.states.State'},
        'overrides': { type: 'Array', access: 'readwrite', declaredBy: 'org.apache.royale.states.State'}
      };
    },
    methods: function () {
      return {
        'State': { type: '', declaredBy: 'org.apache.royale.states.State', parameters: function () { return [ 'Object', true ]; }}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.states.State.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./State.js.map
