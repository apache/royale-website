{ "type": "class",
  "qname": "org.apache.royale.utils.async.AsyncTask",
  "baseClassname": "org.apache.royale.events.EventDispatcher"
  ,
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.utils.async.AsyncTask",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "INITIALIZED",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {}},
      { "type": "field",
        "qname": "PENDING",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {}},
      { "type": "field",
        "qname": "COMPLETE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {}},
      { "type": "field",
        "qname": "CANCELED",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {}},
      { "type": "field",
        "qname": "FAILED",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {}},
      { "type": "field",
        "qname": "MIXED",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Used in compound tasks"},
      { "type": "field",
        "qname": "_status",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-only",
        "return": "String",
        "qname": "status",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "One of: initialized, pending, complete, failed or mixed (for compound tasks)",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "completed",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "completed (and a status of `complete`) means the task completed successfully",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "failed",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "failed (and a status of `failed`) means the task resolved to a failed state",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "complete",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "resolves the task as complete",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "fail",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Resolves the task as failed",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "notifyDone",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "done",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "done accepts a callback which is called when the task is resolved. The callback is resolved whether the task is successfully completed or not. The properties of the task should be examined in the callback to determine the results. The `done` event can be listened too as well.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.utils.async.IAsyncTask",
          "params": [{ "name": "callback", "type": "Function"}]}
      ,
      { "type": "method",
        "qname": "exec",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "exec encapsulates both `run` and `done` in a single call. The instance of the task is returned so that the task can be chained. This pattern enables code like this: `var task:AsyncTask = new AsyncTask().exec(callback);` The properties of the task should be examined in the callback to determine the results.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.13"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.utils.async.IAsyncTask",
          "params": [{ "name": "callback", "type": "Function"}]}
      ,
      { "type": "method",
        "qname": "run",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "data", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "cancel",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "cancel resolves the task as &quot;canceled&quot;",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "data",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The data of the task",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.6"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addEventListener",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "type", "type": "String"},
        { "name": "listener", "type": "Function"},
        { "name": "useCapture", "type": "Boolean"},
        { "name": "priority", "type": "int"},
        { "name": "useWeakReference", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "destroy",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "void",
          "params": []}
      ]
  ,
  "events": [
  { "qname": "complete",
        "type": "org.apache.royale.events.Event"
      ,
          "description": "AsyncTask is a base class for AsyncTasks which let the caller know when they are done. AsyncTask is an OOP replacement for Promises and simple callbacks which allows for strongly typed async requests with any kind of payload and behavior. AsyncTask must be subclassed to be used. The subclass must implement the `run` method to define the behavior when the task is &quot;run&quot;."},
      { "qname": "failed",
        "type": "org.apache.royale.events.Event"
      },
      { "qname": "done",
        "type": "org.apache.royale.events.Event"
      }]
  }
