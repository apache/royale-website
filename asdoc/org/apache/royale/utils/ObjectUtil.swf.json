{ "type": "class",
  "qname": "org.apache.royale.utils.ObjectUtil",
  "baseClassname": ""
  ,
    "description": "The ObjectUtil class contains static utility methods for analyzing and manipulating Objects. You do not create instances of ObjectUtil; instead you call methods such as the <code>ObjectUtil.toString(var)</code> method.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Royale 1.0.0", "Royale 0.0"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.utils.ObjectUtil",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "numProperties",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Count the properties in an object.",
        "tags": [
        {  "tagName": "param",
               "values": ["obj Object to count the properties of"]},
            {  "tagName": "return",
               "values": ["The number of properties in the specified object. If the specified object is null, this is 0."]}  ],
          "return": "int",
          "params": [{ "name": "obj", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "hasProperties",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Check if an object has any properties",
        "tags": [
        {  "tagName": "param",
               "values": ["obj Object to check for properties"]},
            {  "tagName": "return",
               "values": ["If the specified object has any properties. If the specified object is null, this is false."]}  ],
          "return": "Boolean",
          "params": [{ "name": "obj", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "isUniformPropertyType",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Check if the properties of an object are all the same",
        "tags": [
        {  "tagName": "param",
               "values": ["obj Object whose properties should be checked", "type Type to check the object's properties against"]},
            {  "tagName": "return",
               "values": ["If all of the properties of the specified object are of the specified type"]}  ],
          "return": "Boolean",
          "params": [{ "name": "obj", "type": "Object"},
        { "name": "type", "type": "Class"}]}
      ,
      { "type": "method",
        "qname": "shallowCopy",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Copy an object",
        "tags": [
        {  "tagName": "param",
               "values": ["obj Object to copy", "into (optional) Object to copy into. If null, a new object is created."]},
            {  "tagName": "return",
               "values": ["A one-level deep copy of the object or null if the argument is null"]}  ],
          "return": "Object",
          "params": [{ "name": "obj", "type": "Object"},
        { "name": "into", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "toArray",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Convert the object to an array. Note that the order of the array is undefined.",
        "tags": [
        {  "tagName": "param",
               "values": ["obj Object to convert"]},
            {  "tagName": "return",
               "values": ["An array with all of the properties of the given object or null if the given object is null"]}  ],
          "return": "Array",
          "params": [{ "name": "obj", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "_toString",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Convert the object to a string of form: PROP: VAL&PROP: VAL where: PROP is a property VAL is its corresponding value & is the specified optional delimiter This method is named with underscore &quot;_&quot; since toString is in use",
        "tags": [
        {  "tagName": "param",
               "values": ["obj Object to convert", "delimiter (optional) Delimiter of property/value pairs"]},
            {  "tagName": "return",
               "values": ["An string of all property/value pairs delimited by the given string or null if the input object or delimiter is null."]}  ],
          "return": "String",
          "params": [{ "name": "obj", "type": "Object"},
        { "name": "delimiter", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "addNonEnumerableProperty",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "obj", "type": "Object"},
        { "name": "name", "type": "String"},
        { "name": "value", "type": "*"}]}
      ]
  ,
  "events": [
  ]
  }
