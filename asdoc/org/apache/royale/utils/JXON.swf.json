{ "type": "class",
  "qname": "org.apache.royale.utils.JXON",
  "baseClassname": ""
  ,
    "description": "JXON is a lightweight class for parsing and using simple XML. It gives access to children in the XML tree as an array of `children`. Attributes are an object `attribute` with the attribute key/value pairs. Namespaces are completely ignored. If you need more functionality such as E4X and advanced filtering, use the XML and XMLList classes instead. To parse XML, use JXON.parse(xmlStr) where xmlStr is a string of your XML.",
  "tags": [
  {  "tagName": "royalesuppresspublicvarwarning",
         "values": []}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.utils.JXON",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "ignoreWhiteSpace",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Static flag to ignore whitespace text nodes",
        "tags": [
          ]},
      { "type": "field",
        "qname": "name",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The tag name of the element",
        "tags": [
          ]},
      { "type": "field",
        "qname": "children",
        "return": "Array",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Children are iterable. Children can be either JXON objects or Strings.",
        "tags": [
          ]},
      { "type": "field",
        "qname": "attributes",
        "return": "Object",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Attributes are saved as an object so simple dot or bracket notation can be used to retrieve attribute values.",
        "tags": [
          ]},
      { "type": "method",
        "qname": "getChild",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns an array of all children whose tag name matches the name.",
        "tags": [
          ],
          "return": "Array",
          "params": [{ "name": "name", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "toString",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a simplified string of the contents of the xml. The tag and all attributes are left out.",
        "tags": [
          ],
          "return": "String",
          "params": []}
      ,
      { "type": "method",
        "qname": "toXMLString",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the object structure as a string including tags and attributes. Namespaces, comments and processing instructions are lost.",
        "tags": [
          ],
          "return": "String",
          "params": []}
      ,
      { "type": "method",
        "qname": "parse",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Use `parse()` to convert an XML string into a JXON object.",
        "tags": [
          ],
          "return": "org.apache.royale.utils.JXON",
          "params": [{ "name": "xmlStr", "type": "String"}]}
      ]
  ,
  "events": [
  ]
  }
