/**
 * Generated by Apache Royale Compiler from org/apache/royale/events/ValueEvent.as
 * org.apache.royale.events.ValueEvent
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('org.apache.royale.events.ValueEvent');
/* Royale Dependency List: org.apache.royale.events.IRoyaleEvent*/

goog.require('org.apache.royale.events.Event');



/**
 *  Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.events.Event}
 * @param {string} type
 * @param {*=} value
 * @param {boolean=} bubbles
 * @param {boolean=} cancelable
 */
org.apache.royale.events.ValueEvent = function(type, value, bubbles, cancelable) {
  value = typeof value !== 'undefined' ? value : null;
  bubbles = typeof bubbles !== 'undefined' ? bubbles : false;
  cancelable = typeof cancelable !== 'undefined' ? cancelable : false;
  org.apache.royale.events.ValueEvent.base(this, 'constructor', type, bubbles, cancelable);
  this.value = value;
};
goog.inherits(org.apache.royale.events.ValueEvent, org.apache.royale.events.Event);


/**
 * @type {*}
 */
org.apache.royale.events.ValueEvent.prototype.value;


/**
 * Create a copy/clone of the ValueEvent object.
 *
 * @langversion 3.0
 * @playerversion Flash 10.2
 * @playerversion AIR 2.6
 * @productversion Royale 0.0
 * @override
 */
org.apache.royale.events.ValueEvent.prototype.cloneEvent = function() {
  return new org.apache.royale.events.ValueEvent(this.type, this.value, this.bubbles, this.cancelable);
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.events.ValueEvent.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ValueEvent', qName: 'org.apache.royale.events.ValueEvent', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.events.ValueEvent.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'value': { type: '*', get_set: function f(/** org.apache.royale.events.ValueEvent */ inst, /** * */ v) {return v !== f ? inst.value = v : inst.value;}}
      };
    },
    methods: function () {
      return {
        'ValueEvent': { type: '', declaredBy: 'org.apache.royale.events.ValueEvent', parameters: function () { return [ 'String', false ,'*', true ,'Boolean', true ,'Boolean', true ]; }},
        'cloneEvent': { type: 'org.apache.royale.events.IRoyaleEvent', declaredBy: 'org.apache.royale.events.ValueEvent'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
org.apache.royale.events.ValueEvent.prototype.ROYALE_COMPILE_FLAGS = 10;

//# sourceMappingURL=./ValueEvent.js.map
