{ "type": "class",
  "qname": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
  "baseClassname": ""
  ,
    "description": "Transform Offsets can be assigned to any Component or GraphicElement to modify the transform of the object beyond where its parent layout places it.",
  "tags": [
  {  "tagName": "private",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Royale 1.0.0"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "org.apache.royale.graphics.utils.AdvancedLayoutFeatures",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "depth",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "storage for the depth value. Layering is considered 'advanced' layout behavior, and not something that gets used by the majority of the components out there.  So if a component has a non-zero depth, it will allocate a AdvancedLayoutFeatures object and store the value here.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "_computedMatrix3D",
        "return": "flash.geom.Matrix3D",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutX",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the x value of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutY",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the y value of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutZ",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the z value of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Used by the mirroring transform.   See the mirror property.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "transformX",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "transformY",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "transformZ",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutRotationX",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the rotation around the X axis of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutRotationY",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the rotation around the Y axis of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutRotationZ",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the rotation around the Z axis of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutScaleX",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the scale along the X axis of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutScaleY",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the scale along the Y axis of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "layoutScaleZ",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "layout transform convenience property.  Represents the scale along the Z axis of the layout matrix used in layout and in the computed transform.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "flash.geom.Matrix",
        "qname": "layoutMatrix",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "flash.geom.Matrix3D",
        "qname": "layoutMatrix3D",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "is3D",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "true if the computed transform has 3D values.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "layoutIs3D",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "true if the layout transform has 3D values.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.graphics.utils.TransformOffsets",
        "qname": "postLayoutTransformOffsets",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "offsets to the transform convenience properties that are applied when a component is rendered. If this property is set, its values will be added to the layout transform properties to determine the true matrix used to render the component",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "mirror",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If true the X axis is scaled by -1 and the x coordinate of the origin is translated by the component's width.  The net effect of this &quot;mirror&quot; transform is to flip the direction that the X axis increases in without changing the layout element's location relative to the parent's origin.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "stretchX",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The stretchY is the horizontal component of the stretch scale factor which is applied before any other transformation property.",
        "tags": [
        {  "tagName": "default",
               "values": ["1"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "stretchY",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The stretchY is the vertical component of the stretch scale factor which is applied before any other transformation property.",
        "tags": [
        {  "tagName": "default",
               "values": ["1"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "flash.geom.Matrix",
        "qname": "computedMatrix",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "the computed matrix, calculated by combining the layout matrix and  and any offsets provided..",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "flash.geom.Matrix3D",
        "qname": "computedMatrix3D",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "the computed 3D matrix, calculated by combining the 3D layout matrix and  and any offsets provided..",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "transformPointToParent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A utility method to transform a point specified in the local coordinates of this object to its location in the object's parent's coordinates. The pre-layout and post-layout result will be set on the <code>position</code> and <code>postLayoutPosition</code> parameters, if they are non-null.  to take into account the 3D matrix of the object. local coordinates of the object. result. If null, the parameter is ignored. result. If null, the parameter is ignored.",
        "tags": [
        {  "tagName": "param",
               "values": ["propertyIs3D A boolean reflecting whether the calculation needs", "localPoint The point to be transformed, specified in the"]},
            {  "tagName": "postLayoutPosition",
               "values": ["A Vector3D point that will hold the post-layout"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "position",
               "values": ["A Vector3D point that will hold the pre-layout"]},
            {  "tagName": "productversion",
               "values": ["Royale 1.0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "propertyIs3D", "type": "Boolean"},
        { "name": "localPosition", "type": "flash.geom.Vector3D"},
        { "name": "position", "type": "flash.geom.Vector3D"},
        { "name": "postLayoutPosition", "type": "flash.geom.Vector3D"}]}
      ,
      { "type": "method",
        "qname": "transformAround",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A utility method to update the rotation and scale of the transform while keeping a particular point, specified in the component's own coordinate space, fixed in the parent's coordinate space.  This function will assign the rotation and scale values provided, then update the x/y/z properties as necessary to keep tx/ty/tz fixed. to keep fixed relative to its parent.",
        "tags": [
        {  "tagName": "param",
               "values": ["transformCenter the point, in the component's own coordinates,", "rotation the new values for the rotation of the transform", "scale the new values for the scale of the transform", "translation the new values for the translation of the transform"]}  ],
          "return": "void",
          "params": [{ "name": "transformCenter", "type": "flash.geom.Vector3D"},
        { "name": "scale", "type": "flash.geom.Vector3D"},
        { "name": "rotation", "type": "flash.geom.Vector3D"},
        { "name": "transformCenterPosition", "type": "flash.geom.Vector3D"},
        { "name": "postLayoutScale", "type": "flash.geom.Vector3D"},
        { "name": "postLayoutRotation", "type": "flash.geom.Vector3D"},
        { "name": "postLayoutTransformCenterPosition", "type": "flash.geom.Vector3D"}]}
      ]
  ,
  "events": [
  ]
  }
