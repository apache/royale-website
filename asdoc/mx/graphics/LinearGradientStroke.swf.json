{ "type": "class",
  "qname": "mx.graphics.LinearGradientStroke",
  "baseClassname": "mx.graphics.SolidColorStroke"
  ,
    "description": "The LinearGradientStroke class lets you specify a gradient filled stroke. You use the LinearGradientStroke class, along with the GradientEntry class, to define a gradient stroke.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.graphics.Stroke", "mx.graphics.GradientEntry", "mx.graphics.RadialGradient", "flash.display.Graphics"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.graphics.LinearGradientStroke",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  This parameter is optional, with a default value of <code>1</code>.  whether to hint strokes to full pixels. This affects both the position of anchors of a curve and the line stroke size itself. With <code>pixelHinting</code> set to <code>true</code>, Flash Player and AIR hint line widths to full pixel widths. With <code>pixelHinting</code> set to <code>false</code>, disjoints can  appear for curves and straight lines. This parameter is optional, with a default value of <code>false</code>.  that specifies which scale mode to use. Valid values are <code>LineScaleMode.HORIZONTAL</code>, <code>LineScaleMode.NONE</code>, <code>LineScaleMode.NORMAL</code>, and <code>LineScaleMode.VERTICAL</code>. This parameter is optional, with a default value of <code>LineScaleMode.NONE</code>.  that specifies the type of caps at the end of lines. Valid values are <code>CapsStyle.NONE</code>, <code>CapsStyle.ROUND</code>, and <code>CapsStyle.SQUARE</code>. A <code>null</code> value is equivalent to <code>CapsStyle.ROUND</code>. This parameter is optional, with a default value of <code>CapsStyle.ROUND</code>.  that specifies the type of joint appearance used at angles. Valid values are <code>JointStyle.BEVEL</code>, <code>JointStyle.MITER</code>, and <code>JointStyle.ROUND</code>. A <code>null</code> value is equivalent to <code>JointStyle.ROUND</code>. This parameter is optional, with a default value of <code>JointStyle.ROUND</code>.  at which a miter is cut off. Valid values range from 1 to 255 (and values outside of that range are rounded to 1 or 255). This value is only used if the <code>jointStyle</code> property is set to <code>miter</code>. The <code>miterLimit</code> value represents the length that a miter can extend beyond the point at which the lines meet to form a joint. The value expresses a factor of the line <code>thickness</code>. For example, with a <code>miterLimit</code> factor of 2.5 and a <code>thickness</code> of 10 pixels, the miter is cut off at 25 pixels. This parameter is optional, with a default value of <code>3</code>.",
        "tags": [
        {  "tagName": "param",
               "values": ["weight Specifies the line weight, in pixels.", "pixelHinting A Boolean value that specifies", "scaleMode A value from the LineScaleMode class", "caps A value from the CapsStyle class", "joints A value from the JointStyle class", "miterLimit A number that indicates the limit"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "weight", "type": "Number"},
        { "name": "pixelHinting", "type": "Boolean"},
        { "name": "scaleMode", "type": "String"},
        { "name": "caps", "type": "String"},
        { "name": "joints", "type": "String"},
        { "name": "miterLimit", "type": "Number"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "rotation",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]}]
  ,
  "events": [
  ]
  }
