{ "type": "class",
  "qname": "mx.netmon.NetworkMonitor",
  "baseClassname": ""
  ,
    "description": "NetworkMonitor is a stub used by the framework and enterprise service classes to send information to the Flash Builder Network Monitor feature.  The NetworkMonitor declares a number of Impl functions which are to be filled in by a mix-in class provided by Flash Builder. If those functions are not assigned the stub will do nothing, will or return false or null as appropriate. We don't use a singleton or an instance object at the moment to simplify the code that calls the monitor.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []}  ],
  "members": [
  { "type": "field",
        "qname": "isMonitoringImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "adjustURLRequestImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "adjustNetConnectionURLImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "monitorEventImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "monitorInvocationImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "monitorResultImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "monitorFaultImpl",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "To be assigned by mix-in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "isMonitoring",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Returns true if the monitor is linked and monitoring.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "adjustURLRequest",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Adjust the URLRequest so that it goes through the monitor. The URLRequest sent to the monitor will have two headers: <ul> <li><code>actualHostPort</code>: The real <code>host:port</code> for the URL.</li> <li><code>correlationID</code>: The correlationID for the request in case it's from messaging (Image/Loader requests need to create their  own correlationIDs)</li> </ul>  (Relative URLs are supported.)  If necessary, pass the SWF file's URL as this value.  for associated events.",
        "tags": [
        {  "tagName": "param",
               "values": ["urlRequest The URLRequest to adjust.", "rootURL Computes an absolute URL from the relative URL.", "correlationID The correlationID that may be used"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "urlRequest", "type": "org.apache.royale.net.URLRequest"},
        { "name": "rootURL", "type": "String"},
        { "name": "correlationID", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "adjustNetConnectionURL",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Adjust the URL for NetConnectionChannel and HTTPChannel Requests so that it goes through the monitor. Returns the modified url.",
        "tags": [
        {  "tagName": "param",
               "values": ["url to adjust."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "String",
          "params": [{ "name": "rootUrl", "type": "String"},
        { "name": "url", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "monitorEvent",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Tell the monitor that an event occurred. This may be used by the Loader to monitor security and IO errors. It should not be used for the Loader's <code>complete</code> event.   or the request.",
        "tags": [
        {  "tagName": "param",
               "values": ["event The event that is about to occur (or occurred).", "correlationID The correlationID to associate with other events"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"},
        { "name": "correlationID", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "monitorInvocation",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Tell the monitor that an invocation is occuring.  if it can be determined.  (It is untyped here to avoid linking in the dependency.)",
        "tags": [
        {  "tagName": "param",
               "values": ["id The id of the tag causing the invocation", "invocationMessage The Message that will be sent across the wire."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "id", "type": "String"},
        { "name": "invocationMessage", "type": "Object"},
        { "name": "messageAgent", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "monitorResult",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Tell the monitor that a result was returned.  (It is untyped here to avoid linking in the dependency.)",
        "tags": [
        {  "tagName": "param",
               "values": ["resultMessage The Message that came back indicating the result.", "actualResult the decoded result"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "resultMessage", "type": "Object"},
        { "name": "actualResult", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "monitorFault",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Tell the monitor that a fault occurred.  It be null if this was due to an invocation failure. (It is untyped here to avoid linking in the dependency.)  (It is untyped here to avoid linking in the dependency.)",
        "tags": [
        {  "tagName": "param",
               "values": ["faultMessage The Message that came back indicating the result.", "actualFault The Fault that occurred."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "faultMessage", "type": "Object"},
        { "name": "actualFault", "type": "Object"}]}
      ]
  ,
  "events": [
  ]
  }
