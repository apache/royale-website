{ "type": "class",
  "qname": "mx.controls.RadioButton",
  "baseClassname": "mx.controls.Button"
  ,
    "description": "The RadioButton control lets the user make a single choice within a set of mutually exclusive choices. A RadioButton group is composed of two or more RadioButton controls with the same <code>groupName</code> property. While grouping RadioButton instances in a RadioButtonGroup is optional, a group lets you do things like set a single event handler on a group of buttons, rather than on each individual button. The RadioButton group can refer to a group created by the <code>&lt;mx:RadioButtonGroup&gt;</code> tag. The user selects only one member of the group at a time. Selecting an unselected group member deselects the currently selected RadioButton control within that group.  <p>The RadioButton control has the following default characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td>Wide enough to display the text label of the control</td> </tr> <tr> <td>Minimum size</td> <td>0 pixels</td> </tr> <tr> <td>Maximum size</td> <td>Undefined</td> </tr> </table>   <p>The <code>&lt;mx:RadioButton&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;mx:RadioButton\\n <strong>Properties</strong>\\n groupName=&quot;&quot;\\n labelPlacement=&quot;right|left|top|bottom&quot;\\n \\n <strong>Styles</strong>\\n disabledIconColor=&quot;0x999999&quot;\\n iconColor=&quot;0x2B333C&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/RadioButtonExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.controls.RadioButtonGroup"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.controls.RadioButton",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "labelPlacement",
        "namespace": "public",
        "bindable": ["labelPlacementChanged"],
        "details": ["override"],
        "deprecated": {},
          "description": "Position of the label relative to the RadioButton icon. Valid values in MXML are <code>&quot;right&quot;</code>, <code>&quot;left&quot;</code>, <code>&quot;bottom&quot;</code>, and <code>&quot;top&quot;</code>.  <p>In ActionScript, you use the following constants to set this property: <code>ButtonLabelPlacement.RIGHT</code>, <code>ButtonLabelPlacement.LEFT</code>, <code>ButtonLabelPlacement.BOTTOM</code>, and <code>ButtonLabelPlacement.TOP</code>.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["ButtonLabelPlacement.RIGHT"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "toggle",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "method",
        "qname": "createElement",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.WrappedHTMLElement", "HTMLInputElement", "HTMLLabelElement", "Text"]}  ],
          "return": "org.apache.royale.core.WrappedHTMLElement",
          "params": []}
      ,
      { "type": "method",
        "qname": "addEventListener",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": [{ "name": "type", "type": "String"},
        { "name": "handler", "type": "Function"},
        { "name": "opt_capture", "type": "Boolean"},
        { "name": "opt_handlerScope", "type": "Object"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "id",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "An id property for MXML documents.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6", "Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3", "Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "label",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "selected",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["HTMLInputElement"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.controls.RadioButtonGroup",
        "qname": "group",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The RadioButtonGroup object to which this RadioButton belongs.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"undefined\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "groupName",
        "namespace": "public",
        "bindable": ["groupNameChanged"],
        "details": [],
        "deprecated": {},
          "description": "Specifies the name of the group to which this RadioButton control belongs, or specifies the value of the <code>id</code> property of a RadioButtonGroup control if this RadioButton is part of a group defined by a RadioButtonGroup control.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"undefined\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "throws",
               "values": ["ArgumentError Throws an ArgumentError if you are using Flex 4 or later and the groupName starts with the string \"_fx_\"."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "value",
        "namespace": "public",
        "bindable": ["valueChanged"],
        "details": [],
        "deprecated": {},
          "description": "Optional user-defined value that is associated with a RadioButton control.",
        "tags": [
        {  "tagName": "default",
               "values": ["null"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addedToParent",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "measuredWidth",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]}]
  ,
  "events": [
  ]
  }
