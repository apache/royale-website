{ "type": "class",
  "qname": "mx.controls.SimpleTextHighlighter",
  "baseClassname": "mx.core.UIComponent"
  ,
    "description": "This class is not part of the original Flex component set, it is additional - a utility class for simple highlighting of editable text. Similar to org.apache.royale.html.SimpleTextHighlighter",
  "tags": [
  {  "tagName": "toplevel",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10.2", "AIR 2.6"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.0"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.controls.SimpleTextHighlighter",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "setFocus",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "void",
          "params": []}
      ,
      { "type": "field",
        "qname": "_parentRef",
        "return": "Object",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "text",
        "namespace": "public",
        "bindable": ["change"],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "copy",
               "values": ["org.apache.royale.html.Label#text"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "royaleignorecoercion",
               "values": ["HTMLTextAreaElement"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "_highLights",
        "return": "Array",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "method",
        "qname": "removeHighlights",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "createHighlightSpan",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "can be overridden in subclasses",
          "return": "org.apache.royale.html.supportClasses.HighlightTextSpan",
          "params": [{ "name": "begin", "type": "int"},
        { "name": "end", "type": "int"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "autoRemoveHighlightChanges",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "method",
        "qname": "removeHighlightForText",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Utility method for unHighlighting text.  returns true if highlighting occurred, false otherwise",
          "return": "Boolean",
          "params": [{ "name": "string", "type": "String"},
        { "name": "fromIndex", "type": "uint"},
        { "name": "all", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "removeHighlightForRange",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "Boolean",
          "params": [{ "name": "containsIndex", "type": "uint"}]}
      ,
      { "type": "method",
        "qname": "highlightText",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Utility method for highlighting text.  returns true if highlighting occurred, false otherwise",
          "return": "Boolean",
          "params": [{ "name": "string", "type": "String"},
        { "name": "fromIndex", "type": "uint"},
        { "name": "all", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "highlightOffsetRange",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "This method uses the same range logic as String.substr (begin: first char index, length: char count to be included) if 'single' is true, any previous highlights will be removed prior to the new highlight range being added  returns true if highlighting occurred, false otherwise",
          "return": "Boolean",
          "params": [{ "name": "begin", "type": "uint"},
        { "name": "length", "type": "uint"},
        { "name": "single", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "highlightRange",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "This method uses the same range logic as String.substring (begin: first char index, end: char index after last) if 'single' is true, any previous highlights will be removed prior to the new highlight range being added  returns true if highlighting occurred, false otherwise",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.html.supportClasses.HighlightTextSpan"]}  ],
          "return": "Boolean",
          "params": [{ "name": "begin", "type": "uint"},
        { "name": "end", "type": "uint"},
        { "name": "single", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "onLostFocus",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "method",
        "qname": "onSelectEvent",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "wordWrap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "selectable",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "editable",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "method",
        "qname": "createElement",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.WrappedHTMLElement", "HTMLSpanElement"]}  ],
          "return": "org.apache.royale.core.WrappedHTMLElement",
          "params": []}
      ,
      { "type": "method",
        "qname": "textChangeHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "dispatch change event in response to a textChange event",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
      ]
  ,
  "events": [
  { "qname": "change",
        "type": "org.apache.royale.events.Event"
      ,
          "description": "Dispatched when the user changes the text.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
