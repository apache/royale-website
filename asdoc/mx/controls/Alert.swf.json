{ "type": "class",
  "qname": "mx.controls.Alert",
  "baseClassname": "mx.containers.Panel"
  ,
    "description": "The Alert control is a pop-up dialog box that can contain a message, a title, buttons (any combination of OK, Cancel, Yes, and No) and an icon. The Alert control is modal, which means it will retain focus until the user closes it.  <p>Import the mx.controls.Alert class into your application, and then call the static <code>show()</code> method in ActionScript to display an Alert control. You cannot create an Alert control in MXML.</p>  <p>The Alert control closes when you select a button in the control, or press the Escape key.</p>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/SimpleAlert.mxml"]},
      {  "tagName": "see",
         "values": ["mx.managers.SystemManager", "mx.managers.PopUpManager"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "YES",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Value that enables a Yes button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method. You can use the | operator to combine this bitflag with the <code>OK</code>, <code>CANCEL</code>, <code>NO</code>, and <code>NONMODAL</code> flags.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "NO",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Value that enables a No button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method. You can use the | operator to combine this bitflag with the <code>OK</code>, <code>CANCEL</code>, <code>YES</code>, and <code>NONMODAL</code> flags.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "OK",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Value that enables an OK button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method. You can use the | operator to combine this bitflag with the <code>CANCEL</code>, <code>YES</code>, <code>NO</code>, and <code>NONMODAL</code> flags.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "CANCEL",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Value that enables a Cancel button on the Alert control when passed as the <code>flags</code> parameter of the <code>show()</code> method. You can use the | operator to combine this bitflag with the <code>OK</code>, <code>YES</code>, <code>NO</code>, and <code>NONMODAL</code> flags.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "NONMODAL",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Value that makes an Alert nonmodal when passed as the <code>flags</code> parameter of the <code>show()</code> method. You can use the | operator to combine this bitflag with the <code>OK</code>, <code>CANCEL</code>, <code>YES</code>, and <code>NO</code> flags.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "buttonWidth",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Width of each Alert button, in pixels. All buttons must be the same width.",
        "tags": [
        {  "tagName": "default",
               "values": ["65"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "cancelLabel",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "noLabel",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The label for the No button.  <p>If you use a different label, you may need to adjust the <code>buttonWidth</code> property to fully display it.</p>  The English resource bundle sets this property to &quot;NO&quot;.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "okLabel",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "yesLabel",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The label for the Yes button.  <p>If you use a different label, you may need to adjust the <code>buttonWidth</code> property to fully display the label.</p>  The English resource bundle sets this property to &quot;YES&quot;.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "show",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Static method that pops up the Alert control. The Alert control closes when you select a button in the control, or press the Escape key.  This text is centered in the alert dialog box.  This text is left justified.  Valid values are <code>Alert.OK</code>, <code>Alert.CANCEL</code>, <code>Alert.YES</code>, and <code>Alert.NO</code>. The default value is <code>Alert.OK</code>. Use the bitwise OR operator to display more than one button. For example, passing <code>(Alert.YES | Alert.NO)</code> displays Yes and No buttons. Regardless of the order that you specify buttons, they always appear in the following order from left to right: OK, Yes, No, Cancel.   on the Alert control is pressed. The event object passed to this handler is an instance of CloseEvent; the <code>detail</code> property of this object contains the value <code>Alert.OK</code>, <code>Alert.CANCEL</code>, <code>Alert.YES</code>, or <code>Alert.NO</code>.  of the text in the Alert control.  You can specify one and only one of <code>Alert.OK</code>, <code>Alert.CANCEL</code>, <code>Alert.YES</code>, or <code>Alert.NO</code>. The default value is <code>Alert.OK</code>. Pressing the Enter key triggers the default button just as if you clicked it. Pressing Escape triggers the Cancel or No button just as if you selected it.  its embedded fonts and style manager.",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.events.CloseEvent"]},
            {  "tagName": "param",
               "values": ["text Text string that appears in the Alert control.", "title Text string that appears in the title bar.", "flags Which buttons to place in the Alert control.", "parent Object upon which the Alert control centers itself.", "closeHandler Event handler that is called when any button", "iconClass Class of the icon that is placed to the left", "defaultButtonFlag A bitflag that specifies the default button.", "moduleFactory The moduleFactory where this Alert should look for"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "return",
               "values": ["A reference to the Alert control."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.controls.Alert",
          "params": [{ "name": "text", "type": "String"},
        { "name": "title", "type": "String"},
        { "name": "flags", "type": "uint"},
        { "name": "parent", "type": "mx.core.IUIComponent"},
        { "name": "closeHandler", "type": "Function"},
        { "name": "iconClass", "type": "Class"},
        { "name": "defaultButtonFlag", "type": "uint"},
        { "name": "moduleFactory", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "mx.controls.Alert",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "uint",
        "qname": "buttonFlags",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The buttons to display on the Alert as bit-mask values.  Alert.YES Alert.NO Alert.OK Alert.CANCEL",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "text",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The message to display in the Alert body.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addedToParent",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "void",
          "params": []}
      ]
  }
