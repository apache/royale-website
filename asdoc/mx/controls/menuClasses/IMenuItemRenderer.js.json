{ "type": "interface",
  "qname": "mx.controls.menuClasses.IMenuItemRenderer",
"baseInterfaceNames": [
]
,
    "description": "The IMenuItemRenderer interface defines the interface that a menu item renderer for a Menu control must implement.  <p>The menu item renderers are often recycled. Once they are created, they may be used again simply by being given new data. Therefore, in individual implementations, component developers must make sure that component properties are not assumed to contain specific initial, or default values.</p>  <p>To implement this interface, a component developer must define a setter and getter method that implements the <code>menu</code> property. Typically, the setter method writes the value of the data property to an internal variable, and the getter method returns the current value of the internal variable, as the following example shows:</p> <pre>\\n // Internal variable for the property value.\\n private var _menu:Menu;\\n \\n // Define the getter method.\\n public function get menu():Menu\\n {\\n return _menu;\\n }\\n \\n // Define the setter method.\\n public function set menu(value:Menu):void\\n {\\n _menu = value;\\n }\\n </pre>",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "mx.controls.Menu",
    "qname": "menu",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "A reference to this menu item renderer's Menu control, if it contains one. This indicates that this menu item renderer is a branch node, capable of popping up a sub menu.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "return",
           "values": ["The reference to the Menu control."]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Number",
    "qname": "measuredIconWidth",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The width of the icon.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Number",
    "qname": "measuredTypeIconWidth",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The width of the type icon (radio/check).",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Number",
    "qname": "measuredBranchIconWidth",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The width of the branch icon.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]}]
  }
