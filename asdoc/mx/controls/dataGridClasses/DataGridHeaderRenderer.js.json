{ "type": "class",
  "qname": "mx.controls.dataGridClasses.DataGridHeaderRenderer",
  "baseClassname": "mx.core.UIComponent"
  ,
    "description": "The AdvancedDataGridHeaderRenderer class defines the default header renderer for a AdvancedDataGrid control. By default, the header renderer draws the text associated with each header in the list, and an optional sort arrow (if sorted by that column).  <p> By default, the custom header renderer uses the default sort item renderer defined by the AdvancedDataGridSortItemRenderer class. The sort item renderer controls the display of the sort icon and sort sequence number. You can specify a custom sort item renderer by using the <code>sortItemRenderer</code> property.</p>  <p>You can override the default header renderer by creating a custom header renderer. The only requirement for a custom header renderer is that it must include the size of the <code>sortItemRenderer</code> in any size calculations performed by an override of the <code>measure()</code> and <code>updateDisplayList()</code> methods.</p>  <p>You can customize when the sorting gets triggered by handling or dispatching the <code>AdvancedDataGridEvent.SORT</code> event.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.controls.AdvancedDataGrid", "mx.controls.advancedDataGridClasses.AdvancedDataGridSortItemRenderer"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.controls.dataGridClasses.DataGridHeaderRenderer",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "label",
        "return": "mx.core.IUITextField",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The internal UITextField that displays the text in this renderer.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "baselinePosition",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "data",
        "namespace": "public",
        "bindable": ["dataChange"],
        "details": [],
        "deprecated": {},
          "description": "The implementation of the <code>data</code> property as defined by the IDataRenderer interface. When set, it stores the value and invalidates the component to trigger a relayout of the component.",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.core.IDataRenderer"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.core.IFactory",
        "qname": "sortItemRenderer",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies a custom sort item renderer. By default, the AdvancedDataGridHeaderRenderer class uses AdvancedDataGridSortItemRenderer as the sort item renderer.  <p>Note that the sort item renderer controls the display of the sort icon and sort sequence number. A custom header renderer must include code to display the sort item renderer, regardless of whether it is the default or custom sort item renderer.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "listData",
        "namespace": "public",
        "bindable": ["dataChange"],
        "details": [],
        "deprecated": {},
          "description": "The implementation of the <code>listData</code> property as defined by the IDropInListItemRenderer interface.",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.controls.listClasses.IDropInListItemRenderer"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "mouseEventToHeaderPart",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Indicates if the mouse pointer was over the text part or icon part of the header when the mouse event occurred.  <p>This method has to be implemented in custom header renderers for sorting to work. Note that this implicitly means you will need to display both text (which can be displayed any way the custom header renderer wants; by default, Flex display text) and an icon (which is the default or custom sort item renderer).</p>   and <code>AdvancedDataGrid.HEADERICONPART</code> if the mouse was over the header icon.",
        "tags": [
        {  "tagName": "param",
               "values": ["event The mouse event."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["<code>AdvancedDataGrid.HEADERTEXTPART</code> if the mouse was over the header text,"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "String",
          "params": [{ "name": "event", "type": "org.apache.royale.events.MouseEvent"}]}
      ,
      { "type": "method",
        "qname": "toolTipShowHandler",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Positions the tooltip in the header.",
        "tags": [
        {  "tagName": "param",
               "values": ["The Event object."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.events.ToolTipEvent"}]}
      ,
      { "type": "method",
        "qname": "setWidth",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "value", "type": "Number"},
        { "name": "noEvent", "type": "Boolean"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.managers.ISystemManager",
        "qname": "systemManager",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "nestLevel",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "updateCompletePendingFlag",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {}}]
  ,
  "events": [
  { "qname": "dataChange",
        "type": "mx.events.FlexEvent"
      ,
          "description": "Dispatched when the <code>data</code> property changes.  <p>When you use a component as an item renderer, the <code>data</code> property contains the data to display. You can listen for this event and update the component when the <code>data</code> property changes.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.FlexEvent.DATA_CHANGE"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
