{ "type": "interface",
  "qname": "mx.core.IInvalidating",
"baseInterfaceNames": [
]
,
    "description": "The IInvalidating interface defines the interface for components that use invalidation to do delayed -- rather than immediate -- property commitment, measurement, drawing, and layout.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
    "qname": "invalidateProperties",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Calling this method results in a call to the component's <code>validateProperties()</code> method before the display list is rendered.  <p>For components that extend UIComponent, this implies that <code>commitProperties()</code> is called.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "invalidateSize",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Calling this method results in a call to the component's <code>validateSize()</code> method before the display list is rendered.  <p>For components that extend UIComponent, this implies that <code>measure()</code> is called, unless the component has both <code>explicitWidth</code> and <code>explicitHeight</code> set.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "invalidateDisplayList",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Calling this method results in a call to the component's <code>validateDisplayList()</code> method before the display list is rendered.  <p>For components that extend UIComponent, this implies that <code>updateDisplayList()</code> is called.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ,
  { "type": "method",
    "qname": "validateNow",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Validates and updates the properties and layout of this object by immediately calling <code>validateProperties()</code>, <code>validateSize()</code>, and <code>validateDisplayList()</code>, if necessary.  <p>When properties are changed, the new values do not usually have an immediate effect on the component. Usually, all of the application code that needs to be run at that time is executed. Then the LayoutManager starts calling the <code>validateProperties()</code>, <code>validateSize()</code>, and <code>validateDisplayList()</code> methods on components, based on their need to be validated and their depth in the hierarchy of display list objects.</p>  <p>For example, setting the <code>width</code> property is delayed, because it may require recalculating the widths of the object's children or its parent. Delaying the processing also prevents it from being repeated multiple times if the application code sets the <code>width</code> property more than once. This method lets you manually override this behavior.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ]
  }
