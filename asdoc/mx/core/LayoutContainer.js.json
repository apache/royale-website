{ "type": "class",
  "qname": "mx.core.LayoutContainer",
  "baseClassname": "mx.core.Container"
  ,
    "description": "Flex defines a default, or Application, container that lets you start adding content to your module or Application without explicitly defining another container. Flex creates this container from the <code>&lt;mx:Application&gt;</code> tag, the first tag in an MXML application file, or from the <code>&lt;mx:Module&gt;</code> tag, the first tag in an MXML module file. While you might find it convenient to use the Application or Module container as the only  container in your application, in most cases you explicitly define at least one more container before you add any controls to your application or module.   <p>The <code>&lt;mx:Application&gt;</code> tag inherits all of the tag attributes of its superclass and adds the following tag attributes:</p>  <pre>\\n &lt;mx:Application\\n <strong>Properties</strong>\\n layout=&quot;vertical|horizontal|absolute&quot;\\n xmlns:<i>No default</i>=&quot;<i>No default</i>&quot;\\n \\n <strong>Styles</strong>\\n horizontalAlign=&quot;center|left|right&quot;\\n horizontalGap=&quot;8&quot;\\n paddingBottom=&quot;0&quot;\\n paddingTop=&quot;0&quot;\\n verticalAlign=&quot;top|bottom|middle&quot;\\n verticalGap=&quot;6&quot;\\n \\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "see",
         "values": ["flash.events.EventDispatcher"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.core.LayoutContainer",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "canvasLayoutClass",
        "return": "Class",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The mx.containers.utilityClasses.Layout subclass that is doing the layout",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "boxLayoutClass",
        "return": "Class",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The mx.containers.utilityClasses.Layout subclass that is doing the layout",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "constraintColumns",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.containers.utilityClasses.IConstraintLayout#constraintColumns"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "constraintRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.containers.utilityClasses.IConstraintLayout#constraintRows"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "layout",
        "namespace": "public",
        "bindable": ["layoutChanged"],
        "details": [],
        "deprecated": {},
          "description": "Specifies the layout mechanism used for this application. Applications can use <code>&quot;vertical&quot;</code>, <code>&quot;horizontal&quot;</code>, or <code>&quot;absolute&quot;</code> positioning. Vertical positioning lays out each child component vertically from the top of the application to the bottom in the specified order. Horizontal positioning lays out each child component horizontally from the left of the application to the right in the specified order. Absolute positioning does no automatic layout and requires you to explicitly define the location of each child component.",
        "tags": [
        {  "tagName": "default",
               "values": [""vertical""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "usePadding",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]}]
  }
