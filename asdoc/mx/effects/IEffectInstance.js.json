{ "type": "interface",
  "qname": "mx.effects.IEffectInstance",
    "description": "The IEffectInstance interface represents an instance of an effect playing on a target. Each target has a separate effect instance associated with it. An effect instance's lifetime is transitory. An instance is created when the effect is played on a target and is destroyed when the effect has finished playing. If there are multiple effects playing on a target at the same time (for example, a Parallel effect), there is a separate effect instance for each effect.  <p>Effect developers must create an instance class for their custom effects.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.effects.Effect"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "Number",
    "qname": "duration",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The duration of the effect, in milliseconds.",
    "tags": [
    {  "tagName": "default",
           "values": ["500"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "mx.effects.IEffect",
    "qname": "effect",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The IEffect object that created this IEffectInstance object.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "mx.effects.effectClasses.PropertyChanges",
    "qname": "propertyChanges",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Specifies the PropertyChanges object containing the start and end values for the set of properties relevant to the effect's targets. This property is only set if the <code>captureStartValues()</code> method was called on the effect that created this effect instance.  <p>You often use the <code>propertyChanges</code> property to create an effect that is used as part of a transition. Flex automatically calls the <code>captureStartValues()</code> method when it starts a transition. Within your override of  the <code>Effectinstance.play()</code> method, you can examine the information within the <code>propertyChanges()</code> method to initialize the start and end values of the effect.</p>",
    "tags": [
    {  "tagName": "see",
           "values": ["mx.effects.effectClasses.PropertyChanges"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "int",
    "qname": "startDelay",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Amount of time, in milliseconds, to wait before starting the effect. Possible values are any int greater than or equal to 0. If the effect is repeated by using the <code>repeatCount</code> property, the <code>startDelay</code> property is applied only the first time the effect is played.",
    "tags": [
    {  "tagName": "default",
           "values": ["0"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Object",
    "qname": "target",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The UIComponent object to which this effect is applied.",
    "tags": [
    {  "tagName": "see",
           "values": ["mx.effects.Effect#target"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "initEffect",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "This method is called if the effect was triggered by the EffectManager. This base class version saves the event that triggered the effect in the <code>triggerEvent</code> property. Each subclass should override this method.  to trigger the effect. For example, if the trigger was a mouseDownEffect, the event would be a MouseEvent with type equal to MouseEvent.MOUSEDOWN.",
    "tags": [
    {  "tagName": "param",
           "values": ["event The Event object that was dispatched"]},
        {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "event", "type": "org.apache.royale.events.Event"}]}
  ,
  { "type": "method",
    "qname": "play",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Plays the effect instance on the target. Call the <code>startEffect()</code> method instead to make an effect start playing on an EffectInstance.  <p>In a subclass of EffectInstance, you must override this method. The override must call the <code>super.play()</code> method so that an <code>effectStart</code> event is dispatched from the target.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Royale 0.9.3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ]
  }
