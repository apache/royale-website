{ "type": "class",
  "qname": "mx.effects.CompositeEffect",
  "baseClassname": "mx.effects.Effect"
  ,
    "description": "The CompositeEffect class is the parent class for the Parallel and Sequence classes, which define the <code>&lt;mx:Parallel&gt;</code> and <code>&lt;mx:Sequence&gt;</code> MXML tags. Flex supports two methods to combine, or composite, effects: parallel and sequence. When you combine multiple effects in parallel, the effects play at the same time. When you combine multiple effects in sequence, one effect must complete before the next effect starts.  <p>You can create a composite effect in MXML, as the following example shows:</p>  <pre>\\n &lt;mx:Parallel id=&quot;WipeRightUp&quot;&gt;\\n &lt;mx:children&gt;\\n &lt;mx:WipeRight duration=&quot;1000&quot;/&gt;\\n &lt;mx:WipeUp duration=&quot;1000&quot;/&gt;\\n &lt;/mx:children&gt;\\n &lt;/mx:Parallel&gt;\\n \\n &lt;mx:VBox id=&quot;myBox&quot; hideEffect=&quot;WipeRightUp&quot;&gt;\\n &lt;mx:TextArea id=&quot;aTextArea&quot; text=&quot;hello&quot;/&gt;\\n &lt;/mx:VBox&gt;\\n </pre>  <p>The <code>&lt;mx:children&gt;</code> tag is optional.</p>  <p>Starting a composite effect in ActionScript is usually a five-step process:</p>  <ol> <li>Create instances of the effect objects to be composited together; for example: <pre>myFadeEffect = new mx.effects.Fade(target);</pre></li> <li>Set properties, such as <code>duration</code>, on the individual effect objects.</li> <li>Create an instance of the Parallel or Sequence effect object; for example: <pre>mySequenceEffect = new mx.effects.Sequence();</pre></li> <li>Call the <code>addChild()</code> method for each of the effect objects; for example: <pre>mySequenceEffect.addChild(myFadeEffect);</pre></li> <li>Invoke the composite effect's <code>play()</code> method; for example: <pre>mySequenceEffect.play();</pre></li> </ol>   <p>The CompositeEffect class adds the following tag attributes, and all the subclasses of the CompositeEffect class inherit these tag attributes:</p>  <pre>\\n &lt;mx:<i>tagname</i>&gt;\\n &lt;mx:children&gt;\\n &lt;!-- Specify child effect tags --&gt;\\n &lt;/mx:children&gt;\\n &lt;/mx:<i>tagname</i>&gt;\\n </pre>",
  "tags": [
  {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.effects.CompositeEffect",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  It is included only for consistency with other types of effects.",
        "tags": [
        {  "tagName": "param",
               "values": ["target This argument is ignored for composite effects."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "target", "type": "Object"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "children",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An Array containing the child effects of this CompositeEffect.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
