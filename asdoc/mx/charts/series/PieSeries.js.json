{ "type": "class",
  "qname": "mx.charts.series.PieSeries",
  "baseClassname": "mx.charts.chartClasses.Series"
  ,
    "description": "The PieSeries class defines the data series for a PieChart control. The default item renderer is the WedgeItemRenderer class. Optionally, you can define an itemRenderer for the data series. The itemRenderer must implement the IDataRenderer interface.   <p>The <code>&lt;mx:PieSeries&gt;</code> tag inherits all the properties of its parent classes, and the following properties:</p>  <pre>\\n &lt;mx:PieSeries\\n <strong>Properties</strong>\\n angularAxis=&quot;&quot;\\n explodeRadius=&quot;0&quot;\\n field=&quot;null&quot;\\n fillFunction=&quot;<i>Internal fill function</i>&quot;\\n itemType=&quot;<i>No default</i>&quot;\\n labelFunction=&quot;<i>No default</i>&quot;\\n labelField=&quot;<i>No default</i>&quot;\\n maxLabelRadius=&quot;0.6&quot;\\n nameField=&quot;null&quot;\\n outerRadius=&quot;1&quot;\\n perWedgeExplodeRadius=&quot;<i>Array, no default</i>&quot;\\n renderDataType=&quot;<i>No default</i>&quot;\\n reserveExplodeRadius=&quot;0&quot;\\n startAngle=&quot;0&quot;\\n \\n <strong>Styles</strong>\\n calloutGap=&quot;10&quot;\\n calloutStroke=&quot;<i>IStroke; no default</i>&quot;\\n fills=&quot;<i>IFill; no default</i>&quot;\\n fontSize=&quot;10&quot;\\n innerRadius=&quot;0&quot;\\n insideLabelSizeLimit=&quot;9&quot;\\n itemRenderer=&quot;<i>No default</i>&quot;\\n labelPosition=&quot;none|callout|inside|insideWithCallout|outside&quot;\\n legendMarkerRenderer=&quot;<i>Defaults to series's itemRenderer</i>&quot;\\n radialStroke=&quot;<i>IStroke; no default</i>&quot;\\n renderDirection=&quot;clockwise|counterClockwise&quot;\\n stroke=&quot;<i>IStroke; no default</i>&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["../examples/PieChartExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.charts.PieChart"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.charts.series.PieSeries",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "items",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "mx.core.UIComponent",
        "qname": "labelContainer",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "legendData",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Object",
        "qname": "renderData",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.charts.chartClasses.IAxis",
        "qname": "angularAxis",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The axis object used to map data values to an angle between 0 and 2 * PI. By default, this is a linear axis with the <code>autoAdjust</code> property set to <code>false</code>. So, data values are mapped uniformly around the chart.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "explodeRadius",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A number from 0 to 1, specifying how far all wedges of the pie series should be exploded from the center of the chart as a percentage of the total radius.  <p>This value explodes all wedges in the pie series uniformly. You can set the value for individual wedges via the <code>perWedgeExplodeRadius</code> property.</p>  <p>The explode radius for any individual wedge is the value of the <code>explodeRadius</code> property plus its value in the <code>perWedgeExplodeRadius</code> Array.</p>  <p>To guarantee that the pie series stays within its containing chart's bounds while pulling out wedges, the pie series might shrink the total radius of the pie. If you dynamically pull out wedges at run time, the total pie radius shrinks. To avoid this effect, you can &quot;reserve&quot; the space and shrink the total radius initially by setting the <code>reserveExplodeRadius</code> property to the maximum explode radius you intend to set at run time.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "field",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the field of the data provider that determines the data for each wedge of the PieChart control.",
        "tags": [
        {  "tagName": "default",
               "values": ["null"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "fillFunction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies a method that returns the fill for the current chart item in the series. If this property is set, the return value of the custom fill function takes precedence over the <code>fills</code> style property. But if it returns null, then <code>fills</code> will be prefered.  <p>The custom <code>fillFunction</code> has the following signature:  <pre>\\n <i>function_name</i> (item:ChartItem, index:Number):IFill { ... }\\n </pre>  <code>item</code> is a reference to the chart item that is being rendered. <code>index</code> is the index of the chart item in the renderData's cache. This is different from the index of the chart's data provider because it is sorted based on the x, y, and z values. This function returns an object that implements the <code>IFill</code> interface. </p>  <p>An example usage of a customized <code>fillFunction</code> is to return a fill based on some threshold.</p>  <pre>\\n public function myFillFunction(item:ChartItem, index:Number):IFill {\\n var curItem:PieSeriesItem = PieSeriesItem(item);\\n if (curItem.number > 10)\\n return(new SolidColor(0x123456, .75));\\n else\\n return(new SolidColor(0x563412, .75));\\n }\\n </pre>  <p> If you specify a custom fill function for your chart series and you want to have a Legend control, you must manually create a Legend control and add LegendItems to it. </p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "example",
               "values": []},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Class",
        "qname": "itemType",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The subtype of ChartItem used by this series to represent individual items. Subclasses can override and return a more specialized class if they need to store additional information in the items.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "labelFunction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies a callback function used to render each label of the PieSeries.  The callback function has the following format: <pre>\\n <i>function_name</i>(<i>data</i>:Object, <i>field</i>:String, <i>index</i>:Number, <i>percentValue</i>:Number):String { ... }\\n </pre>  The <code>data</code> Object is the dataProvider item being rendered.  The <code>field</code> String is the name of the field in the data that is being rendered.  The <code>index</code> Number is the index in the original dataProvider of the item being rendered.  The <code>percent</code> Number is the percentage of the total this item represents.  This function returns a String that is the label for this item.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "labelField",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Name of a field in the data provider whose value appears as label Ignored if labelFunction is specified",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "maxLabelRadius",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The maximum amount of the PieSeries's radius that can be allocated to labels. This value is only applicable when the series is rendering callout labels.  <p>When rendering callout labels, the PieSeries reduces the radius of the wedges to allow space for the labels along the sides. Once the amount of space allocated to the labels reaches this limit, the series begins reducing the size of the labels to stay within this size.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "nameField",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the field of the data provider that determines the name of each wedge of the PieChart control.",
        "tags": [
        {  "tagName": "default",
               "values": ["null"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "outerRadius",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The percentage of the total space available to the PieSeries to use when rendering the contents of the series. This value is managed by the containing chart, and should not be assigned to directly. <p>This value ranges from 0 to 1.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "perWedgeExplodeRadius",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An Array of numbers from 0 to 1, specifying how far each wedge of the pie series should be exploded from the center of the chart as a percentage of the total radius.  <p>The <i>n</i>th value in this Array corresponds to the <i>n</i>th pie wedge. For example, to pull the third wedge half way out, you assign <code>perWedgeExplodeRadius = [ 0, 0, 50];</code>.</p>  <p><code>null</code> or missing values in the Array are treated as 0.</p>  <p>To guarantee that the pie series stays within its containing chart's bounds while pulling out wedges, the pie series might shrink the total radius of the pie.</p>  <p>If you dynamically pull out wedges at run time, the total pie radius shrinks. To avoid this effect, you can &quot;reserve&quot; the space and shrink the total radius initially by setting the <code>reserveExplodeRadius</code> property to the maximum explode radius you intend to set at run time.</p>  <p>The value for an individual wedge in the <code>perWedgeExplodeRadius</code> Array is added to the value of the series's <code>explodeRadius</code> property to calculate the total explode radius for any given wedge.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Class",
        "qname": "renderDataType",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The subtype of ChartRenderData used by this series to store all data necessary to render. Subclasses can override and return a more specialized class if they need to store additional information for rendering.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "reserveExplodeRadius",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A number from 0 to 1, specifying how much of the total radius of the pie series should be reserved to explode wedges at runtime. When a pie wedge is exploded, the series must shrink the total radius of the pie to make sure it doesn't exceed the bounds of its containing chart. Thus if a developer changes the explode value of a wedge at runtime, it can effectively shrink all the wedges rather than the desired effect of pulling out a single wedge. To avoid this, set <code>reserveExplodeRadius</code> to the maximum value you intend to explode any wedge at runtime.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "startAngle",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the starting angle for the first slice of the PieChart control. The default value is 0, which is horizontal on the right side of the PieChart control.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.core.IFlexModuleFactory",
        "qname": "moduleFactory",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "commitProperties",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "createChildren",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "updateDisplayList",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "unscaledWidth", "type": "Number"},
        { "name": "unscaledHeight", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "dataToLocal",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": [""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.geom.Point",
          "params": [{ "name": "dataValues", "type": "Array"}]}
      ,
      { "type": "method",
        "qname": "localToData",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": [""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Array",
          "params": [{ "name": "v", "type": "org.apache.royale.geom.Point"}]}
      ,
      { "type": "method",
        "qname": "getElementBounds",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "renderData", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "beginInterpolation",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": [{ "name": "sourceRenderData", "type": "Object"},
        { "name": "destRenderData", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "interpolate",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "interpolationValues", "type": "Array"},
        { "name": "interpolationData", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "getMissingInterpolationValues",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "sourceProps", "type": "Object"},
        { "name": "srcCache", "type": "Array"},
        { "name": "destProps", "type": "Object"},
        { "name": "destCache", "type": "Array"},
        { "name": "index", "type": "Number"},
        { "name": "customData", "type": "Object"}]}
      ]
  ,
  "events": [
  ]
  }






