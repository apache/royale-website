{ "type": "class",
  "qname": "mx.charts.styles.HaloDefaults",
  "baseClassname": ""
  ,
    "description": "Initializes the core default styles for the charts classes. Each chart and element is responsible for initializing their own style values, but they rely on the common values computed by the HaloDefaults class.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "chartBaseChartSeriesStyles",
        "return": "Array",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The default selectors applied to the individual series in a chart.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "defaultColors",
        "return": "Array",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The default color values used by chart controls to color different series (or, in a PieSeries, different items).",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "defaultFills",
        "return": "Array",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The default SolidColor objects used as fills by chart controls to color different series (or, in a PieSeries, different items). These Fill objects correspond to the values in the <code>defaultColors</code> Array.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "pointStroke",
        "return": "mx.graphics.IStroke",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "emptyStroke",
        "return": "mx.graphics.IStroke",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "A pre-defined invisible Stroke that is used by several chart styles.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "createSelector",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Creates a CSSStyleDeclaration object or returns an existing one.  this name, this method creates a new one and returns it.   that name, this method creates a new one and returns it.",
        "tags": [
        {  "tagName": "param",
               "values": ["selectorName The name of the selector to return. If no existing CSSStyleDeclaration object matches", "styleManager The styleManager instance to be used for getting and setting style declarations."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["The CSSStyleDeclaration object that matches the provided selector name. If no CSSStyleDeclaration object matches"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.styles.CSSStyleDeclaration",
          "params": [{ "name": "selectorName", "type": "String"},
        { "name": "styleManager", "type": "mx.styles.IStyleManager2"}]}
      ,
      { "type": "method",
        "qname": "init",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Initializes the common values used by the default styles for the chart and element classes.",
        "tags": [
        {  "tagName": "param",
               "values": ["styleManager The styleManager instance to be used for getting and setting style declarations."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "styleManager", "type": "mx.styles.IStyleManager2"}]}
      ,
      { "type": "method",
        "qname": "findStyleDeclaration",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Returns the CSSStyleDeclaration by chasing the chain of styleManagers if necessary.",
        "tags": [
        {  "tagName": "param",
               "values": ["name The name of the CSSStyleDeclaration"]},
            {  "tagName": "return",
               "values": ["The CSSStyleDeclaration or null if not found"]}  ],
          "return": "mx.styles.CSSStyleDeclaration",
          "params": [{ "name": "styleManager", "type": "mx.styles.IStyleManager2"},
        { "name": "name", "type": "String"}]}
      ]
  ,
  "events": [
  ]
  }
