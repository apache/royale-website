{ "type": "class",
  "qname": "mx.charts.chartClasses.NumericAxis",
  "baseClassname": "mx.charts.chartClasses.AxisBase"
  ,
    "description": "The NumericAxis class acts as a common base class for axis types representing a continuous range of values between a defined minimum and maximum. The built-in LinearAxis, LogAxis, and DateTimeAxis classes all extend this base class.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.charts.DateTimeAxis", "mx.charts.LinearAxis", "mx.charts.LogAxis"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.charts.chartClasses.NumericAxis",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "assignedMaximum",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The explicitly assigned maximum value. If no value has been assigned, this will be <code>NaN</code>. Typically, calculations should be performed with the <code>computedMaximum</code> field.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "assignedMinimum",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The explicitly assigned minimum value. If no value has been assigned, this will be <code>NaN</code>. Typically calculations should be performed with the <code>computedMinimum</code> field.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "autoAdjust",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies whether Flex rounds values. If <code>false</code>, Flex does not round the values set by the <code>minimum</code> and <code>maximum</code> properties, or modify the default <code>minimum</code> and <code>maximum</code> values.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "baseAtZero",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies whether Flex tries to keep the <code>minimum</code> and <code>maximum</code> values rooted at zero. If all axis values are positive, the minimum axis value is zero. If all axis values are negative, the maximum axis value is zero.",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "computedInterval",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The computed interval represented by this axis. The <code>computedInterval</code> is used by the AxisRenderer and Gridlines classes to determine where to render tick marks and grid lines. The NumericAxis base class watches this field for changes to determine if the chart needs to be re-rendered. Derived classes are responsible for computing the value of this field.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "computedMaximum",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The computed maximum value represented by this axis. If the user has explicitly assigned a maximum value, the <code>computedMaximum</code> and <code>assignedMaximum</code> properties are usually the same. Otherwise, the <code>computedMaximum</code> is generated from the values represented in the chart.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "field",
        "qname": "computedMinimum",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The computed minimum value represented by this axis. If the user has explicitly assigned a minimum value, the <code>computedMinimum</code> and <code>assignedMinimum</code> properties are usually be the same. Otherwise, the <code>computedMinimum</code> is generated from the values represented in the chart.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "direction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Determines the direction in which the axis is rendered. Possible values are <code>normal</code>, and <code>inverted</code>.  All derived classes should take care of the way min and max are set depending on <code>direction</code>.  All series should take care of the way it is rendered depending on the <code>direction</code> of its underlying axis.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"normal\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "labelCache",
        "return": "Array",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The most recent set of AxisLabel objects generated to represent this axis. This property is <code>null</code> if the axis has been modified and requires new labels. To guarantee that the value of the <code>labelCache</code> property is correct, call the <code>buildLabelCache()</code> method before accessing the <code>labelCache</code> property.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "labelFunction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called to format axis values for display as labels. A <code>labelFunction</code> has the following signature: <pre>\\n function <i>function_name</i>(<i>labelValue</i>:Object, <i>previousValue</i>:Object, <i>axis</i>:IAxis):String { ... }\\n </pre>  <p>If you know the types of the data your function will be formatting, you can specify an explicit type for the <code>labelValue</code> and <code>previousValue</code> parameters.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "labelMaximum",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The maximum value where a label should be placed. After computing an adjusted minimum value, many axis types expand the range of the axis further to make room for additional rendering artifacts in the chart, such as labels and borders. This value represents the maximum value in the chart <em>before</em> it is adjusted for these artifacts. Typically axes generate labels to make sure this value is labeled, rather than the adjusted maximum of the axis.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "labelMinimum",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The minimum value where a label should be placed. After computing an adjusted minimum value, many axis types expand the range of the axis further to make room for additional rendering artifacts in the chart, such as labels and borders. This value represents the minimum value in the chart <em>before</em> it is adjusted for these artifacts. Typically axes will generate labels to make sure this value is labeled, rather than the adjusted minimum of the axis.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "baseline",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The computed minimum value for the axis as long as this value is greater than 0. If the maximum value is less than or equal to 0, then the <code>baseline</code> property is the computed maximum. If neither value is greater than 0, then the <code>baseline</code> property is 0.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "minorTickCache",
        "return": "Array",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The most recent set of minor tick marks generated to represent this axis. This property may be <code>null</code> if the axis has been modified and requires new labels and tick marks. Use the public accessor <code>minorTicks</code> to build the minor tick marks on demand.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "minorTicks",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An Array of minor tick marks generated to represent this axis.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "padding",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies padding that Flex adds to the calculated minimum and maximum values for the axis when rendering the values on the screen.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "parseFunction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specify a <code>parseFunction</code> to customize how the values rendered by your chart are converted into numeric values. A custom <code>parseFunction</code> is passed a data value and should return a corresponding number representing the same value. By default, this axis uses the ECMA function <code>parseFloat()</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "uint",
        "qname": "requiredDescribedFields",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The fields of the DescribeData structure that this axis is interested in.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "ticks",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An Array of tick marks for this axis.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Number",
        "qname": "zeroValue",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "method",
        "qname": "mapCache",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#mapCache()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "cache", "type": "Array"},
        { "name": "field", "type": "String"},
        { "name": "convertedField", "type": "String"},
        { "name": "indexValues", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "filterCache",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#filterCache()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "cache", "type": "Array"},
        { "name": "field", "type": "String"},
        { "name": "filteredField", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "transformCache",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#transformCache()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "cache", "type": "Array"},
        { "name": "field", "type": "String"},
        { "name": "convertedField", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "invertTransform",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#invertTransform()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": [{ "name": "value", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "formatForScreen",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#formatForScreen()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "String",
          "params": [{ "name": "value", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "getLabelEstimate",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#getLabelEstimate()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.charts.chartClasses.AxisLabelSet",
          "params": []}
      ,
      { "type": "method",
        "qname": "preferDropLabels",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#preferDropLabels()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "getLabels",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#getLabels()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.charts.chartClasses.AxisLabelSet",
          "params": [{ "name": "minimumAxisLength", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "reduceLabels",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "copy",
               "values": ["mx.charts.chartClasses.IAxis#reduceLabels()"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.charts.chartClasses.AxisLabelSet",
          "params": [{ "name": "intervalStart", "type": "mx.charts.AxisLabel"},
        { "name": "intervalEnd", "type": "mx.charts.AxisLabel"}]}
      ,
      { "type": "method",
        "qname": "buildLabelCache",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Populates the <code>labelCache</code> property with labels representing the current values of the axis. Subclasses must implement this function. This function is called many times, so you should check to see if the <code>labelCache</code> property is <code>null</code> before performing any calculations.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["true if the labels were regenerated."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": []}
      ,
      { "type": "method",
        "qname": "buildMinorTickCache",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Builds an Array of positions for the minor tick marks Array that is generated by this axis. Subclasses must implement this function. This function is  called automatically by the NumericAxis. You should access the <code>minorTicks</code> property instead of calling this function directly.  minimum and maximum values where minor tick marks are rendered.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["An Array of positions from 0 to 1 that represent points between the axis"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Array",
          "params": []}
      ,
      { "type": "method",
        "qname": "invalidateCache",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Invalidates the cached labels and tick marks that represent this axis's values. Derived classes should call this function whenever values used in the calculation of labels and tick marks change.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "update",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "dataDescriptions",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An Array of DataDescription structures describing the data being represented by the chart. An axis can use this property to generate values for properties, such as its range.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "adjustMinMax",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adjusts the generated or assigned range of the axis's labels. This method is called during the update cycle of the axis. Subclasses can override this method to do special processing on the values. By default, no adjustments are made to the range.",
        "tags": [
        {  "tagName": "param",
               "values": ["minValue The computed minimum value.", "maxValue The computed maximum value."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "minValue", "type": "Number"},
        { "name": "maxValue", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "guardMinMax",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Protects the range against invalid values for this axis type. This function is called during the update cycle of the axis to guarantee that invalid ranges are not generated. Subclasses can override this class and define logic that is appropriate to their axis type.   values of the form <code>[min,max]</code>.",
        "tags": [
        {  "tagName": "param",
               "values": ["min The computed minimum value.", "max The computed maximum value."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["null if no adjustment is necessary, or an Array containing the adjusted"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Array",
          "params": [{ "name": "min", "type": "Number"},
        { "name": "max", "type": "Number"}]}
      ]
  ,
  "events": [
  ]
  }
