{ "type": "class",
  "qname": "mx.charts.chartClasses.StackedSeries",
  "baseClassname": "mx.charts.chartClasses.Series"
  ,
    "description": "Stacked Series serves as the common base class for all of the stacking set series (BarSet, ColumnSet, and AreaSet). A StackedSeries accepts an Array of sub-series elements and does the appropriate calculations to stack them vertically so that each series renders the sum of the previous series's data plus its own value. This class is not intended for direct use.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.charts.chartClasses.StackedSeries",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "posTotalsByPrimaryAxis",
        "return": "Object",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The summed totals of the stacked positive values. This property contains a Dictionary whose keys are the values represented by the child series along the primary axis (for example, x axis values for a ColumnSeries, y axis values for a BarSeries), and whose values are the summed total of all the positive child series values at that key.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "negTotalsByPrimaryAxis",
        "return": "Object",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The summed totals of the stacked negative values. This property contains a Dictionary whose keys are the values represented by the child series along the primary axis (for example, x axis values for a ColumnSeries, y axis values for a BarSeries), and whose values are the summed total of all the negative child series values at that key.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "stackedMaximum",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The maximum sum represented by this stacked series.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "stackedMinimum",
        "return": "Number",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The minimum sum represented by this stacked series.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "allowNegativeForStacked",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Setting this property to true will stack positive and negative values separately",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.charts.chartClasses.IAxis",
        "qname": "horizontalAxis",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Defines the labels, tick marks, and data position for items on the x-axis. Use either the LinearAxis class or the CategoryAxis class to set the properties of the horizontalAxis as a child tag in MXML or create a LinearAxis or CategoryAxis object in ActionScript.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "series",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An array of sub-series managed by this stacking set. These series are rendered according to the stacking behavior of this stacking set as defined by the value of the <code>type</code> property.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "type",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The grouping behavior of this series. All stacking series support <code>&quot;overlaid&quot;</code>, <code>&quot;stacked&quot;</code>, and <code>&quot;100%&quot;</code>. When the <code>type</code> property is <code>&quot;overlaid&quot;</code>, all sub-series are rendererd normally, with no special behavior applied. When the <code>type</code> property is <code>&quot;stacked&quot;</code>, each sub-series is rendered as the sum of its data plus the values of all previous series. When the <code>type</code> property is <code>&quot;100%&quot;</code>, each sub-series is rendered as its portion of the total sum of all series.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.charts.chartClasses.IAxis",
        "qname": "verticalAxis",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Defines the labels, tick marks, and data position for items on the y-axis. Use either the LinearAxis class or the CategoryAxis class to set the properties of the horizontalAxis as a child tag in MXML or create a LinearAxis or CategoryAxis object in ActionScript.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "legendData",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "method",
        "qname": "invalidateSeries",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Call this method to trigger a call to the <code>buildSubSeries()</code> method on the next call to the <code>commitProperties()</code> method.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "invalidateStacking",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Call this method to trigger a regeneration of the stacked values on the next call to the <code>commitProperties()</code> method.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "customizeSeries",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Applies any customization to a sub-series when building the stacking behavior. By default, this method assigns the inherited data providers to the sub-series. Derived classes can override this method to apply further customization.",
        "tags": [
        {  "tagName": "param",
               "values": ["g The chart element to customize.", "i The sub-series' position in the series array."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "g", "type": "mx.charts.chartClasses.IChartElement"},
        { "name": "i", "type": "uint"}]}
      ,
      { "type": "method",
        "qname": "buildSubSeries",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Processes the Array of sub-series for display, when necessary. This method ensures that all sub-series are added as children of this stacking set, and applies any per-series customization that is necessary (for example, assigning inherited data providers or clustering properties). <p>This method is also responsible for informing the chart that series have changed and, as a result, implicit series styles must be reassigned. This method is called automatically by the stacking set, when necessary. Instead of calling this method directly, you should consider calling the <code>invalidateSeries()</code> method.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "updateStacking",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Iterates over the individual sub-series to build the stacked values.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "stack",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Updates the series data, and uses the values of the series data it is stacking on top of so it can stack correctly.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "formatDataTip",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Provides custom text for DataTip objects. Stacking sets override the DataTip text of their contained sub-series to display additional information related to the stacking behavior. Derived classes must override this method to define custom DataTip text.   override this method to provide a custom DataTip.",
        "tags": [
        {  "tagName": "param",
               "values": ["hitData The hitData object in the stack."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["The custom text for the DataTip. The default is the empty string. You must"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "String",
          "params": [{ "name": "hitData", "type": "mx.charts.HitData"}]}
      ]
  ,
  "events": [
  ]
  }
