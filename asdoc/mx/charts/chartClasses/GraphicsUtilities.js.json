{ "type": "class",
  "qname": "mx.charts.chartClasses.GraphicsUtilities",
  "baseClassname": ""
  ,
    "description": "A set of internal graphics rendering utilities used by the various chart classes.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "setLineStyle",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "g", "type": "mx.display.Graphics"},
        { "name": "ls", "type": "mx.graphics.IStroke"}]}
      ,
      { "type": "method",
        "qname": "fillRect",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Fill a rectangle using the provided IFill and IStroke objects. This utility function fills the provided rectangle in the Graphics object with the provided Fill and Stroke. If no Stroke is provided, the rectangle is filled with no border. If no Fill is provided, the rectangle is drawn with no fill.",
        "tags": [
        {  "tagName": "param",
               "values": ["g The Graphics object to draw into.", "left The left of the rectangle to fill.", "top The top of the rectangle to fill.", "right The right of the rectangle to fill.", "bottom The bottom of the rectangle to fill.", "fill The IFill object to fill the rectangle with. Set this parameter to null to draw a rectangle with no Fill.", "ls The stroke object to draw the rectangle with. Set this parameter to null to draw a rectangle with no Stroke."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "g", "type": "mx.display.Graphics"},
        { "name": "left", "type": "Number"},
        { "name": "top", "type": "Number"},
        { "name": "right", "type": "Number"},
        { "name": "bottom", "type": "Number"},
        { "name": "fill", "type": "Object"},
        { "name": "ls", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "drawPolyLine",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Draws a line connecting the datapoints using one of various forms.",
        "tags": [
        {  "tagName": "param",
               "values": ["g     The Graphics object to draw into.", "pts   An Array of datapoints that define the line.", "start The index of the first point in the <code>pts</code> Array to use when drawing the line.", "end   The index of the last point, exclusive, to use when drawing the line.", "hProp The name of the property in the objects contained in the <code>pts</code> Array that defines the horizontal position of the points in the line.", "vProp The name of the property in the objects contained in the <code>pts</code> Array that defines the vertical position of the points in the line.", "stroke The Stroke used to render the line.", "form  The form to render the line with. Valid values are "segment","horizontal","vertical","step","reverseStep", or "curve". These forms are similar to the LineSeries class's <code>form</code> property.", "moveToStart Indicates whether to first move the pen to the beginning of the line before drawing. Pass <code>false</code> to use this function to continue a line in progress."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "g", "type": "mx.display.Graphics"},
        { "name": "pts", "type": "Array"},
        { "name": "start", "type": "int"},
        { "name": "end", "type": "int"},
        { "name": "hProp", "type": "String"},
        { "name": "vProp", "type": "String"},
        { "name": "stroke", "type": "mx.graphics.IStroke"},
        { "name": "form", "type": "Object"},
        { "name": "moveToStart", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "drawArc",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Draws an arc in the target Graphics object. Set to <code>true</code> to continue drawing a line that is already in progress.",
        "tags": [
        {  "tagName": "param",
               "values": ["g The Graphics object to draw into.", "x The horizontal origin of the arc.", "y The vertical origin of the arc.", "startAngle The starting angle, in radians, of the arc.", "arc The sweep, in radians, of the arc.", "radius  The horizontal radius, in pixels, of the arc", "yRadius The vertical radius, in pixels, of the arc. If unspecified, it is assumed to be the same as the radius", "continueFlag Indicates whether the routine should move the graphics pen to the beginning of the arc before drawing."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "g", "type": "mx.display.Graphics"},
        { "name": "x", "type": "Number"},
        { "name": "y", "type": "Number"},
        { "name": "startAngle", "type": "Number"},
        { "name": "arc", "type": "Number"},
        { "name": "radius", "type": "Number"},
        { "name": "yRadius", "type": "Number"},
        { "name": "continueFlag", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "fillFromStyle",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Converts a style value into a Fill object. This convenience method converts a value assigned through styles into a Fill object that can be used to fill an area on the screen. If the value is numeric, this function converts it into a corresponding SolidColor.",
        "tags": [
        {  "tagName": "param",
               "values": ["v The value to convert into a Fill."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["The corresponding IFill object."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.graphics.IFill",
          "params": [{ "name": "v", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "colorFromFill",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Converts a fill value into a solid color. This convenience method pulls a color value out of a Fill that best approximates the Fill on the screen.",
        "tags": [
        {  "tagName": "param",
               "values": ["f The Fill object to extract a color from."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["A color value representing the Fill."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "uint",
          "params": [{ "name": "f", "type": "Object"}]}
      ]
  }
