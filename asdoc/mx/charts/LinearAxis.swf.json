{ "type": "class",
  "qname": "mx.charts.LinearAxis",
  "baseClassname": "mx.charts.chartClasses.NumericAxis"
  ,
    "description": "The LinearAxis class maps numeric values evenly between a minimum and maximum value along a chart axis. By default, it determines <code>minimum</code>, <code>maximum</code>, and <code>interval</code> values from the charting data to fit all of the chart elements on the screen. You can also explicitly set specific values for these properties.  <p>The auto-determination of range values works as follows:  <ol> <li> Flex determines a minimum and maximum value that accomodates all the data being displayed in the chart.</li> <li> If the <code>autoAdjust</code> and <code>baseAtZero</code> properties are set to <code>true</code>, Flex makes the following adjustments: <ul> <li>If all values are positive, Flex sets the <code>minimum</code> property to zero.</li> <li>If all values are negative, Flex sets the <code>maximum</code> property to zero.</li> </ul> </li> <li> If the <code>autoAdjust</code> property is set to <code>true</code>, Flex adjusts values of the <code>minimum</code> and <code>maximum</code> properties by rounding them up or down.</li> <li> Flex checks if any of the elements displayed in the chart require extra padding to display properly (for example, for labels). It adjusts the values of the <code>minimum</code> and <code>maximum</code> properties accordingly.</li> <li> Flex determines if you have explicitly specified any padding around the <code>minimum</code> and <code>maximum</code> values, and adjusts their values accordingly.</li> </ol> </p>   <p>The <code>&lt;mx:LinearAxis&gt;</code> tag inherits all the properties of its parent classes and adds the following properties:</p>  <pre>\\n &lt;mx:LinearAxis\\n <strong>Properties</strong>\\n interval=&quot;null&quot;\\n maximum=&quot;null&quot;\\n maximumLabelPrecision=&quot;null&quot;\\n minimum=&quot;null&quot;\\n minorInterval=&quot;null&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/HLOCChartExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.charts.chartClasses.IAxis"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.charts.LinearAxis",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "direction",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Determines the direction in which the axis is rendered. Possible values are <code>normal</code>, and <code>inverted</code>.  All derived classes should take care of the way min and max are set depending on <code>direction</code>.  All series should take care of the way it is rendered depending on the <code>direction</code> of its underlying axis.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"normal\"", "\"normal\"", "\"normal\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 4", "Flex 4", "Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0", "3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "alignLabelsToInterval",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "interval",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the numeric difference between label values along the axis. Flex calculates the interval if this property is set to <code>NaN</code>. The default value is <code>NaN</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "maximum",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the maximum value for an axis label. If you set the <code>autoAdjust</code> property to <code>true</code>, Flex calculates this value. If <code>NaN</code>, Flex determines the maximum value from the data in the chart. The default value is <code>NaN</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "maximumLabelPrecision",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the maximum number of decimal places for representing fractional values on the labels generated by this axis. By default, the axis autogenerates this value from the labels themselves. A value of 0 rounds to the nearest integer value, while a value of 2 rounds to the nearest 1/100th of a value.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "minimum",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the minimum value for an axis label. If <code>NaN</code>, Flex determines the minimum value from the data in the chart. The default value is <code>NaN</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "minorInterval",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the numeric difference between minor tick marks along the axis. Flex calculates the difference if this property is set to <code>NaN</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
