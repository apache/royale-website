{ "type": "interface",
  "qname": "mx.rpc.xml.IXMLSchemaInstance",
"baseInterfaceNames": [
]
,
    "description": "An ActionScript type should implement this interface when it needs to instruct an XML Schema based encoder (such as the WebService SOAP client) which concrete type definition to use while encoding instances of the type.  <p>Note that anonymous ActionScript objects can also specify a qualified type by wrapping an object in an instance of mx.utils.ObjectProxy and setting the <code>object_proxy::type</code> property with the appropriate QName.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.utils.ObjectProxy"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "QName",
    "qname": "xsiType",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "When encoding ActionScript instances as XML the encoder may require a type definition for the concrete implementation when the associated XML Schema complexType is abstract. This property allows a typed instance to specify the concrete implementation as a QName to represent the <code>xsi:type</code>.  <p> Note that <code>[Transient]</code> metadata can be applied to implementations of this property to exclude it during object serialization. </p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]}]
  }
