{ "type": "class",
  "qname": "mx.rpc.AbstractInvoker",
  "baseClassname": "org.apache.royale.events.EventDispatcher"
  ,
    "description": "An invoker is an object that actually executes a remote procedure call (RPC). For example, RemoteObject, HTTPService, and WebService objects are invokers.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "keepLastResult",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Flag indicating whether the operation should keep its last call result for later access. <p> If set to true, the last call result will be accessible through <code>lastResult</code> bindable property. </p> <p> If set to false, the last call result will be cleared after the call, and must be processed in the operation's result handler. This will allow the result object to be garbage collected, which is especially useful if the operation is only called a few times and returns a large result. </p> <p>If not set, will use the <code>keepLastResult</code> value of its owning Service, if any, or the default value.</p>",
        "tags": [
        {  "tagName": "see",
               "values": ["#lastResult", "mx.rpc.AbstractService#keepLastResult"]},
            {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 3"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.11"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Object",
        "qname": "lastResult",
        "namespace": "public",
        "bindable": ["resultForBinding"],
        "details": [],
        "deprecated": {},
          "description": "The result of the last invocation.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "makeObjectsBindable",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "When this value is true, anonymous objects returned are forced to bindable objects.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "operationManager",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "This property is set usually by framework code which wants to modify the behavior of a service invocation without modifying the way in which the service is called externally.  This allows you to add a &quot;filter&quot; step on the method call to ensure for example that you do not return duplicate instances for the same id or to insert parameters for performing on-demand paging.  When this is set to a non-null value on the send call, the operationManager function is called instead.  It returns the token that the caller uses to be notified of the result.  Typically the called function will at some point clear this property temporarily, then invoke the operation again actually sending it to the server this time.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "field",
        "qname": "resultType",
        "return": "Class",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies an optional return type for the operation.  Used in situations where you want to coerce the over-the-wire information into a specific ActionScript class or to provide metadata for other services as to the return type of this operation.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "field",
        "qname": "resultElementType",
        "return": "Class",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Like resultType, used to define the ActionScript class used by a given operation though this property only applies to operations which return a multi-valued result (e.g. an Array or ArrayCollection (IList)).  This property specifies an ActionScript class for the members of the array or array collection.   When you set resultElementType, you do not have to set resultType.  In that case, the operation returns an Array if makeObjectsbindable is false and an ArrayCollection otherwise.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]},
            {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "field",
        "qname": "BINDING_RESULT",
        "return": "String",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Event dispatched for binding when the <code>result</code> property changes.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "cancel",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Cancels the last service invocation or an invokation with the specified ID. Even though the network operation may still continue, no result or fault event is dispatched.  last service invocation is canceled.",
        "tags": [
        {  "tagName": "param",
               "values": ["id The messageId of the invocation to cancel. Optional. If omitted, the"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["The AsyncToken associated with the call that is cancelled or null if no call was cancelled."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.rpc.AsyncToken",
          "params": [{ "name": "id", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "clearResult",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the <code>result</code> property of the invoker to <code>null</code>. This is useful when the result is a large object that is no longer being used.  bound to the result to update. Otherwise, set to <code>false</code>. The default value is <code>true</code>",
        "tags": [
        {  "tagName": "param",
               "values": ["fireBindingEvent Set to <code>true</code> if you want anything"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "fireBindingEvent", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "setResult",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "This hook is exposed to update the lastResult property.  Since lastResult is ordinarily updated automatically by the service, you do not typically call this.  It is used by managed services that want to ensure lastResult always points to &quot;the&quot; managed instance for a given identity even if the the service returns a new copy of the same object.",
        "tags": [
        {  "tagName": "param",
               "values": ["result The new value for the lastResult property."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "result", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "monitorRpcEvent",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Monitor an rpc event that is being dispatched",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.rpc.events.AbstractEvent"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.rpc.AsyncRequest",
        "qname": "asyncRequest",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]}]
  ,
  "events": [
  ]
  }
