{ "type": "class",
  "qname": "mx.rpc.soap.AbstractWebService",
  "baseClassname": "mx.rpc.AbstractService"
  ,
    "description": "AbstractWebService is an abstract base class for implementations that provide RPC access to SOAP-based web services. This class does not load WSDL descriptions at runtime.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.rpc.soap.AbstractWebService",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a new WebService.  The destination, if specified, should match an entry in services-config.xml.  If unspecified, the WebService uses the DefaultHTTP destination. The <code>rootURL</code> is required if you intend to use a relative URL find the WSDL document for this WebService.  in the services-config.xml file.",
        "tags": [
        {  "tagName": "param",
               "values": ["destination The destination. It should match a destination name", "rootURL The URL that the WebService should use when computing relative URLs."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "destination", "type": "String"},
        { "name": "rootURL", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "description",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The description of the service for the currently active port.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "destination",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "endpointURI",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The location of the WebService. Normally, the WSDL document specifies the location of the services, but you can set this property to override that location.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "headers",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the array of SOAPHeaders registered for the WebService.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "httpHeaders",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Custom HTTP headers to be sent to the SOAP endpoint. If multiple headers need to be sent with the same name the value should be specified as an Array.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "makeObjectsBindable",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "When this value is true, anonymous objects returned are forced to bindable objects.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "port",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the port within the WSDL document that this WebService should use.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "ready",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies whether the WebService is ready to make requests.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "rootURL",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The URL that the WebService should use when computing relative URLs. This property is only used when going through the proxy. When the <code>useProxy</code> property is set <code>to false</code> the relative URL is computed automatically based on the location of the SWF running this application. If not set explicitly <code>rootURL</code> is automatically set to the URL of mx.messaging.config.LoaderConfig.url.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "service",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the service within the WSDL document that this WebService should use.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "useProxy",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies whether to use the Flex proxy service. The default value is <code>false</code>. If you do not specify <code>true</code> to proxy requests though the Flex server, you must ensure that Flash Player can reach the target URL. You also cannot use destinations defined in the services-config.xml file if the <code>useProxy</code> property is set to <code>false</code>.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Function",
        "qname": "xmlSpecialCharsFilter",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Custom function to be used to escape XML special characters before encoding any simple content. Valid for all operations on the web service unless specifically overwritten on the operation level. If none is provided, the default function is whatever is set by the particular implementation of IXMLEncoder.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "convertParametersHandler",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An optional function, primarily intended for framework developers who need to install a function to get called with the parameters passed to each webservice operation invocation. The function takes an array of parameters and returns the potentially altered array.  The function definition should look like: <code> function myParametersFunction(parameters:Array):Array </code>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "convertResultHandler",
        "return": "Function",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An optional function, primarily intended for framework developers who need to install a hook to process the results of an operation before notifying the result handlers.  The function definition should look like: <code> function myConvertResultsFunction(result:*, operation:AbstractOperation):* </code>  It is passed the result just after the makeObjectsBindable conversion has been done but before the result event is created.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Adds a header that will be applied to all operations of this web service. The header can be provided in a pre-encoded form as an XML instance, or as a SOAPHeader instance which leaves the encoding up to the internal SOAP encoder.",
        "tags": [
        {  "tagName": "param",
               "values": ["header The SOAP header to add to all operations."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "header", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "addSimpleHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Add a header that will be applied to all operations of this WebService.",
        "tags": [
        {  "tagName": "param",
               "values": ["qnameLocal The localname for the header QName.", "qnameNamespace The namespace for the header QName.", "headerName The name of the header.", "headerValue The value of the header."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "qnameLocal", "type": "String"},
        { "name": "qnameNamespace", "type": "String"},
        { "name": "headerName", "type": "String"},
        { "name": "headerValue", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "clearHeaders",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Clears the headers that applied to all operations.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "getHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a header if a match is found based on QName, localName, and URI.",
        "tags": [
        {  "tagName": "param",
               "values": ["qname QName of the SOAPHeader.", "headerName (Optional) Name of a header in the SOAPHeader content."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["Returns a header if a match is found based on QName, localName, and URI."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.rpc.soap.SOAPHeader",
          "params": [{ "name": "qname", "type": "QName"},
        { "name": "headerName", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "removeHeader",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes the header with the given QName from all operations.",
        "tags": [
        {  "tagName": "param",
               "values": ["qname QName of the SOAPHeader.", "headerName (Optional) Name of a header in the SOAPHeader content."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "qname", "type": "QName"},
        { "name": "headerName", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "setRemoteCredentials",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "The username and password to authenticate a user when accessing the webservice.  These will be passed as part of the HTTP Authorization header from the proxy to the endpoint. If useProxy is false this property will be ignored.  remote credentials. The default is null, which implies the legacy charset of ISO-Latin-1. The only other supported charset is &quot;UTF-8&quot;.",
        "tags": [
        {  "tagName": "param",
               "values": ["remoteUsername The username to pass to the remote endpoint.", "remotePassword The password to pass to the remote endpoint.", "charset The character set encoding to use while encoding the"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "remoteUsername", "type": "String"},
        { "name": "remotePassword", "type": "String"},
        { "name": "charset", "type": "String"}]}
      ,
      { "type": "field",
        "qname": "DEFAULT_DESTINATION_HTTP",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The default destination to use for HTTP connections when invoking a webservice through a proxy. If you don't provide a destination and you set the <code>useProxy</code> property to <code>true</code>, the default destinations will be used to route the requests to the webservice endpoint.  <p>Note that if the default destinations are used, you must specify the WSDL and endpointURI on the client. If you use a non-default proxy destination, you can have the WSDL and endpointURI specified in the destination configuration.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "DEFAULT_DESTINATION_HTTPS",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The default destination to use for HTTPS connections when invoking a webservice through a proxy. If you don't provide a destination and you set the <code>useProxy</code> property to <code>true</code>, the default destinations will be used to route the requests to the webservice endpoint.  <p>Note that if the default destinations are used, you must specify the WSDL and endpointURI on the client. If you use a non-default proxy destination, you can have the WSDL and endpointURI specified in the destination configuration.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
