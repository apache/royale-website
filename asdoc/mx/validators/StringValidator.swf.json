{ "type": "class",
  "qname": "mx.validators.StringValidator",
  "baseClassname": "mx.validators.Validator"
  ,
    "description": "The StringValidator class validates that the length of a String is within a specified range.   <p>The <code>&lt;mx:StringValidator&gt;</code> tag inherits all of the tag attributes of its superclass, and add the following tag attributes:</p>  <pre>\\n &lt;mx:StringValidator\\n maxLength=&quot;NaN&quot;\\n minLength=&quot;NaN&quot;\\n tooLongError=&quot;This string is longer than the maximum allowed length. This must be less than {0} characters long.&quot;\\n tooShortError=&quot;This string is shorter than the minimum allowed length. This must be at least {0} characters long.&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/StringValidatorExample.mxml"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "validateString",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Convenience method for calling a validator. Each of the standard Flex validators has a similar convenience method.    specified in the <code>value</code> parameter. For example, if the <code>value</code> parameter specifies value.mystring, the <code>baseField</code> value is <code>&quot;mystring&quot;</code>.  ValidationResult  object for each field examined by the validator.",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.validators.ValidationResult"]},
            {  "tagName": "param",
               "values": ["validator The StringValidator instance.", "value A field to validate.", "baseField Text representation of the subfield"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["An Array of ValidationResult objects, with one"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Array",
          "params": [{ "name": "validator", "type": "mx.validators.StringValidator"},
        { "name": "value", "type": "Object"},
        { "name": "baseField", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "mx.validators.StringValidator",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "maxLength",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Maximum length for a valid String. A value of NaN means this property is ignored.",
        "tags": [
        {  "tagName": "default",
               "values": ["NaN"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "minLength",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Minimum length for a valid String. A value of NaN means this property is ignored.",
        "tags": [
        {  "tagName": "default",
               "values": ["NaN"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "tooLongError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message when the String is longer than the <code>maxLength</code> property.",
        "tags": [
        {  "tagName": "default",
               "values": [""This string is longer than the maximum allowed length. This must be less than {0} characters long.""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "tooShortError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message when the string is shorter than the <code>minLength</code> property.",
        "tags": [
        {  "tagName": "default",
               "values": [""This string is shorter than the minimum allowed length. This must be at least {0} characters long.""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "doValidation",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Override of the base class <code>doValidation()</code> method to validate a String.  <p>You do not call this method directly; Flex calls it as part of performing a validation. If you create a custom Validator class, you must implement this method.</p>   object for each field examined by the validator.",
        "tags": [
        {  "tagName": "param",
               "values": ["value Object to validate."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["An Array of ValidationResult objects, with one ValidationResult"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Array",
          "params": [{ "name": "value", "type": "Object"}]}
      ]
  }
