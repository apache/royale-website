{ "type": "class",
  "qname": "mx.validators.ZipCodeValidator",
  "baseClassname": "mx.validators.Validator"
  ,
    "description": "The ZipCodeValidator class validates that a String has the correct length and format for a five-digit ZIP code, a five-digit+four-digit United States ZIP code, or Canadian postal code.   <p>The <code>&lt;mx:ZipCodeValidator&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;mx:ZipCodeValidator\\n allowedFormatChars=&quot; -&quot;\\n domain=&quot;US Only | US or Canada | Canada Only&quot;\\n invalidCharError=&quot;The ZIP code contains invalid characters.&quot;\\n invalidDomainError=&quot;The domain parameter is invalid. It must be either 'US Only', 'Canada Only', or 'US or Canada'.&quot;\\n wrongCAFormatError=&quot;The Canadian postal code must be formatted 'A1B 2C3'.&quot;\\n wrongLengthError=&quot;The ZIP code must be 5 digits or 5+4 digits.&quot;\\n wrongUSFormatError=&quot;The ZIP+4 code must be formatted '12345-6789'.&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/ZipCodeValidatorExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.validators.ZipCodeValidatorDomainType"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "resourceManager",
        "return": "mx.resources.IResourceManager",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Convenience method for calling a validator. Each of the standard Flex validators has a similar convenience method.    specified in the <code>value</code> parameter. For example, if the <code>value</code> parameter specifies value.zipCode, the <code>baseField</code> value is <code>&quot;zipCode&quot;</code>.  object for each field examined by the validator.",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.validators.ValidationResult"]},
            {  "tagName": "param",
               "values": ["validator The ZipCodeValidator instance.", "value A field to validate.", "baseField Text representation of the subfield"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["An Array of ValidationResult objects, with one ValidationResult"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "validateZipCode",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "Array",
          "params": [{ "name": "validator", "type": "mx.validators.ZipCodeValidator"},
        { "name": "value", "type": "Object"},
        { "name": "baseField", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "mx.validators.ZipCodeValidator",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "allowedFormatChars",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The set of formatting characters allowed in the ZIP code. This can not have digits or alphabets [a-z A-Z].",
        "tags": [
        {  "tagName": "default",
               "values": ["\" -\"."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "domain",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Type of ZIP code to check. In MXML, valid values are <code>&quot;US or Canada&quot;</code>, <code>&quot;US Only&quot;</code> and <code>&quot;Canada Only&quot;</code>.  <p>In ActionScript, you can use the following constants to set this property: <code>ZipCodeValidatorDomainType.US_ONLY</code>, <code>ZipCodeValidatorDomainType.US_OR_CANADA</code>, or <code>ZipCodeValidatorDomainType.CANADA_ONLY</code>.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["ZipCodeValidatorDomainType.US_ONLY"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "invalidCharError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message when the ZIP code contains invalid characters.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"The ZIP code contains invalid characters.\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "invalidDomainError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message when the <code>domain</code> property contains an invalid value.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"The domain parameter is invalid. It must be either 'US Only' or 'US or Canada'.\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "wrongCAFormatError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message for an invalid Canadian postal code.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"The Canadian postal code must be formatted 'A1B 2C3'.\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "wrongLengthError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message for an invalid US ZIP code.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"The ZIP code must be 5 digits or 5+4 digits.\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "wrongUSFormatError",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Error message for an incorrectly formatted ZIP code.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"The ZIP+4 code must be formatted '12345-6789'.\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "doValidation",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Override of the base class <code>doValidation()</code> method to validate a ZIP code.  <p>You do not call this method directly; Flex calls it as part of performing a validation. If you create a custom Validator class, you must implement this method. </p>   object for each field examined by the validator.",
        "tags": [
        {  "tagName": "param",
               "values": ["value Object to validate."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["An Array of ValidationResult objects, with one ValidationResult"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Array",
          "params": [{ "name": "value", "type": "Object"}]}
      ]
  ,
  "events": [
  ]
  }
