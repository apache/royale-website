{ "type": "class",
  "qname": "mx.events.RSLEvent",
  "baseClassname": "mx.events.ProgressEvent"
  ,
    "description": "The RSLEvent class represents an event object used by the DownloadProgressBar class when an RSL is being downloaded by the Preloader class.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.preloaders.DownloadProgressBar", "mx.preloaders.Preloader"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "RSL_ADD_PRELOADED",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>RSLEvent.RSL_ADD_PRELOADED</code> constant defines the value of the <code>type</code> property of the event object for an <code>rslAddPreloaded</code> event. This event is dispatched from an IFlexModuleFactory after a child IFlexModuleFactory preloads an RSL into its application domain.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>loaderInfo</code></td><td>The LoaderInfo instance associated with this RSL.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["rslAddPreloaded"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "RSL_COMPLETE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Dispatched when the RSL has finished downloading. The <code>RSLEvent.RSL_COMPLETE</code> constant defines the value of the <code>type</code> property of the event object for a <code>rslComplete</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>bytesLoaded</code></td><td>The number of bytes loaded.</td></tr> <tr><td><code>bytesTotal</code></td><td>The total number of bytes to load.</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>errorText</code></td><td>Empty</td></tr> <tr><td><code>isResourceModule</code></td><td>True if we loaded a resourceModule instead of an RSL</td></tr> <tr><td><code>rslIndex</code></td><td>The index number of the RSL currently being downloaded. </td></tr> <tr><td><code>rslTotal</code></td><td>The total number of RSLs being downloaded. </td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>url</code></td><td>The URLRequest object that represents the location of the RSL being downloaded.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["rslComplete"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "RSL_ERROR",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Dispatched when there is an error downloading the RSL. The <code>RSLEvent.RSL_ERROR</code> constant defines the value of the <code>type</code> property of the event object for a <code>rslError</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>bytesLoaded</code></td><td>Empty</td></tr> <tr><td><code>bytesTotal</code></td><td>Empty</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>errorText</code></td>An error message.<td></td></tr> <tr><td><code>isResourceModule</code></td><td>True if we loaded a resourceModule instead of an RSL</td></tr> <tr><td><code>rslIndex</code></td><td>The index number of the RSL currently being downloaded. </td></tr> <tr><td><code>rslTotal</code></td><td>The total number of RSLs being downloaded. </td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>url</code></td><td>The URLRequest object that represents the location of the RSL being downloaded.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["rslError"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "RSL_PROGRESS",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Dispatched when the RSL is downloading. The <code>RSLEvent.RSL_PROGRESS</code> constant defines the value of the <code>type</code> property of the event object for a <code>rslProgress</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>bytesLoaded</code></td><td>The number of bytes loaded.</td></tr> <tr><td><code>bytesTotal</code></td><td>The total number of bytes to load.</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>errorText</code></td>Empty<td></td></tr> <tr><td><code>isResourceModule</code></td><td>True if we loaded a resourceModule instead of an RSL</td></tr> <tr><td><code>rslIndex</code></td><td>The index number of the RSL currently being downloaded. </td></tr> <tr><td><code>rslTotal</code></td><td>The total number of RSLs being downloaded. </td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>url</code></td><td>The URLRequest object that represents the location of the RSL being downloaded.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["rslProgress"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "mx.events.RSLEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  <ul> <li>&quot;rslProgress&quot; (<code>RSLEvent.RSL_PROGRESS</code>);</li> <li>&quot;rslComplete&quot; (<code>RSLEvent.RSL_COMPLETE</code>);</li> <li>&quot;rslError&quot; (<code>RSLEvent.RSL_ERROR</code>);</li> </ul>",
        "tags": [
        {  "tagName": "param",
               "values": ["type The type of the event. Possible values are:", "bubbles  Determines whether the Event object participates in the bubbling stage of the event flow.", "cancelable Determines whether the Event object can be cancelled.", "bytesLoaded The number of bytes loaded at the time the listener processes the event.", "bytesTotal The total number of bytes that will ultimately be loaded if the loading process succeeds.", "rslIndex The index number of the RSL relative to the total. This should be a value between 0 and <code>total - 1</code>.", "rslTotal The total number of RSLs being loaded.", "url The location of the RSL.", "errorText The error message of the error when type is RSLEvent.RSL_ERROR.", "isResourceModule True if the event occurred when loading a ResourceModule."]},
            {  "tagName": "tiptext",
               "values": ["Constructor for <code>RSLEvent</code> objects."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "bytesLoaded", "type": "int"},
        { "name": "bytesTotal", "type": "int"},
        { "name": "rslIndex", "type": "int"},
        { "name": "rslTotal", "type": "int"},
        { "name": "url", "type": "org.apache.royale.net.URLRequest"},
        { "name": "errorText", "type": "String"},
        { "name": "isResourceModule", "type": "Boolean"},
        { "name": "loaderInfo", "type": "Object"}]}
      ,
      { "type": "field",
        "qname": "errorText",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The error message if the type is RSL_ERROR; otherwise, it is null;",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "isResourceModule",
        "return": "Boolean",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "True if the event is for loading a resourceModule instead of an RSL",
        "tags": [
          ]},
      { "type": "field",
        "qname": "loaderInfo",
        "return": "Object",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The loaderInfo associated with this event. This is only set in the RSLEvent.RSL_COMPLETE event. Otherwise loaderInfo will be null.",
        "tags": [
          ]},
      { "type": "field",
        "qname": "rslIndex",
        "return": "int",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The index number of the RSL currently being downloaded. This is a number between 0 and <code>rslTotal - 1</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "rslTotal",
        "return": "int",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The total number of RSLs being downloaded by the preloader",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "url",
        "return": "org.apache.royale.net.URLRequest",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The URLRequest object that represents the location of the RSL being downloaded.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
