{ "type": "class",
  "qname": "mx.events.ResourceEvent",
  "baseClassname": "mx.events.ProgressEvent"
  ,
    "description": "The ResourceEvent class represents an Event object that is dispatched when the ResourceManager loads the resource bundles in a resource module by calling the <code>loadResourceModule()</code> method.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.resources.ResourceManager"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "COMPLETE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Dispatched when the resource module SWF file has finished loading. The ResourceEvent.COMPLETE constant defines the value of the <code>type</code> property of the event object for a <code>complete</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td><code>false</code></td></tr> <tr><td><code>cancelable</code></td><td><code>false</code></td></tr> <tr><td><code>currentTarget</code></td><td>The object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, <code>myButton</code> is the value of <code>currentTarget</code>. </td></tr> <tr><td><code>errorText</code></td><td>Empty</td></tr> <tr><td><code>target</code></td><td>The object that dispatched the event; it is not always the object listening for the event. Use the <code>currentTarget</code> property to always access the object that listens for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["complete"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "ERROR",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Dispatched when there is an error loading the resource module SWF file. The ResourceEvent.ERROR constant defines the value of the <code>type</code> property of the event object for a <code>error</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td><code>false</code></td></tr> <tr><td><code>bytesLoaded</code></td><td>Empty</td></tr> <tr><td><code>bytesTotal</code></td><td>Empty</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The object that defines the event listener that handles the event. For example, if you use the <code>myButton.addEventListener()</code> method to register an event listener, <code>myButton</code> is the value of <code>currentTarget</code>. </td></tr> <tr><td><code>errorText</code></td>An error message.<td></td></tr> <tr><td><code>target</code></td><td>The object that dispatched the event; it is not always the object that is listening for the event. Use the <code>currentTarget</code> property to always access the object that listens for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["error"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "PROGRESS",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Dispatched when the resource module SWF file is loading. The ResourceEvent.PROGRESS constant defines the value of the <code>type</code> property of the event object for a <code>progress</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td><code>false</code></td></tr> <tr><td><code>bytesLoaded</code></td><td>The number of bytes loaded.</td></tr> <tr><td><code>bytesTotal</code></td><td>The total number of bytes to load.</td></tr> <tr><td><code>cancelable</code></td><td><code>false</code></td></tr> <tr><td><code>currentTarget</code></td><td>The object that defines the event listener that handles the event. For example, if you use the <code>myButton.addEventListener()</code> method to register an event listener, <code>myButton</code> is the value of <code>currentTarget</code>.</td></tr> <tr><td><code>errorText</code></td>Empty<td></td></tr> <tr><td><code>target</code></td><td>The object that dispatched the event; it is not always the object that listens for the event. Use the <code>currentTarget</code> property to always access the object that is listening for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["progress"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "mx.events.ResourceEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  <ul> <li><code>&quot;progress&quot;</code> (<code>ResourceEvent.PROGRESS</code>)</li> <li><code>&quot;complete&quot;</code> (<code>ResourceEvent.COMPLETE</code>)</li> <li><code>&quot;error&quot;</code> (<code>ResourceEvent.ERROR</code>)</li> </ul>  participates in the bubbling stage of the event flow.   at the time the listener processes the event.  that will ultimately be loaded if the loading process succeeds.  when <code>type</code> is <code>ResourceEvent.ERROR</code>.",
        "tags": [
        {  "tagName": "param",
               "values": ["type The value of the <code>type</code> property of the event object. Possible values are:", "bubbles Determines whether the Event object", "cancelable Determines whether the Event object can be cancelled.", "bytesLoaded The number of bytes loaded", "bytesTotal The total number of bytes", "errorText The error message of the error"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "bytesLoaded", "type": "uint"},
        { "name": "bytesTotal", "type": "uint"},
        { "name": "errorText", "type": "String"}]}
      ,
      { "type": "field",
        "qname": "errorText",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The error message if the <code>type</code> is <code>ERROR</code>; otherwise, it is <code>null</code>.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
