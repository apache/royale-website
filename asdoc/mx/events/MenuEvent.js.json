{ "type": "class",
  "qname": "mx.events.MenuEvent",
  "baseClassname": "mx.events.ListEvent"
  ,
    "description": "The MenuEvent class represents events that are associated with menu activities in controls such as Menu, MenuBar, and PopUpMenuButton.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.controls.Menu", "mx.controls.MenuBar", "mx.controls.PopUpMenuButton"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "ITEM_CLICK",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The MenuEvent.ITEM_CLICK event type constant indicates that the user selected a menu item.  <p>The properties of the event object for this event type have the following values. Not all properties are meaningful for all kinds of events. See the detailed property descriptions for more information.</p>  <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>true</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>index</code></td> <td>The index in the menu of the selected menu item.</td></tr> <tr><td><code>item</code></td> <td>The item in the dataProvider that was selected.</td></tr> <tr><td><code>itemRenderer</code></td> <td>The ListItemRenderer of the selected menu item.</td></tr> <tr><td><code>label</code></td> <td>The label text of the selected menu item.</td></tr> <tr><td><code>menu</code></td> <td>The specific Menu instance associated with this event, or <code>null</code> if a MenuBar item is dispatching the event.</td></tr> <tr><td><code>menuBar</code></td> <td>The MenuBar instance that is the parent of the Menu control, or <code>null</code> if the Menu control is not parented by a MenuBar control.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>type</code></td><td>MenuEvent.ITEM_CLICK</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["itemClick"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "mx.events.MenuEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  Normally called by the Menu object.   up the display list hierarchy.  associated with the event can be prevented.  of the selected Menu control, or null when the target Menu control is not parented by a MenuBar control.  such as the menu or submenu that was hidden or opened. This property is null if a MenuBar item dispatches the event.",
        "tags": [
        {  "tagName": "param",
               "values": ["type The event type; indicates the action that caused the event.", "bubbles Specifies whether the event can bubble", "cancelable Specifies whether the behavior", "menuBar The MenuBar instance that is the parent", "menu The specific Menu instance associated with the event,", "item The item in the dataProvider of the associated menu item.", "itemRenderer The ListItemRenderer of the associated menu item.", "label The label text of the associated menu item.", "index The index in the menu of the associated menu item."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "item", "type": "Object"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "index",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The index of the associated menu item within its parent menu or submenu. This is -1 for the menuShow and menuHide events.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "item",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "label",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The label text of the associated menu item. This is null for the menuShow and menuHide events.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "menu",
        "return": "Object",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The specific Menu instance associated with the event, such as the menu or submenu that was hidden or opened.  This property is null if a MenuBar item is dispatching the event.",
        "tags": [
        {  "tagName": "royalesuppresspublicvarwarning",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "menuBar",
        "return": "Object",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The MenuBar instance that is the parent of the selected Menu control, or null when the target Menu control is not parented by a MenuBar control.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
