{ "type": "class",
  "qname": "mx.events.CollectionEvent",
  "baseClassname": "org.apache.royale.events.Event"
  ,
    "description": "The mx.events.CollectionEvent class represents an event that is dispatched when the associated collection changes.",
  "tags": [
  {  "tagName": "see",
         "values": ["FlexEvent#CURSOR_UPDATE"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "COLLECTION_CHANGE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The CollectionEvent.COLLECTION_CHANGE constant defines the value of the <code>type</code> property of the event object for an event that is dispatched when a collection has changed.  <p>The properties of the event object have the following values. Not all properties are meaningful for all kinds of events. See the detailed property descriptions for more information.</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>items</code></td><td>An Array of objects with information about the items affected by the event. The contents of this field depend on the event kind; for details see the <code>items</code> property</td></tr> <tr><td><code>kind</code></td><td>The kind of event. The valid values are defined in the CollectionEventKind class as constants.</td></tr> <tr><td><code>location</code></td><td>Location within the target collection of the item(s) specified in the <code>items</code> property.</td></tr> <tr><td><code>oldLocation</code></td><td>the previous location in the collection of the item specified in the <code>items</code> property.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>type</code></td><td>CollectionEvent.COLLECTION_CHANGE</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["collectionChange"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "mx.events.CollectionEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.   up the display list hierarchy.  associated with the event can be prevented.  The parameter value can be one of the values in the CollectionEventKind class, or <code>null</code>, which indicates that the kind is unknown.  <code>CollectionEventKind.ADD</code>, <code>CollectionEventKind.MOVE</code>, <code>CollectionEventKind.REMOVE</code>, or <code>CollectionEventKind.REPLACE</code>, this value indicates at what location the item(s) specified in the <code>items property</code> can be found within the target collection.  <code>CollectionEventKind.MOVE</code>, this value indicates the old location within the target collection of the item(s) specified in the <code>items</code> property.  affected by the event, as described in the <code>items</code> property. When the <code>kind</code> is <code>CollectionEventKind.REFRESH</code> or <code>CollectionEventKind.RESET</code>, this Array has zero length.",
        "tags": [
        {  "tagName": "param",
               "values": ["type The event type; indicates the action that triggered the event.", "bubbles Specifies whether the event can bubble", "cancelable Specifies whether the behavior", "kind Indicates the kind of event that occured.", "location When the <code>kind</code> is", "oldLocation When the <code>kind</code> is", "items Array of objects with information about the items"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "kind", "type": "String"},
        { "name": "location", "type": "int"},
        { "name": "oldLocation", "type": "int"},
        { "name": "items", "type": "Array"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "kind",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "items",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "location",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "oldLocation",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]}]
  ,
  "events": [
  ]
  }
