{ "type": "class",
  "qname": "mx.events.IndexChangedEvent",
  "baseClassname": "org.apache.royale.events.Event"
  ,
    "description": "The IndexChangedEvent class represents events that are dispatched when an index changes. This event can indicate that the index value of a child of a container changed, the displayed child of a navigator container such as an Accordion or ViewStack changed, or the order of column headers in a DataGrid control changed.",
  "tags": [
  {  "tagName": "see",
         "values": ["mx.core.Container"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "CHANGE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The IndexChangedEvent.CHANGE constant defines the value of the <code>type</code> property of the event object for a <code>change</code> event, which indicates that an index has changed, such as when and Accordion control changes the displayed panel or a ViewStack changes views.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>inputType</code></td><td>Indicates whether this event was caused by a mouse or keyboard interaction.</td></tr> <tr><td><code>newIndex</code></td><td>The zero-based index after the change.</td></tr> <tr><td><code>oldIndex</code></td><td>The zero-based index before the change.</td></tr> <tr><td><code>relatedObject</code></td><td>Contains a reference to the child object that corresponds to the new index.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>TriggerEvent</code></td><td>The event that triggered this event.</td></tr> <tr><td><code>Type</code></td><td>IndexChangedEvent.CHANGE</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["change"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "CHILD_INDEX_CHANGE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The IndexChangedEvent.CHILD_INDEX_CHANGE constant defines the value of the <code>type</code> property of the event object for a childIndexChange event, which indicates that a component's index among a container's children has changed.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>inputType</code></td><td>Indicates whether this event was caused by a mouse or keyboard interaction.</td></tr> <tr><td><code>newIndex</code></td><td>The zero-based index of the child after the change.</td></tr> <tr><td><code>oldIndex</code></td><td>The zero-based index of the child before the change.</td></tr> <tr><td><code>relatedObject</code></td><td>Contains a reference to the child object whose index changed.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>TriggerEvent</code></td><td>null</td></tr> <tr><td><code>Type</code></td><td>IndexChangedEvent.CHILD_INDEX_CHANGE</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["childIndexChange"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "HEADER_SHIFT",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The IndexChangedEvent.HEADER_SHIFT constant defines the value of the <code>type</code> property of the event object for a <code>headerShift</code> event, which indicates that a header has changed its index, as when a user drags a DataGrid column to a new position.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>inputType</code></td><td>Indicates whether this event was caused by a mouse or keyboard interaction.</td></tr> <tr><td><code>newIndex</code></td><td>The zero-based index of the header after the change.</td></tr> <tr><td><code>oldIndex</code></td><td>The zero-based index of the header before the change.</td></tr> <tr><td><code>relatedObject</code></td><td>null</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>TriggerEvent</code></td><td>The event that triggered this event.</td></tr> <tr><td><code>Type</code></td><td>IndexChangedEvent.HEADER_SHIFT</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["headerShift"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "mx.events.IndexChangedEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor. Normally called by a Flex control and not used in application code.   up the display list hierarchy.  associated with the event can be prevented.",
        "tags": [
        {  "tagName": "param",
               "values": ["type The event type; indicates the action that caused the event.", "bubbles Specifies whether the event can bubble", "cancelable Specifies whether the behavior", "relatedObject The child object associated with the index change.", "oldIndex The zero-based index before the change.", "newIndex The zero-based index after the change.", "triggerEvent The event that triggered this event."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "relatedObject", "type": "Object"},
        { "name": "oldIndex", "type": "Number"},
        { "name": "newIndex", "type": "Number"},
        { "name": "triggerEvent", "type": "org.apache.royale.events.Event"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "newIndex",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "oldIndex",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "relatedObject",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "org.apache.royale.events.Event",
        "qname": "triggerEvent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]}]
  ,
  "events": [
  ]
  }
