{ "type": "class",
  "qname": "mx.events.FlexMouseEvent",
  "baseClassname": "flash.events.MouseEvent"
  ,
    "description": "The FlexMouseEvent class represents the event object passed to the event listener for Flex-specific mouse activity.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "MOUSE_DOWN_OUTSIDE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>FlexMouseEvent.MOUSE_DOWN_OUTSIDE</code> constant defines the value of the <code>type</code> property of the event object for a <code>mouseDownOutside</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>altKey</code></td> <td>Indicates whether the Alt key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>buttonDown</code></td> <td>Indicates whether the main mouse button is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>ctrlKey</code></td> <td>Indicates whether the Control key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. For PopUpManager events, the object is the pop-up window.</td></tr> <tr><td><code>delta</code></td> <td>Indicates how many lines should be scrolled for each notch the user scrolls the mouse wheel. For PopUpManager events this value is 0.</td></tr> <tr><td><code>localX</code></td> <td>The horizontal position at which the event occurred. For PopUpManager events, the value is relative to the pop-up control.</td></tr> <tr><td><code>localY</code></td> <td>The vertical position at which the event occurred. For PopUpManager events, the value is relative to the pop-up control.</td></tr> <tr><td><code>relatedObject</code></td> <td>A reference to a display list object that is related to the event. For PopUpManager events, the object is the container over which the mouse pointer is located.</td></tr> <tr><td><code>shiftKey</code></td> <td>Indicates whether the Shift key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event. For PopUpManager events, the object is the pop-up window.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mouseDownOutside"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "MOUSE_WHEEL_CHANGING",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>FlexMouseEvent.MOUSE_WHEEL_CHANGING</code> constant defines the value of the <code>type</code> property of the event object for a <code>mouseWheelChanging</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>altKey</code></td> <td>Indicates whether the Alt key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>buttonDown</code></td> <td>Indicates whether the main mouse button is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>ctrlKey</code></td> <td>Indicates whether the Control key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>currentTarget</code></td> <td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>delta</code></td> <td>Indicates how many lines should be scrolled for each notch the user scrolls the mouse wheel. </td></tr> <tr><td><code>localX</code></td> <td>The horizontal position at which the event occurred. </td></tr> <tr><td><code>localY</code></td> <td>The vertical position at which the event occurred. </td></tr> <tr><td><code>relatedObject</code></td> <td>A reference to a display list object that is related to the event. For this event, the object is the component which is the target of the mouseWheel event.</td></tr> <tr><td><code>shiftKey</code></td> <td>Indicates whether the Shift key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event. </td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "eventType",
               "values": ["mouseWheelChanging"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "MOUSE_WHEEL_OUTSIDE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>FlexMouseEvent.MOUSE_WHEEL_OUTSIDE</code> constant defines the value of the <code>type</code> property of the event object for a <code>mouseWheelOutside</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>altKey</code></td> <td>Indicates whether the Alt key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>buttonDown</code></td> <td>Indicates whether the main mouse button is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>ctrlKey</code></td> <td>Indicates whether the Control key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>currentTarget</code></td> <td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. For PopUpManager events, the object is the pop-up window.</td></tr> <tr><td><code>delta</code></td> <td>Indicates how many lines should be scrolled for each notch the user scrolls the mouse wheel. For PopUpManager events this value is 0.</td></tr> <tr><td><code>localX</code></td> <td>The horizontal position at which the event occurred. For PopUpManager events, the value is relative to the pop-up control.</td></tr> <tr><td><code>localY</code></td> <td>The vertical position at which the event occurred. For PopUpManager events, the value is relative to the pop-up control.</td></tr> <tr><td><code>relatedObject</code></td> <td>A reference to a display list object that is related to the event. For PopUpManager events, the object is the container over which the mouse pointer is located.</td></tr> <tr><td><code>shiftKey</code></td> <td>Indicates whether the Shift key is down (<code>true</code>) or not (<code>false</code>).</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event. For PopUpManager events, the object is the pop-up window.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mouseWheelOutside"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "FlexMouseEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.   the display list hierarchy.  associated with the event can be prevented.         user scrolls the mouse wheel.",
        "tags": [
        {  "tagName": "param",
               "values": ["type The event type; indicates the action that caused the event.", "bubbles Specifies whether the event can bubble up", "cancelable Specifies whether the behavior", "localX The horizontal position at which the event occurred.", "localY The vertical position at which the event occurred.", "relatedObject The display list object that is related to the event.", "ctrlKey Whether the Control key is down.", "altKey Whether the Alt key is down.", "shiftKey Whether the Shift key is down.", "buttonDown Whether the Control key is down.", "delta How many lines should be scrolled for each notch the"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "localX", "type": "Number"},
        { "name": "localY", "type": "Number"},
        { "name": "relatedObject", "type": "mx.core.UIComponent"},
        { "name": "ctrlKey", "type": "Boolean"},
        { "name": "altKey", "type": "Boolean"},
        { "name": "shiftKey", "type": "Boolean"},
        { "name": "buttonDown", "type": "Boolean"},
        { "name": "delta", "type": "int"}]}
      ]
  }
