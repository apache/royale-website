{ "type": "class",
  "qname": "mx.containers.Box",
  "baseClassname": "mx.core.Container"
  ,
    "description": "A Halo Box container lays out its children in a single vertical column or a single horizontal row. The <code>direction</code> property determines whether to use vertical (default) or horizontal layout.  <p><b>Note:</b> Adobe recommends that, when possible, you use the Spark containers with HorizontalLayout or VerticalLayout instead of the Halo Box container.</p>  <p>The Box class is the base class for the VBox and HBox classes. You use the <code>&lt;mx:Box&gt;</code>, <code>&lt;mx:VBox&gt;</code>, and <code>&lt;mx:HBox&gt;</code> tags to define Box containers.</p>  <p>A Box container has the following default sizing characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td><strong>Vertical Box</strong> The height is large enough to hold all its children at the default or explicit height of the children, plus any vertical gap between the children, plus the top and bottom padding of the container. The width is the default or explicit width of the widest child, plus the left and right padding of the container. <br><strong>Horizontal Box</strong> The width is large enough to hold all of its children at the default width of the children, plus any horizontal gap between the children, plus the left and right padding of the container. The height is the default or explicit height of the tallest child, plus the top and bottom padding for the container.</br> </td> </tr> <tr> <td>Default padding</td> <td>0 pixels for the top, bottom, left, and right values.</td> </tr> </table>   <p>The <code>&lt;mx:Box&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <p> <pre>\\n &lt;mx:Box\\n <strong>Properties</strong>\\n direction=&quot;vertical|horizontal&quot;\\n <strong>Styles</strong>\\n horizontalAlign=&quot;left|center|right&quot;\\n horizontalGap=&quot;8&quot;\\n paddingBottom=&quot;0&quot;\\n paddingTop=&quot;0&quot;\\n verticalAlign=&quot;top|middle|bottom&quot;\\n verticalGap=&quot;6&quot;\\n &gt;\\n ...\\n <i>child tags</i>\\n ...\\n &lt;/mx:Box&gt;\\n </pre> </p>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/SimpleBoxExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.core.Container", "mx.containers.HBox", "mx.containers.VBox"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.containers.Box",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "createLayout",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "field",
        "qname": "_layout",
        "return": "mx.containers.beads.BoxLayout",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "mx.containers.beads.BoxLayout",
        "qname": "layoutObject",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "direction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The direction in which this Box container lays out its children. Possible MXML values are <code>&quot;horizontal&quot;</code> and <code>&quot;vertical&quot;</code>. Possible values in ActionScript are <code>BoxDirection.HORIZONTAL</code> and <code>BoxDirection.VERTICAL</code>.",
        "tags": [
        {  "tagName": "default",
               "values": ["BoxDirection.VERTICAL"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addedToParent",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ]
  ,
  "events": [
  ]
  }
