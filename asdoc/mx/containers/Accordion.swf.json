{ "type": "class",
  "qname": "mx.containers.Accordion",
  "baseClassname": "mx.core.Container"
  ,
    "description": "An MX Accordion navigator container has a collection of child MX containers or Spark NavigatorContent containers, but only one of them at a time is visible. It creates and manages navigator buttons (accordion headers), which you use to navigate between the children. There is one navigator button associated with each child container, and each navigator button belongs to the Accordion container, not to the child. When the user clicks a navigator button, the associated child container is displayed. The transition to the new child uses an animation to make it clear to the user that one child is disappearing and a different one is appearing.  <p><b>Note:</b> The direct children of an MX navigator container must be MX containers, either MX layout or MX navigator containers, or the Spark NavigatorContent container. You cannot directly nest a control or a Spark container other than the Spark NavigatorContent container within a navigator; they must be children of an child MX container.</p>  <p>The Accordion container does not extend the ViewStack container, but it implements all the properties, methods, styles, and events of the ViewStack container, such as <code>selectedIndex</code> and <code>selectedChild</code>.</p>  <p>An Accordion container has the following default sizing characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td>The width and height of the currently active child.</td> </tr> <tr> <td>Container resizing rules</td> <td>Accordion containers are only sized once to fit the size of the first child container by default. They do not resize when you navigate to other child containers by default. To force Accordion containers to resize when you navigate to a different child container, set the resizeToContent property to true.</td> </tr> <tr> <td>Child sizing rules</td> <td>Children are sized to their default size. The child is clipped if it is larger than the Accordion container. If the child is smaller than the Accordion container, it is aligned to the upper-left corner of the Accordion container.</td> </tr> <tr> <td>Default padding</td> <td>-1 pixel for the top, bottom, left, and right values.</td> </tr> </table>   <p>The <code>&lt;mx:Accordion&gt;</code> tag inherits all of the tag attributes of its superclass, with the exception of scrolling-related attributes, and adds the following tag attributes:</p>  <pre>\\n &lt;mx:Accordion\\n <strong>Properties</strong>\\n headerRenderer=&quot;<i>IFactory</i>&quot;\\n historyManagementEnabled=&quot;true|false&quot;\\n resizeToContent=&quot;false|true&quot;\\n selectedChild&quot;<i>A reference to the first child</i>&quot;\\n selectedIndex=&quot;undefined&quot;\\n \\n <strong>Styles</strong>\\n headerHeight=&quot;depends on header font styles&quot;\\n headerStyleName=&quot;<i>No default</i>&quot;\\n horizontalGap=&quot;8&quot;\\n openDuration=&quot;250&quot;\\n openEasingFunction=&quot;undefined&quot;\\n paddingBottom=&quot;-1&quot;\\n paddingTop=&quot;-1&quot;\\n textRollOverColor=&quot;0xB333C&quot;\\n textSelectedColor=&quot;0xB333C&quot;\\n verticalGap=&quot;-1&quot;\\n \\n <strong>Events</strong>\\n change=&quot;<i>No default</i>&quot;\\n &gt;\\n ...\\n <i>child tags</i>\\n ...\\n &lt;/mx:Accordion&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/AccordionExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.containers.accordionClasses.AccordionHeader"]},
      {  "tagName": "helpid",
         "values": ["3013"]},
      {  "tagName": "tiptext",
         "values": ["Accordion allows for navigation between different child views"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.containers.Accordion",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "getHeaderAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a reference to the navigator button for a child container.",
        "tags": [
        {  "tagName": "param",
               "values": ["index Zero-based index of the child."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["Button object representing the navigator button."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "mx.controls.Button",
          "params": [{ "name": "index", "type": "int"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "selectedIndex",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The zero-based index of the currently visible child container. Child indexes are in the range 0, 1, 2, ..., n - 1, where n is the number of children. The default value is 0, corresponding to the first child. If there are no children, this property is <code>-1</code>.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "helpid",
               "values": ["3402"]},
            {  "tagName": "tiptext",
               "values": ["Specifies the index of the child view that is currently displayed"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "historyManagementEnabled",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]}]
  ,
  "events": [
  { "qname": "change",
        "type": "mx.events.IndexChangedEvent"
      ,
          "description": "Dispatched when the selected child container changes.",
        "tags": [
        {  "tagName": "helpid",
               "values": ["3012"]},
            {  "tagName": "tiptext",
               "values": ["change event"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.IndexChangedEvent.CHANGE"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
