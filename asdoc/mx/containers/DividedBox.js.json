{ "type": "class",
  "qname": "mx.containers.DividedBox",
  "baseClassname": "mx.containers.Box"
  ,
    "description": "A DividedBox container measures and lays out its children horizontally or vertically in exactly the same way as a Box container, but it inserts draggable dividers in the gaps between the children. Users can drag any divider to resize the children on each side.  <p>The DividedBox class is the base class for the more commonly used HDividedBox and VDividedBox classes.</p>  <p>The <code>direction</code> property of a DividedBox container, inherited from Box container, determines whether it has horizontal or vertical layout.</p>  <p>A DividedBox, HDividedBox, or VDividedBox container has the following default sizing characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td><strong>Vertical DividedBox</strong> Height is large enough to hold all of its children at the default or explicit heights of the children, plus any vertical gap between the children, plus the top and bottom padding of the container. The width is the default or explicit width of the widest child, plus the left and right padding of the container. <br><strong>Horizontal DividedBox</strong> Width is large enough to hold all of its children at the default or explicit widths of the children, plus any horizontal gap between the children, plus the left and right padding of the container. Height is the default or explicit height of the tallest child plus the top and bottom padding of the container.</br></td> </tr> <tr> <td>Default padding</td> <td>0 pixels for the top, bottom, left, and right values.</td> </tr> <tr> <td>Default gap</td> <td>10 pixels for the horizontal and vertical gaps.</td> </tr> </table>   <p>The <code>&lt;mx:DividedBox&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;mx:DividedBox\\n <strong>Properties</strong>\\n liveDragging=&quot;false|true&quot;\\n resizeToContent=&quot;false|true&quot;\\n \\n <strong>Styles</strong>\\n dividerAffordance=&quot;6&quot;\\n dividerAlpha=&quot;0.75&quot;\\n dividerColor=&quot;0x6F7777&quot;\\n dividerSkin=&quot;<i>'mx.skins.BoxDividerSkin' symbol in Assets.swf</i>&quot;\\n dividerThickness=&quot;3&quot;\\n horizontalDividerCursor=&quot;<i>'mx.skins.cursor.HBoxDivider' symbol in Assets.swf</i>&quot;\\n verticalDividerCursor=&quot;<i>'mx.skins.cursor.VBoxDivider' symbol in Assets.swf</i>&quot;\\n \\n <strong>Events</strong>\\n dividerPress=&quot;<i>No default</i>&quot;\\n dividerDrag=&quot;<i>No default</i>&quot;\\n dividerRelease=&quot;<i>No default</i>&quot;\\n &gt;\\n ...\\n <i>child tags</i>\\n ...\\n &lt;/mx:DividedBox&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/DividedBoxExample.mxml"]},
      {  "tagName": "see",
         "values": ["mx.containers.HDividedBox", "mx.containers.VDividedBox"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.containers.DividedBox",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "createLayout",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ],
          "return": "void",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "direction",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "The direction in which this Box container lays out its children. Possible MXML values are <code>&quot;horizontal&quot;</code> and <code>&quot;vertical&quot;</code>. Possible values in ActionScript are <code>BoxDirection.HORIZONTAL</code> and <code>BoxDirection.VERTICAL</code>.",
        "tags": [
        {  "tagName": "default",
               "values": ["BoxDirection.VERTICAL", "BoxDirection.VERTICAL"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3", "Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "numDividers",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The number of dividers. The count is always <code>numChildren</code> - 1.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["The number of dividers."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "resizeToContent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If <code>true</code>, the DividedBox automatically resizes to the size of its children.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  { "qname": "dividerRelease",
        "type": "mx.events.DividerEvent"
      ,
          "description": "Dispatched when the user releases a divider.  The <code>dividerRelease</code> event is dispatched after the <code>dividerDrag</code> events, but before the container's children are resized. The divider's x and y properties are not updated until after this event is triggered. As a result, a call to <code>hDividerBox.getDividerAt(0).x</code> will return the value of the original x position of the first divider. If you want the position of the divider after the move, you can access it when the DividerBox's updateComplete event has been triggered.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.DividerEvent.DIVIDER_RELEASE"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
