{ "type": "class",
  "qname": "mx.messaging.channels.PollingChannel",
  "baseClassname": "mx.messaging.Channel"
  ,
    "description": "The PollingChannel class provides the polling behavior that all polling channels in the messaging system require.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["BlazeDS 4", "LCDS 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "POLLING_INTERVAL_MILLIS",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "POLLING_INTERVAL_LEGACY",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "PIGGYBACKING_ENABLED",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "LOGIN_AFTER_DISCONNECT",
        "return": "String",
        "namespace": "protected",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "mx.messaging.channels.PollingChannel",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Creates a new PollingChannel instance with the specified id. Once a PollingChannel is connected and begins polling, it will issue a poll request once every three seconds by default.  <p><b>Note</b>: The PollingChannel type should not be constructed directly. Instead create instances of protocol specific subclasses such as HTTPChannel or AMFChannel that extend it.</p>",
        "tags": [
        {  "tagName": "param",
               "values": ["id The id of this Channel.", "uri The uri for this Channel."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "id", "type": "String"},
        { "name": "uri", "type": "String"}]}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "loginAfterDisconnect",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "internalPiggybackingEnabled",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "internalPollingEnabled",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "internalPollingInterval",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "realtime",
        "namespace": "mx_internal",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Returns true if the channel supports realtime behavior via server push or client poll. Piggybacking does not qualify as real time because no data will arrive from the server without a message being explicitly sent by the client.",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "timerRunning",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "method",
        "qname": "send",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "Sends the specified message to its target destination. Subclasses must override the <code>internalSend()</code> method to perform the actual send. <code>PollingChannel</code> will wrap outbound messages in poll requests if a poll is not currently outstanding.    message specify a destination.",
        "tags": [
        {  "tagName": "param",
               "values": ["agent The MessageAgent that is sending the message.", "message The Message to send."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "throws",
               "values": ["mx.messaging.errors.InvalidDestinationError If neither the MessageAgent nor the"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "agent", "type": "mx.messaging.MessageAgent"},
        { "name": "message", "type": "mx.messaging.messages.IMessage"}]}
      ,
      { "type": "method",
        "qname": "enablePolling",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Enables polling based on the number of times <code>enablePolling()</code> and <code>disablePolling()</code> have been invoked. If the net result is to enable polling the channel will poll the server on behalf of connected MessageAgents. <p>Invoked automatically based upon subscribing or unsubscribing from a remote destination over a PollingChannel.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "disablePolling",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Disables polling based on the number of times <code>enablePolling()</code> and <code>disablePolling()</code> have been invoked. If the net result is to disable polling the channel stops polling. <p>Invoked automatically based upon subscribing or unsubscribing from a remote destination over a PollingChannel.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "poll",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Initiates a poll operation if there are consumers subscribed to this channel, and polling is enabled for this channel.  Note that this method will not start a new poll if one is currently in progress.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ]
  ,
  "events": [
  ]
  }



