{ "type": "class",
  "qname": "mx.messaging.MessageAgent",
  "baseClassname": "org.apache.royale.events.EventDispatcher"
  ,
    "description": "The MessageAgent class provides the basic low-level functionality common to message handling for a destination.  <p><b>Note:</b> For advanced use only. Use this class for creating custom message agents like the existing Producer and Consumer classes.</p>  <p> All message agent classes, including the Producer and Consumer classes, extend MessageAgent and inherit the following tag attributes: </p> <pre>\\n &lt;mx:<i>tagname</i><br>\\n <b>Properties</b>\\n channelSet=&quot;<i>No default.</i>&quot;\\n clientId=&quot;<i>No default.</i>&quot;\\n connected=&quot;<i>false</i>&quot;\\n destination=&quot;<i>No default.</i>&quot;\\n requestTimeout=&quot;<i>-1</i>&quot;\\n subtopic=&quot;<i>No default.</i>&quot;\\n \\n \\n <b>Events</b>\\n acknowledge=&quot;<i>No default.</i>&quot;\\n channelConnect=&quot;<i>No default.</i>&quot;\\n channelDisconnect=&quot;<i>No default.</i>&quot;\\n channelFault=&quot;<i>No default.</i>&quot;\\n fault=&quot;<i>No default.</i>&quot;\\n propertyChange=&quot;<i>No default.</i>&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["BlazeDS 4", "LCDS 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "mx.messaging.MessageAgent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "authenticated",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "Indicates if this MessageAgent is using an authenticated connection to its destination.",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.messaging.ChannelSet",
        "qname": "channelSet",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "Provides access to the ChannelSet used by the MessageAgent. The ChannelSet can be manually constructed and assigned, or it will be dynamically initialized to use the configured Channels for the destination for this MessageAgent.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "String",
        "qname": "clientId",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "Provides access to the client id for the MessageAgent. MessageAgents are assigned their client id by the remote destination and this value is used to route messages from the remote destination to the proper MessageAgent.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "connected",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "Indicates whether this MessageAgent is currently connected to its destination via its ChannelSet. The <code>propertyChange</code> event is dispatched when this property changes.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "destination",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "Provides access to the destination for the MessageAgent. Changing the destination will disconnect the MessageAgent if it is currently connected.  zero-length.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "throws",
               "values": ["mx.messaging.errors.InvalidDestinationError If the destination is null or"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "id",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "requestTimeout",
        "namespace": "public",
        "bindable": ["propertyChange"],
        "details": [],
        "deprecated": {},
          "description": "Provides access to the request timeout in seconds for sent messages. If an acknowledgement, response or fault is not received from the remote destination before the timeout is reached the message is faulted on the client. A value less than or equal to zero prevents request timeout.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "int",
        "qname": "channelSetMode",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "needsConfig",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Indicates if this MessageAgent needs to request configuration from the server.",
        "tags": [
          ]},
      { "type": "method",
        "qname": "acknowledge",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Invoked by a MessageResponder upon receiving a result for a sent message. Subclasses may override this method if they need to perform custom acknowledgement processing, but must invoke <code>super.acknowledge()</code> as well. This method dispatches a MessageAckEvent.",
        "tags": [
        {  "tagName": "param",
               "values": ["ackMsg The AcknowledgMessage returned.", "msg The original sent message."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "ackMsg", "type": "mx.messaging.messages.AcknowledgeMessage"},
        { "name": "msg", "type": "mx.messaging.messages.IMessage"}]}
      ,
      { "type": "method",
        "qname": "disconnect",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Disconnects the MessageAgent's network connection. This method does not wait for outstanding network operations to complete.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "fault",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Invoked by a MessageResponder upon receiving a fault for a sent message. Subclasses may override this method if they need to perform custom fault processing, but must invoke <code>super.fault()</code> as well. This method dispatchs a MessageFaultEvent.",
        "tags": [
        {  "tagName": "param",
               "values": ["errMsg The ErrorMessage.", "msg The original sent message that caused this fault."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "errMsg", "type": "mx.messaging.messages.ErrorMessage"},
        { "name": "msg", "type": "mx.messaging.messages.IMessage"}]}
      ,
      { "type": "method",
        "qname": "channelConnectHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Handles a CONNECT ChannelEvent. Subclasses that need to perform custom processing should override this method, and invoke <code>super.channelConnectHandler()</code>.",
        "tags": [
        {  "tagName": "param",
               "values": ["event The ChannelEvent."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.messaging.events.ChannelEvent"}]}
      ,
      { "type": "method",
        "qname": "channelDisconnectHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Handles a DISCONNECT ChannelEvent. Subclasses that need to perform custom processing should override this method, and invoke <code>super.channelDisconnectHandler()</code>.",
        "tags": [
        {  "tagName": "param",
               "values": ["event The ChannelEvent."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.messaging.events.ChannelEvent"}]}
      ,
      { "type": "method",
        "qname": "channelFaultHandler",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Handles a ChannelFaultEvent. Subclasses that need to perform custom processing should override this method, and invoke <code>super.channelFaultHandler()</code>.",
        "tags": [
        {  "tagName": "param",
               "values": ["The ChannelFaultEvent"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.messaging.events.ChannelFaultEvent"}]}
      ,
      { "type": "method",
        "qname": "initialized",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Called after the implementing object has been created and all properties specified on the tag have been assigned.   If the object is a deep property on the document, id is null.",
        "tags": [
        {  "tagName": "param",
               "values": ["document MXML document that created this object.", "id id used by the document to refer to this object."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "document", "type": "Object"},
        { "name": "id", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "logout",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Logs the MessageAgent out from its remote destination. Logging out of a destination applies to everything connected using the same ChannelSet as specified in the server configuration. For example, if several DataService components are connected over an RTMP channel and <code>logout()</code> is invoked on one of them, all other client components that are connected using the same ChannelSet are also logged out.  <p><b>Note:</b> Adobe recommends that you use the mx.messaging.ChannelSet.logout() method rather than this method. </p>",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.messaging.ChannelSet#logout()"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "setCredentials",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the credentials that the MessageAgent uses to authenticate to destinations. The credentials are applied to all services connected over the same ChannelSet.  credentials. The default is null, which implies the legacy charset of ISO-Latin-1. The only other supported charset is &quot;UTF-8&quot;.  have already been set and an authentication is in progress with the remote detination, or if authenticated and the credentials specified don't match the currently authenticated credentials.",
        "tags": [
        {  "tagName": "param",
               "values": ["username The username.", "password The password.", "charset The character set encoding to use while encoding the"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "throws",
               "values": ["flash.errors.IllegalOperationError in two situations; if credentials"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "username", "type": "String"},
        { "name": "password", "type": "String"},
        { "name": "charset", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "setRemoteCredentials",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the remote credentials that will be passed through to the remote destination for authenticating to secondary systems.  remote credentials. The default is null, which implies the legacy charset of ISO-Latin-1. The only other currently supported option is &quot;UTF-8&quot;.",
        "tags": [
        {  "tagName": "param",
               "values": ["username The username.", "password The password.", "charset The character set encoding to use while encoding the"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "username", "type": "String"},
        { "name": "password", "type": "String"},
        { "name": "charset", "type": "String"}]}
      ,
      { "type": "method",
        "qname": "hasPendingRequestForMessage",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns true if there are any pending requests for the passed in message. This method should be overriden by subclasses   passed in message.",
        "tags": [
        {  "tagName": "param",
               "values": ["msg The message for which the existence of pending requests is checked."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "return",
               "values": ["Returns <code>true</code> if there are any pending requests for the"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Boolean",
          "params": [{ "name": "msg", "type": "mx.messaging.messages.IMessage"}]}
      ,
      { "type": "method",
        "qname": "handleAuthenticationFault",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Handles the authentication fault on the server. If the authenticated flag is true, the authentication fault must have been caused by a session expiration on the server. Set the authenticated state to false and if loginAfterDisconnect flag is enabled, resend credentials to the server by disconnecting and resending the message again.  disconnected/connected causing re-authentication.",
        "tags": [
        {  "tagName": "param",
               "values": ["errMsg The Error Message.", "msg The message that caused the fault and should be resent once we have"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "errMsg", "type": "mx.messaging.messages.ErrorMessage"},
        { "name": "msg", "type": "mx.messaging.messages.IMessage"}]}
      ,
      { "type": "method",
        "qname": "initChannelSet",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Used to automatically initialize the <code>channelSet</code> property for the MessageAgent before it connects for the first time. Subtypes may override to perform custom initialization.",
        "tags": [
        {  "tagName": "param",
               "values": ["message The message that needs to be sent."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "message", "type": "mx.messaging.messages.IMessage"}]}
      ,
      { "type": "method",
        "qname": "internalSend",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sends a Message from the MessageAgent to its destination using the agent's ChannelSet. MessageAgent subclasses must use this method to send their messages.   assigned to the agent. In general this is the desired behavior. For special behavior (automatic reconnect and resubscribe) the agent may pass false to override the default queuing behavior.",
        "tags": [
        {  "tagName": "param",
               "values": ["message The message to send.", "waitForClientId If true the message may be queued until a clientId has been"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "throws",
               "values": ["mx.messaging.errors.InvalidDestinationError If no destination is set."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "message", "type": "mx.messaging.messages.IMessage"},
        { "name": "waitForClientId", "type": "Boolean"}]}
      ,
      { "type": "method",
        "qname": "reAuthorize",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "This function should be overriden by sublasses to implement reauthentication due to server session time-out behavior specific to them. In general, it should follow disconnect, connect, resend message pattern.  disconnected/connected causing reauthentication.",
        "tags": [
        {  "tagName": "param",
               "values": ["msg The message that caused the fault and should be resent once we have"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "msg", "type": "mx.messaging.messages.IMessage"}]}
      ]
  ,
  "events": [
  { "qname": "acknowledge",
        "type": "mx.messaging.events.MessageAckEvent"
      ,
          "description": "Dispatched when an acknowledge message is received for a sent message.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1", "Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.messaging.events.MessageAckEvent.ACKNOWLEDGE"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3", "BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0", "3.0"]}  ]},
      { "qname": "fault",
        "type": "mx.messaging.events.MessageFaultEvent"
      ,
          "description": "Dispatched when a message fault occurs.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.messaging.events.MessageFaultEvent.FAULT"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "channelConnect",
        "type": "mx.messaging.events.ChannelEvent"
      ,
          "description": "Dispatched when the underlying Channel the MessageAgent is using connects.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.messaging.events.ChannelEvent.CONNECT"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "channelDisconnect",
        "type": "mx.messaging.events.ChannelEvent"
      ,
          "description": "Dispatched when the underlying Channel the MessageAgent is using disconnects.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.messaging.events.ChannelEvent.DISCONNECT"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "channelFault",
        "type": "mx.messaging.events.ChannelFaultEvent"
      ,
          "description": "Dispatched when the underlying Channel the MessageAgent is using faults.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.messaging.events.ChannelFaultEvent.FAULT"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "propertyChange",
        "type": "mx.events.PropertyChangeEvent"
      ,
          "description": "Dispatched when the <code>connected</code> property of the MessageAgent changes. Also dispatched when the <code>subscribed</code> of a Consumer changes.",
        "tags": [
        {  "tagName": "see",
               "values": ["mx.messaging.Consumer"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "eventType",
               "values": ["mx.events.PropertyChangeEvent.PROPERTY_CHANGE"]},
            {  "tagName": "productversion",
               "values": ["BlazeDS 4", "LCDS 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
