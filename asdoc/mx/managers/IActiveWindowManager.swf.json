{ "type": "interface",
  "qname": "mx.managers.IActiveWindowManager",
"baseInterfaceNames": [
]
,
    "description": "Interface for subsystem that manages which focus manager is active when there is more than one IFocusManagerContainer on screen.",
  "tags": [
    ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "int",
    "qname": "numModalWindows",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "The number of modal windows.  <p>Modal windows don't allow clicking in another windows which would normally activate the FocusManager in that window.  The PopUpManager modifies this count as it creates and destroy modal windows.</p>",
    "tags": [
      ]},
  { "type": "method",
    "qname": "addFocusManager",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Registers a top-level window containing a FocusManager. Called by the FocusManager, generally not called by application code.",
    "tags": [
    {  "tagName": "param",
           "values": ["f The top-level window in the application."]}  ],
      "return": "void",
      "params": [{ "name": "f", "type": "mx.managers.IFocusManagerContainer"}]}
  ,
  { "type": "method",
    "qname": "removeFocusManager",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Unregisters a top-level window containing a FocusManager. Called by the FocusManager, generally not called by application code.",
    "tags": [
    {  "tagName": "param",
           "values": ["f The top-level window in the application."]}  ],
      "return": "void",
      "params": [{ "name": "f", "type": "mx.managers.IFocusManagerContainer"}]}
  ,
  { "type": "method",
    "qname": "activate",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Activates the FocusManager in an IFocusManagerContainer.  whose FocusManager should be activated.",
    "tags": [
    {  "tagName": "param",
           "values": ["f IFocusManagerContainer the top-level window"]}  ],
      "return": "void",
      "params": [{ "name": "f", "type": "Object"}]}
  ,
  { "type": "method",
    "qname": "deactivate",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Deactivates the FocusManager in an IFocusManagerContainer, and activate the FocusManager of the next highest window that is an IFocusManagerContainer.  whose FocusManager should be deactivated.",
    "tags": [
    {  "tagName": "param",
           "values": ["f IFocusManagerContainer the top-level window"]}  ],
      "return": "void",
      "params": [{ "name": "f", "type": "Object"}]}
  ]
  }
