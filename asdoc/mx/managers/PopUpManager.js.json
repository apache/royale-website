{ "type": "class",
  "qname": "mx.managers.PopUpManager",
  "baseClassname": ""
  ,
    "description": "The PopUpManager singleton class creates new top-level windows and places or removes those windows from the layer on top of all other visible windows.  See the SystemManager for a description of the layering. It is used for popup dialogs, menus, and dropdowns in the ComboBox control and in similar components.  <p>The PopUpManager also provides modality, so that windows below the popup cannot receive mouse events, and also provides an event if the user clicks the mouse outside the window so the developer can choose to dismiss the window or warn the user.</p>",
  "tags": [
  {  "tagName": "see",
         "values": ["PopUpManagerChildList"]},
      {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "createPopUp",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Creates a top-level window and places it above other windows in the z-order. It is good practice to call the <code>removePopUp()</code> method to remove popups created by using the <code>createPopUp()</code> method.  If the class implements IFocusManagerContainer, the window will have its own FocusManager so that, if the user uses the TAB key to navigate between controls, only the controls in the window will be accessed.  <p><b>Example</b></p>  <pre>pop = mx.managers.PopUpManager.createPopUp(pnl, TitleWindow, false); </pre>  <p>Creates a popup window based on the TitleWindow class, using <code>pnl</code> as the MovieClip for determining where to place the popup. It is defined to be a non-modal window meaning that other windows can receive mouse events</p>  to use and optionally the reference point for centering the new top level window.  It may not be the actual parent of the popup as all popups are parented by the SystemManager.  The class must implement IFlexDisplayObject.  the user will not be able to interact with other popups until the window is removed.  One of <code>PopUpManagerChildList.APPLICATION</code>, <code>PopUpManagerChildList.POPUP</code>, or <code>PopUpManagerChildList.PARENT</code> (default).  its embedded fonts and style manager.",
        "tags": [
        {  "tagName": "see",
               "values": ["PopUpManagerChildList"]},
            {  "tagName": "param",
               "values": ["parent DisplayObject to be used for determining which SystemManager's layers", "className Class of object that is to be created for the popup.", "modal If <code>true</code>, the window is modal which means that", "childList The child list in which to add the popup.", "moduleFactory The moduleFactory where this pop-up should look for"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "return",
               "values": ["Reference to new top-level window."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": [{ "name": "parent", "type": "Object"},
        { "name": "className", "type": "Class"},
        { "name": "modal", "type": "Boolean"},
        { "name": "childList", "type": "String"},
        { "name": "moduleFactory", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "addPopUp",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Pops up a top-level window. It is good practice to call <code>removePopUp()</code> to remove popups created by using the <code>addPopUp()</code> method. If the class implements IFocusManagerContainer, the window will have its own FocusManager so that, if the user uses the TAB key to navigate between controls, only the controls in the window will be accessed.  <p><b>Example</b></p>  <pre>var tw:TitleWindow = new TitleWindow();\\n tw.title = &quot;My Title&quot;;\\n mx.managers.PopUpManager.addPopUp(tw, pnl, false);</pre>  <p>Creates a popup window using the <code>tw</code> instance of the TitleWindow class and <code>pnl</code> as the Sprite for determining where to place the popup. It is defined to be a non-modal window.</p>   to use and optionally  the reference point for centering the new top level window.  It may not be the actual parent of the popup as all popups are parented by the SystemManager.  the user will not be able to interact with other popups until the window is removed.  One of <code>PopUpManagerChildList.APPLICATION</code>, <code>PopUpManagerChildList.POPUP</code>, or <code>PopUpManagerChildList.PARENT</code> (default).  its embedded fonts and style manager.",
        "tags": [
        {  "tagName": "see",
               "values": ["PopUpManagerChildList"]},
            {  "tagName": "param",
               "values": ["window The IFlexDisplayObject to be popped up.", "parent DisplayObject to be used for determining which SystemManager's layers", "modal If <code>true</code>, the window is modal which means that", "childList The child list in which to add the pop-up.", "moduleFactory The moduleFactory where this pop-up should look for"]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "window", "type": "mx.core.IFlexDisplayObject"},
        { "name": "parent", "type": "Object"},
        { "name": "modal", "type": "Boolean"},
        { "name": "childList", "type": "String"},
        { "name": "moduleFactory", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "centerPopUp",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Centers a popup window over whatever window was used in the call to the <code>createPopUp()</code> or <code>addPopUp()</code> method.  <p>Note that the position of the popup window may not change immediately after this call since Flex may wait to measure and layout the popup window before centering it.</p>",
        "tags": [
        {  "tagName": "param",
               "values": ["The IFlexDisplayObject representing the popup."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "popUp", "type": "mx.core.IFlexDisplayObject"}]}
      ,
      { "type": "method",
        "qname": "removePopUp",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Removes a popup window popped up by the <code>createPopUp()</code> or <code>addPopUp()</code> method.",
        "tags": [
        {  "tagName": "param",
               "values": ["window The IFlexDisplayObject representing the popup window."]},
            {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "popUp", "type": "mx.core.IFlexDisplayObject"}]}
      ,
      { "type": "method",
        "qname": "bringToFront",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "return": "void",
          "params": [{ "name": "popUp", "type": "mx.core.IFlexDisplayObject"}]}
      ]
  }
