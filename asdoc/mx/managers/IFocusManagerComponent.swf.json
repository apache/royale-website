{ "type": "interface",
  "qname": "mx.managers.IFocusManagerComponent",
"baseInterfaceNames": [
]
,
    "description": "The IFocusManagerComponent interface defines the interface that focusable components must implement in order to receive focus from the FocusManager. The base implementations of this interface are in the UIComponent class, but UIComponent does not implement the full IFocusManagerComponent interface since some UIComponents are not intended to receive focus. Therefore, to make a UIComponent-derived component be a valid focusable component, you simply add &quot;implements IFocusManagerComponent&quot; to the class definition.",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 9", "AIR 1.1"]},
      {  "tagName": "productversion",
         "values": ["Flex 3"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "focusEnabled",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "A flag that indicates whether the component can receive focus when selected.  <p>As an optimization, if a child component in your component implements the IFocusManagerComponent interface, and you never want it to receive focus, you can set <code>focusEnabled</code> to <code>false</code> before calling <code>addChild()</code> on the child component.</p>  <p>This will cause the FocusManager to ignore this component and not monitor it for changes to the <code>tabFocusEnabled</code>, <code>hasFocusableChildren</code>, and <code>mouseFocusEnabled</code> properties. This also means you cannot change this value after <code>addChild()</code> and expect the FocusManager to notice.</p>  <p>Note: It does not mean that you cannot give this object focus programmatically in your <code>setFocus()</code> method; it just tells the FocusManager to ignore this IFocusManagerComponent component in the Tab and mouse searches.</p>",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "Boolean",
    "qname": "hasFocusableChildren",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "copy",
           "values": ["mx.core.UIComponent#hasFocusableChildren"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-only",
    "return": "Boolean",
    "qname": "tabFocusEnabled",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "A flag that indicates whether pressing the Tab key eventually moves focus to this component. Even if <code>false</code>, you can still be given focus by being selected with the mouse or via a call to <code>setFocus()</code>.  This property replaces InteractiveObject.tabEnabled which must be set to true in Flex apps.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "accessor",
    "access": "read-write",
    "return": "int",
    "qname": "tabIndex",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "If <code>tabFocusEnabled</code>, the order in which the component receives focus. If -1, then the component receives focus based on z-order.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ]},
  { "type": "method",
    "qname": "setFocus",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called by the FocusManager when the component receives focus. The component may in turn set focus to an internal component.",
    "tags": [
    {  "tagName": "playerversion",
           "values": ["Flash 9", "AIR 1.1"]},
        {  "tagName": "productversion",
           "values": ["Flex 3"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": []}
  ]
  }
