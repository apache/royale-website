/**
 * Generated by Apache Royale Compiler from ParameterRenderer.as
 * ParameterRenderer
 *
 * @fileoverview
 *
 * @suppress {missingRequire|checkTypes|accessControls}
 */

goog.provide('ParameterRenderer');
/* Royale Dependency List: org.apache.royale.core.IItemRendererOwnerView,org.apache.royale.html.DataContainer,org.apache.royale.utils.Language*/

goog.require('org.apache.royale.html.supportClasses.StringItemRenderer');
goog.require('org.apache.royale.core.IOwnerViewItemRenderer');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.html.supportClasses.StringItemRenderer}
 * @implements {org.apache.royale.core.IOwnerViewItemRenderer}
 */
ParameterRenderer = function() {
  ParameterRenderer.base(this, 'constructor');
  this.typeNames = "AttributeRenderer";
};
goog.inherits(ParameterRenderer, org.apache.royale.html.supportClasses.StringItemRenderer);


/**
 * @private
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
ParameterRenderer.prototype.ParameterRenderer__itemRendererOwnerView = null;


ParameterRenderer.prototype.set__text = function(value) {
  var /** @type {boolean} */ last = false;
  if (org.apache.royale.utils.Language.is(this.parent, org.apache.royale.html.DataContainer)) {
    var /** @type {number} */ n = (this.parent.dataProvider["length"]) >> 0;
    last = n == this.index + 1;
  }
  var /** @type {string} */ html = "<span class='paramName'>" + this.data["name"] + ":</span>";
  if (this.data["typehref"])
    html += "<a href='" + this.data["typehref"] + "' class='paramLink'>" + this.data["type"] + "</a>";
  else
    html += "<span class='paramType'>" + this.data["type"] + "</span>";
  if (!last)
    html += ", ";
  
  this.element.innerHTML = html;
};


/**
 * @nocollapse
 * @export
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
ParameterRenderer.prototype.itemRendererOwnerView;


ParameterRenderer.prototype.get__itemRendererOwnerView = function() {
  return this.ParameterRenderer__itemRendererOwnerView;
};


ParameterRenderer.prototype.set__itemRendererOwnerView = function(value) {
  this.ParameterRenderer__itemRendererOwnerView = value;
};


Object.defineProperties(ParameterRenderer.prototype, /** @lends {ParameterRenderer.prototype} */ {
/**
 * @type {string}
 */
text: {
get: org.apache.royale.html.supportClasses.StringItemRenderer.prototype.get__text,
set: ParameterRenderer.prototype.set__text},
/**
 * @type {org.apache.royale.core.IItemRendererOwnerView}
 */
itemRendererOwnerView: {
get: ParameterRenderer.prototype.get__itemRendererOwnerView,
set: ParameterRenderer.prototype.set__itemRendererOwnerView}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
ParameterRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ParameterRenderer', qName: 'ParameterRenderer', kind: 'class' }], interfaces: [org.apache.royale.core.IOwnerViewItemRenderer] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
ParameterRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'text': { type: 'String', access: 'writeonly', declaredBy: 'ParameterRenderer'},
        'itemRendererOwnerView': { type: 'org.apache.royale.core.IItemRendererOwnerView', access: 'readwrite', declaredBy: 'ParameterRenderer'}
      };
    },
    methods: function () {
      return {
        'ParameterRenderer': { type: '', declaredBy: 'ParameterRenderer'}
      };
    }
  };
};
/**
 * @const
 * @type {number}
 */
ParameterRenderer.prototype.ROYALE_COMPILE_FLAGS = 9;
