{ "type": "class",
  "qname": "spark.effects.interpolation.MultiValueInterpolator",
  "baseClassname": ""
  ,
    "description": "The MultiValueInterpolator class interpolates each element of Arrays or Vectors of start and end elements separately, using another interpolator to do the interpolation for each element. By default, the interpolation for each element uses the NumberInterpolator class, but you can construct a MultiValueInterpolator instance with a different interpolator.",
  "tags": [
  {  "tagName": "see",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.effects.interpolation.MultiValueInterpolator",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  of the Array. If no interpolator is specified, use the NumberInterpolator class.",
        "tags": [
        {  "tagName": "param",
               "values": ["elementInterpolator The interpolator for each element"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "elementInterpolator", "type": "spark.effects.interpolation.IInterpolator"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "spark.effects.interpolation.IInterpolator",
        "qname": "elementInterpolator",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The interpolator for each element of the input Array or Vector. A value of null specifies to use the NumberInterpolator class.",
        "tags": [
        {  "tagName": "default",
               "values": ["NumberInterpolator"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "interpolate",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Given an elapsed fraction of an animation, between 0.0 and 1.0, and start and end values to interpolate, return the interpolated value.  Interpolation for MultiValueInterpolator consists of running a separate interpolation on each element of the startValue and endValue arrays or vectors, returning a new Array or Vector that holds those interpolated values. The returned object will be an Array if startValue and endValue are of type Array, otherwise the returned object will be of type Vector.  animation, between 0.0 and 1.0.",
        "tags": [
        {  "tagName": "param",
               "values": ["fraction The fraction elapsed of the", "startValue The start value of the interpolation.", "endValue The end value of the interpolation."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "return",
               "values": ["The interpolated value."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": [{ "name": "fraction", "type": "Number"},
        { "name": "startValue", "type": "Object"},
        { "name": "endValue", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "increment",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Incrementing for MultiValueInterpolator consists of running a separate increment operation on each element of the <code>baseValue</code> array, adding the same <code>incrementValue</code> to each one and returning a new Array or Vector that holds those incremented values. The returned object will be an Array if startValue and endValue are of type Array, otherwise the returned object will be of type Vector.",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": [{ "name": "baseValue", "type": "Object"},
        { "name": "incrementValue", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "decrement",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Decrementing for MultiValueInterpolator consists of running a separate decrement operation on each element of the <code>baseValue</code> object, subtracting the same <code>incrementValue</code> from each one and returning a new Array or Vector that holds those decremented values. The returned object will be an Array if startValue and endValue are of type Array, otherwise the returned object will be of type Vector.",
        "tags": [
        {  "tagName": "inheritDoc",
               "values": []},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": [{ "name": "baseValue", "type": "Object"},
        { "name": "decrementValue", "type": "Object"}]}
      ]
  ,
  "events": [
  ]
  }
