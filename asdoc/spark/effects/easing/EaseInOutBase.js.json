{ "type": "class",
  "qname": "spark.effects.easing.EaseInOutBase",
  "baseClassname": ""
  ,
    "description": "The EaseInOutBase class is the base class that provide easing capability. The EaseInOutBase class  defines easing as consisting of two phases: the acceleration, or ease in phase, followed by the deceleration, or ease out phase. The default behavior of this class returns a linear interpolation for both easing phases. You can create a subclass of EaseInOutBase to get more interesting behavior.   <p>The <code>&lt;s:EaseInOutBase&gt;</code> tag inherits all of the tag attributes of its of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;s:EaseInOutBase\\n id=&quot;ID&quot;\\n easeInFraction=&quot;0.5&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.effects.easing.EaseInOutBase",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  the <code>easeInFraction</code> property. The default value is <code>EasingFraction.IN_OUT</code>, which eases in for the first half of the time and eases out for the remainder.",
        "tags": [
        {  "tagName": "param",
               "values": ["easeInFraction Sets the value of"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "easeInFraction", "type": "Number"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "easeInFraction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The percentage of an animation that should be spent accelerating. This factor sets an implicit &quot;easeOut&quot; parameter, equal to (1 - <code>easeIn</code>), so that any time not spent easing in is spent easing out. For example, to have an easing equation that spends half the time easing in and half easing out, set <code>easeIn</code> to .5.  <p>Valid values are between 0.0 and 1.0.</p>",
        "tags": [
        {  "tagName": "default",
               "values": [".5"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "ease",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Takes the fraction representing the elapsed duration of an animation (a value between 0.0 to 1.0) and returns a new elapsed value. This  value is used to calculate animated property values. By changing the value of the elapsed fraction, you effectively change the animation of the property.  For EaseInOutBase, this method calculates the eased fraction value based on the <code>easeInFraction</code> property. If <code>fraction</code> is less than <code>easeInFraction</code>, this method calls the <code>easeIn()</code> method. Otherwise it calls the <code>easeOut()</code> method. It is expected that these functions are overridden in a subclass.",
        "tags": [
        {  "tagName": "param",
               "values": ["fraction The elapsed fraction of the animation."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "return",
               "values": ["The eased fraction of the animation."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "fraction", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "easeIn",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a value that represents the eased fraction during the ease in phase of the animation. The value returned by this class is simply the fraction itself, which represents a linear interpolation of the fraction. More interesting behavior is implemented by subclasses of EaseInOutBase.  of the animation, between 0.0 and 1.0.  phase of the animation.",
        "tags": [
        {  "tagName": "param",
               "values": ["fraction The fraction elapsed of the easing in phase"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "return",
               "values": ["A value that represents the eased value for this"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "fraction", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "easeOut",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a value that represents the eased fraction during the ease out phase of the animation. The value returned by this class is simply the fraction itself, which represents a linear interpolation of the fraction. More interesting behavior is implemented by subclasses of EaseInOutBase.  of the animation, between 0.0 and 1.0.  phase of the animation.",
        "tags": [
        {  "tagName": "param",
               "values": ["fraction The fraction elapsed of the easing out phase"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "return",
               "values": ["A value that represents the eased value for this"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "fraction", "type": "Number"}]}
      ]
  }
