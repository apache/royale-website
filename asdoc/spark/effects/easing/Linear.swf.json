{ "type": "class",
  "qname": "spark.effects.easing.Linear",
  "baseClassname": ""
  ,
    "description": "The Linear class defines an easing with three phases: acceleration, uniform motion, and deceleration. As the animation starts it accelerates through the period specified by the <code>easeInFraction</code> property, it then uses uniform (linear) motion through the next phase, and finally decelerates until the end during the period specified by the <code>easeOutFraction</code> property.  <p>The easing values for the three phases are calculated such that the behavior of constant acceleration, linear motion, and constant deceleration all occur within the specified duration of the animation.</p>  <p>Strict linear motion can be achieved by setting <code>easeInFraction</code> and <code>easeOutFraction</code> to 0.0. Note that if acceleration or deceleration are not 0.0, then the motion during the middle phase is not at the same speed as that of pure linear motion. The middle phase consists of uniform motion, but the speed of that motion is determined by the size of that phase relative to the overall animation.</p>   <p>The <code>&lt;s:Linear&gt;</code> tag inherits all of the tag attributes of its of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;s:Linear\\n id=&quot;ID&quot;\\n easeInFraction=&quot;0&quot;\\n easeOutFraction=&quot;0&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/LinearEffectExample.mxml"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.effects.easing.Linear",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  in the acceleration phase, between 0.0 and 1.0.  in the deceleration phase, between 0.0 and 1.0.",
        "tags": [
        {  "tagName": "param",
               "values": ["easeInFraction The fraction of the overall duration", "easeOutFraction The fraction of the overall duration"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "easeInFraction", "type": "Number"},
        { "name": "easeOutFraction", "type": "Number"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "easeInFraction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The fraction an animation spent accelerating, between 0.0 and 1.0. The values of the <code>easeOutFraction</code> property and <code>easeInFraction</code> property must satisfy the equation <code>easeOutFraction + easeInFraction &lt;= 1</code> where any remaining time is spent in the linear motion phase.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "easeOutFraction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The percentage an animation will spend decelerating, between 0.0 and 1.0. The values of the <code>easeOutFraction</code> property and <code>easeInFraction</code> property must satisfy the equation <code>easeOutFraction + easeInFraction &lt;= 1</code> where any remaining time is spent in the linear motion phase.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "ease",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Calculates the eased fraction value based on the <code>easeInFraction</code> and <code>easeOutFraction</code> properties. If <code>fraction</code> is less than <code>easeInFraction</code>, it calculates a value based on accelerating up to the linear motion phase. If <code>fraction</code> is greater than <code>easeInFraction</code> and less than <code>(1-easeOutFraction)</code>, it calculates a value based on the linear motion phase between the easing in and easing out phases. Otherwise, it calculates a value based on constant deceleration between the linear motion phase and 0.0.  between 0.0 and 1.0..",
        "tags": [
        {  "tagName": "param",
               "values": ["fraction The elapsed fraction of the animation,"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "return",
               "values": ["The eased fraction of the animation."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "fraction", "type": "Number"}]}
      ]
  }
