{ "type": "class",
  "qname": "spark.effects.animation.Keyframe",
  "baseClassname": ""
  ,
    "description": "The Keyframe class defines the value of a property at a specific time during an effect. For example, you can create three keyframes that define the value of a property at the beginning of the effect, at the midpoint of the effect, and at the end of the effect. The effect animates the property change on the target from keyframe to keyframe over the effect duration.  <p>The collection of keyframes for an effect is called the effect's motion path. A motion path can define any number of keyframes. The effect then calculates the value of the property by interpolating between the values specified by two key frames. </p>  <p>Use the MotionPath class to hold the collection of Keyframe objects that represent the motion path of the effect. The MotionPath class specifies the name of the property on the target, and the collection of Keyframes objects specify the values of the property at different times during the effect.</p>   <p>The <code>&lt;s:Keyframe&gt;</code> tag inherits the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;s:Keyframe\\n id=&quot;ID&quot;\\n easier=&quot;Linear&quot;\\n time=&quot;val&quot;\\n value=&quot;val&quot;\\n valueBy=&quot;val&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/KeyFrameEffectExample.mxml"]},
      {  "tagName": "see",
         "values": ["MotionPath"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.effects.animation.Keyframe",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.  of this keyframe should have the value specified by the <code>value</code> parameter.  at the given <code>time</code>.  causes <code>value</code> to be calculated dynamically by adding <code>valueBy</code> to the <code>value</code> of the previous keyframe in the set of keyframes in a MotionPath object. This value is ignored if this is the first Keyframe in a sequence.",
        "tags": [
        {  "tagName": "param",
               "values": ["time The time, in milliseconds, at which the effect target", "value The value that the effect target should have", "valueBy Optional parameter which, if provided,"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "time", "type": "Number"},
        { "name": "value", "type": "Object"},
        { "name": "valueBy", "type": "Object"}]}
      ,
      { "type": "method",
        "qname": "clone",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns a copy of this Keyframe object.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "return",
               "values": ["A copy of this Keyframe object."]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "spark.effects.animation.Keyframe",
          "params": []}
      ,
      { "type": "field",
        "qname": "value",
        "return": "Object",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The value that the property of the effect target should have at the time specified by the <code>time</code> property.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "time",
        "return": "Number",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The time, in milliseconds, at which the effect target for this keyframe should have the value specified by the <code>value</code> property. This time is relative to the starting time of the effect defined with this keyframe.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "easer",
        "return": "spark.effects.easing.IEaser",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The easing behavior applied to the motion between the previous Keyframe object in motion path and this Keyframe object. By default, the easing is linear, or no easing at all.  <p>Note that the parent effect might have easing applied already over the entire animation. Therefore, if easing per keyframe interval is desired instead, it is necessary to set the overall effect easer to linear easing (spark.effects.easing.Linear) and then set the <code>easer</code> on each Keyframe as appropriate.</p>  <p>Because this property acts on the interval between the previous Keyframe object in a sequence and this Keyframe object, the <code>easer</code> property is ignored on the first Keyframe object in a sequence.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["Linear"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "valueBy",
        "return": "Object",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Optional parameter which, if specified, is used to calculate <code>value</code> in this keyframe or the previous one. If <code>value</code> is not set in the previous keyframe, but this keyframe defines both <code>value</code> and <code>valueBy</code>, then <code>value</code> in the previous keyframe is calculated as <code>value</code> in this keyframe minus <code>valueBy</code> in this keyframe.  <p>Similarly, if <code>value</code> in this keyframe is not defined, but <code>valueBy</code> in this keyframe and <code>value</code> in the previous keyframe are both set, then <code>value</code> in this keyframe is calculated as <code>value</code> in the previous keyframe plus <code>valueBy</code> in this keyframe.</p>  <p><code>valueBy</code> is ignored for the first keyframe in a sequence, since it applies only to the interval preceding a keyframe, and there is no preceding interval for the first keyframe.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
