{ "type": "interface",
  "qname": "spark.effects.animation.IAnimationTarget",
"baseInterfaceNames": [
]
,
    "description": "The IAnimationTarget interface is implemented by classes that support the events for an Animation instance.",
  "tags": [
  {  "tagName": "see",
         "values": ["spark.effects.animation.Animation"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
    "qname": "animationStart",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called when an Animation instance starts. If there is a <code>startDelay</code> on the Animation, this function is called after that delay.",
    "tags": [
    {  "tagName": "param",
           "values": ["animation The Animation object."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "animation", "type": "spark.effects.animation.Animation"}]}
  ,
  { "type": "method",
    "qname": "animationStop",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called when an Animation instance stops. This is different than <code>animationEnd()</code> method, which is called when the animation ends, automatically setting the end values of the targets. The <code>animationStop()</code> method is called when an animation is stopped where it's at. Handling this event allows necessary cleanup when the animation is interrupted.",
    "tags": [
    {  "tagName": "param",
           "values": ["animation The Animation object."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "animation", "type": "spark.effects.animation.Animation"}]}
  ,
  { "type": "method",
    "qname": "animationEnd",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called when an Animation instance ends.",
    "tags": [
    {  "tagName": "param",
           "values": ["animation The Animation object."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "animation", "type": "spark.effects.animation.Animation"}]}
  ,
  { "type": "method",
    "qname": "animationRepeat",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called when an Animation instance repeats. The Animation instance must have a <code>repeatCount</code> equal to 0 (infinitely repeating) or a value greater than 1.",
    "tags": [
    {  "tagName": "param",
           "values": ["animation The Animation object."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "animation", "type": "spark.effects.animation.Animation"}]}
  ,
  { "type": "method",
    "qname": "animationUpdate",
    "namespace": "public",
    "bindable": [],
    "details": [],
    "deprecated": {},
      "description": "Called during every update of an Animation instance. If an implementation class is listening to an Animation specifically to be able to do something after the Animation values are calculated for a given time, this is the function in which those values should be used. The other methods in this interface are more informational. They tell the listeners when the Animation starts, stops, or repeats. This method is called when values have been calculated and something can be done with them.",
    "tags": [
    {  "tagName": "param",
           "values": ["animation The Animation object."]},
        {  "tagName": "playerversion",
           "values": ["Flash 10", "AIR 1.5"]},
        {  "tagName": "productversion",
           "values": ["Flex 4"]},
        {  "tagName": "langversion",
           "values": ["3.0"]}  ],
      "return": "void",
      "params": [{ "name": "animation", "type": "spark.effects.animation.Animation"}]}
  ]
  }
