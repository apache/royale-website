{ "type": "class",
  "qname": "spark.effects.AnimateColor",
  "baseClassname": "spark.effects.Animate"
  ,
    "description": "The AnimateColor effect animates a change in a color property over time, interpolating between given from/to color values on a per-channel basis. use this effect, rather than the Animate or other effect, when animating color properties.   <p>The <code>&lt;s:AnimateColor&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;s:AnimateColor\\n <b>Properties</b>\\n id=&quot;ID&quot;\\n colorFrom=&quot;no default&quot;\\n colorPropertyName=&quot;color&quot;\\n colorTo=&quot;no default&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/AnimateColorEffectExample.mxml"]},
      {  "tagName": "see",
         "values": ["spark.effects.supportClasses.AnimateColorInstance"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "colorFrom",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The starting color value.",
        "tags": [
        {  "tagName": "default",
               "values": ["0xFFFFFF"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "colorTo",
        "return": "uint",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The ending color value.",
        "tags": [
        {  "tagName": "default",
               "values": ["0xFFFFFF"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "colorPropertyName",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The name of the color property on the target object affected by this animation. A color property is a property that takes 32-bit color value.",
        "tags": [
        {  "tagName": "default",
               "values": ["\"color\""]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "spark.effects.AnimateColor",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "param",
               "values": ["target The Object to animate with this effect."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "target", "type": "Object"}]}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Array",
        "qname": "relevantStyles",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]}]
  ,
  "events": [
  ]
  }
