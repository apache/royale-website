{ "type": "class",
  "qname": "spark.components.PopUpAnchor",
  "baseClassname": "mx.core.UIComponent"
  ,
    "description": "The PopUpAnchor component is used to position a control that pops up or drops down, such as a DropDownList component, in layout. Because a popup or drop-down control is added to the display list by the PopUpManager, it doesn't normally participate in layout. The PopUpAnchor component is a UIComponent that is added to a container and is laid out. It is then responsible for sizing and positioning the popup or drop-down control relative to itself. It has no visual appearance.  <p>The PopUpAnchor control has the following default characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td>0</td> </tr> <tr> <td>Minimum size</td> <td>0</td> </tr> <tr> <td>Maximum size</td> <td>10000 pixels wide and 10000 pixels high</td> </tr> </table>   <p>The <code>&lt;s:PopUpAnchor&gt;</code> tag inherits all of the tag attributes of its superclass and adds the following tag attributes:</p>  <pre>\\n &lt;s:PopUpAnchor\\n \\n <strong>Properties</strong>\\n displayPopUp=&quot;false&quot;\\n popUp=&quot;&quot;\\n popUpHeightMatchesAnchorHeight=&quot;false&quot;\\n popUpPosition=&quot;topLeft&quot;\\n popUpWidthMatchesAnchorWidth=&quot;false&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/PopUpAnchorExample.mxml"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.PopUpAnchor",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "popUpWidthMatchesAnchorWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If <code>true</code>, the width of the <code>popUp</code> control is set to the value of the PopUpAnchor's width.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "displayPopUp",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If <code>true</code>, adds the <code>popUp</code> control to the PopUpManager. If <code>false</code>, it removes the control.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.core.IFlexDisplayObject",
        "qname": "popUp",
        "namespace": "public",
        "bindable": ["popUpChanged"],
        "details": [],
        "deprecated": {},
          "description": "The IFlexDisplayObject to add to the PopUpManager when the PopUpAnchor is opened. If the <code>popUp</code> control implements IFocusManagerContainer, the <code>popUp</code> control will have its own FocusManager. If the user uses the Tab key to navigate between controls, only the controls in the <code>popUp</code> control are accessed.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "popUpPosition",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]}]
  ,
  "events": [
  ]
  }
