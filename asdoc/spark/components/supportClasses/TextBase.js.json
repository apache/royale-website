{ "type": "class",
  "qname": "spark.components.supportClasses.TextBase",
  "baseClassname": "mx.core.UIComponent"
  ,
    "description": "The base class for Spark text controls such as Label and RichText which display text using CSS styles for the default format.  <p>In addition to adding a <code>text</code> property, this class also adds the <code>maxDisplayedLines</code> and <code>isTruncated</code> properties to support truncation.</p>",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.supportClasses.TextBase",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "visible",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Boolean",
        "qname": "isTruncated",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A read-only property reporting whether the text has been truncated.  <p>Truncating text means replacing excess text with a truncation indicator such as &quot;...&quot;. The truncation indicator is locale-dependent; it is specified by the &quot;truncationIndicator&quot; resource in the &quot;core&quot; resource bundle.</p>  <p>If <code>maxDisplayedLines</code> is 0, no truncation occurs. Instead, the text will simply be clipped if it doesn't fit within the component's bounds.</p>  <p>If <code>maxDisplayedLines</code> is is a positive integer, the text will be truncated if necessary to reduce the number of lines to this integer.</p>  <p>If <code>maxDisplayedLines</code> is -1, the text will be truncated to display as many lines as will completely fit within the height of the component.</p>  <p>Truncation is only performed if the <code>lineBreak</code> style is <code>&quot;toFit&quot;</code>; the value of this property is ignored if <code>lineBreak</code> is <code>&quot;explicit&quot;</code>.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "maxDisplayedLines",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An integer which determines whether, and where, the text gets truncated.  <p>Truncating text means replacing excess text with a truncation indicator such as &quot;...&quot;. The truncation indicator is locale-dependent; it is specified by the &quot;truncationIndicator&quot; resource in the &quot;core&quot; resource bundle.</p>  <p>If the value is 0, no truncation occurs. Instead, the text will simply be clipped if it doesn't fit within the component's bounds.</p>  <p>If the value is is a positive integer, the text will be truncated if necessary to reduce the number of lines to this integer.</p>  <p>If the value is -1, the text will be truncated to display as many lines as will completely fit within the height of the component.</p>  <p>Truncation is only performed if the <code>lineBreak</code> style is <code>&quot;toFit&quot;</code>; the value of this property is ignored if <code>lineBreak</code> is <code>&quot;explicit&quot;</code>.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "showTruncationTip",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A property that controls whether the component should show a toolTip when the text has been truncated.",
        "tags": [
        {  "tagName": "default",
               "values": ["false"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "textNode",
        "return": "Text",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "field",
        "qname": "_text",
        "return": "String",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "text",
        "namespace": "public",
        "bindable": ["textChange"],
        "details": [],
        "deprecated": {},
          "description": "The text to display in the label.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "createElement",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["window.Text"]}  ],
          "return": "org.apache.royale.core.WrappedHTMLElement",
          "params": []}
      ]
  ,
  "events": [
  ]
  }
