{ "type": "class",
  "qname": "spark.components.supportClasses.ButtonBase",
  "baseClassname": "spark.components.supportClasses.SkinnableComponent"
  ,
    "description": "The ButtonBase class is the base class for the all Spark button components. The Button and ToggleButtonBase classes are subclasses of ButtonBase. ToggleButton. The CheckBox and RadioButton classes are subclasses of ToggleButtonBase.   <p>The <code>&lt;s:ButtonBase&gt;</code> tag inherits all of the tag attributes of its superclass and adds the following tag attributes:</p>  <pre>\\n &lt;s:ButtonBase\\n <strong>Properties</strong>\\n autoRepeat=&quot;false&quot;\\n content=&quot;null&quot;\\n label=&quot;&quot;\\n stickyHighlighting=&quot;false&quot;\\n \\n <strong>Events</strong>\\n buttonDown=&quot;<i>No default</i>&quot;\\n \\n <strong>Styles</strong>\\n alignmentBaseline=&quot;USE_DOMINANT_BASELINE&quot;\\n cffHinting=&quot;HORIZONTAL_STEM&quot;\\n color=&quot;0&quot;\\n cornerRadius=&quot;4&quot;\\n digitCase=&quot;DEFAULT&quot;\\n digitWidth=&quot;DEFAULT&quot;\\n direction=&quot;LTR&quot;\\n dominantBaseline=&quot;AUTO&quot;\\n focusAlpha=&quot;0.5&quot;\\n focusColor=&quot;0x70B2EE&quot;\\n fontFamily=&quot;Arial&quot;\\n fontLookup=&quot;DEVICE&quot;\\n fontSize=&quot;12&quot;\\n fontStyle=&quot;NORMAL&quot;\\n fontWeight=&quot;NORMAL&quot;\\n justificationRule=&quot;AUTO&quot;\\n justificationStyle=&quot;AUTO&quot;\\n kerning=&quot;AUTO&quot;\\n ligatureLevel=&quot;COMMON&quot;\\n lineHeight=&quot;120%&quot;\\n lineThrough=&quot;false&quot;\\n locale=&quot;en&quot;\\n renderingMode=&quot;CFF&quot;\\n repeatDelay=&quot;500&quot;\\n repeatInterval=&quot;35&quot;\\n textAlign=&quot;START&quot;\\n textAlignLast=&quot;START&quot;\\n textAlpha=&quot;1&quot;\\n textDecoration=&quot;NONE&quot;\\n textJustify=&quot;INTER_WORD&quot;\\n trackingLeft=&quot;0&quot;\\n trackingRight=&quot;0&quot;\\n typographicCase=&quot;DEFAULT&quot;\\n wordSpacing=&quot;100%&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "see",
         "values": ["spark.components.Button", "spark.components.supportClasses.ToggleButtonBase", "spark.components.ToggleButton", "spark.components.CheckBox", "spark.components.RadioButton"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.supportClasses.ButtonBase",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "label",
        "namespace": "public",
        "bindable": ["contentChange"],
        "details": [],
        "deprecated": {},
          "description": "Text to appear on the ButtonBase control.  <p>If the label is wider than the ButtonBase control, the label is truncated and terminated by an ellipsis (...). The full label displays as a tooltip when the user moves the mouse over the control. If you have also set a tooltip by using the <code>tooltip</code> property, the tooltip is displayed rather than the label text.</p>  <p>This is the default ButtonBase property.</p>  <p>This property is a <code>String</code> typed facade to the <code>content</code> property.  This property is bindable and it shares dispatching the &quot;contentChange&quot; event with the <code>content</code> property.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["\"\""]},
            {  "tagName": "see",
               "values": ["#content"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["contentChange"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "spark.components.Label",
        "qname": "labelDisplay",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "method",
        "qname": "setInnerHTML",
        "namespace": "protected",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["HTMLImageElement"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "createElement",
        "namespace": "protected",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["org.apache.royale.core.WrappedHTMLElement"]}  ],
          "return": "org.apache.royale.core.WrappedHTMLElement",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "lineThrough",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "textDecoration",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "direction",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]}]
  ,
  "events": [
  ]
  }
