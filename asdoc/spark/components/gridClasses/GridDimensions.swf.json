{ "type": "class",
  "qname": "spark.components.gridClasses.GridDimensions",
  "baseClassname": ""
  ,
    "description": "A sparse data structure that represents the widths and heights of a grid.  <p>Provides efficient support for finding the cumulative y distance to the start of a particular cell as well as finding the index of a particular cell at a certain y value. GridDimensions optimizes these operations by bookmarking the most recently visited rows.</p>",
  "tags": [
  {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 2.0"]},
      {  "tagName": "productversion",
         "values": ["Flex 4.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "insertElementsToVector",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Inserts specified elements starting from startIndex.  <pre>Our implementation of:\\n var argArray:Array = [];\\n for each (var x:Number in values)\\n {\\n argArray.push(x);\\n }\\n argArray.splice(0, 0, startIndex, 0);\\n vec.splice.apply(vec, argArray);</pre>",
        "tags": [
        {  "tagName": "param",
               "values": ["vec The vector to insert into.", "startIndex The index to insert at.", "elements The elements to be inserted."]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "vec", "type": "Vector.<Number>"},
        { "name": "startIndex", "type": "int"},
        { "name": "elements", "type": "Vector.<Number>"}]}
      ,
      { "type": "method",
        "qname": "insertValueToVector",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Insert count elements of the specified value starting from startIndex.",
        "tags": [
        {  "tagName": "param",
               "values": ["vec The vector to insert into.", "startIndex The index to insert at.", "count The number of elements to insert", "value The value of the inserted elements"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "vec", "type": "Vector.<Number>"},
        { "name": "startIndex", "type": "int"},
        { "name": "count", "type": "int"},
        { "name": "value", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "clearVector",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "Sets all of the numbers in a vector to be value unless otherwise specified.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "vec", "type": "Vector.<Number>"},
        { "name": "value", "type": "Number"},
        { "name": "startIndex", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "spark.components.gridClasses.GridDimensions",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "rowCount",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The number of rows in the Grid. If this is decreased, the excess rows will be removed.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "int",
        "qname": "columnCount",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The number of columns in the Grid. Setting this property will clear the cache.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "rowGap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The gap between rows.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "columnGap",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The gap between columns.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "defaultRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The default height of a row.  <p>If this property is not set explicitly, it will use the maximum of the typical cell heights.</p>  <p>When variableRowHeight is false, all rows have a height of defaultRowHeight.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["NaN"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "defaultColumnWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The default width of a column. If this changes, update the ASDoc for GridLayout/getItemRendererAt().",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "variableRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If variableRowHeight is false, calling getRowHeight will return the value of defaultRowHeight.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "minRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The minimum height of each row.",
        "tags": [
        {  "tagName": "default",
               "values": ["0"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Number",
        "qname": "maxRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The maximum height of each row.",
        "tags": [
        {  "tagName": "default",
               "values": ["10000"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "getRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the height of the row at the given index. If variableRowHeight is true, then the height in precendence order is: the height set by setRowHeight, the natural height of the row (determined by the maximum of its cell heights), and defaultRowHeight. If variableRowHeight is false, then the height returned is the defaultRowHeight. The returned height is always bounded by the minRowHeight and maxRowHeight.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "row", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "setRowHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the height of a given row. This height takes precedence over the natural height of the row (determined by the maximum of its cell heights) and the defaultRowHeight. However, if variableRowHeight is true, this method has no effect.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "row", "type": "int"},
        { "name": "height", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getColumnWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the width of the column at the given index. Returns the width specified by setColumnWidth. If no width has been specified, returns the typical width. If no typical width has been set, it returns the defaultColumnWidth.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "col", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "setColumnWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the width of a given column.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "col", "type": "int"},
        { "name": "width", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getCellHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the height of the specified cell. Returns the height specified by setCellHeight. If the height has not been specified, returns NaN.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "row", "type": "int"},
        { "name": "col", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "setCellHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the height of the specified cell.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "row", "type": "int"},
        { "name": "col", "type": "int"},
        { "name": "height", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getCellBounds",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the layout bounds of the specified cell. The cell height and width are determined by its row's height and column's width.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.geom.Rectangle",
          "params": [{ "name": "row", "type": "int"},
        { "name": "col", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getCellX",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the X coordinate of the origin of the specified cell.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "row", "type": "int"},
        { "name": "col", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getCellY",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the Y coordinate of the origin of the specified cell.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "row", "type": "int"},
        { "name": "col", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getRowBounds",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the layout bounds of the specified row.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.geom.Rectangle",
          "params": [{ "name": "row", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getPadRowBounds",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Return the dimensions of a row that's being used to &quot;pad&quot; the grid by filling unused space below the last row in a layout where all rows are visible.  Pad rows have index >= rowCount, height = defaultRowHeight.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.geom.Rectangle",
          "params": [{ "name": "row", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getColumnBounds",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the layout bounds of the specified column.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "org.apache.royale.geom.Rectangle",
          "params": [{ "name": "col", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getRowIndexAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the index of the row at the specified coordinates. If the coordinates lie in a gap area, the index returned is the previous row.  coordinates are out of bounds, return -1.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "return",
               "values": ["The index of the row at the coordinates provided. If the"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "int",
          "params": [{ "name": "x", "type": "Number"},
        { "name": "y", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getColumnIndexAt",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the index of the column at the specified coordinates. If the coordinates lie in a gap area, the index returned is the previous column. Returns -1 if the coordinates are out of bounds.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "int",
          "params": [{ "name": "x", "type": "Number"},
        { "name": "y", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getContentWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the total layout width of the content including gaps.   If columnCountOverride is specified, then the overall width of as many columns is returned.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "columnCountOverride", "type": "int"},
        { "name": "startColumnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getContentHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the total layout height of the content including gaps.  If rowCountOverride is specified, then the overall height of as many rows is returned.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "rowCountOverride", "type": "int"},
        { "name": "startRowIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getTypicalContentWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the sum of the typical cell widths including gaps.  If columnCountOverride is specified, then the overall typicalCellWidth of as many columns is returned.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "columnCountOverride", "type": "int"},
        { "name": "startColumnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getTypicalContentHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Returns the content height which is maximum cell height of the typical item times the total number of rows including gaps. If rowCountOverride is specified, then we only include that many rows.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "rowCountOverride", "type": "int"},
        { "name": "startRowIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "getTypicalCellWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Return the preferred bounds width of the grid's typicalItem when rendered with the item renderer for the specified column.  If no value has yet been specified, return NaN.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "columnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "setTypicalCellWidth",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the preferred bounds width of the grid's typicalItem for the specified column.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "columnIndex", "type": "int"},
        { "name": "value", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "getTypicalCellHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Return the preferred bounds height of the grid's typicalItem when rendered with the item renderer for the specified column.  If no value has yet been specified, return NaN.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Number",
          "params": [{ "name": "columnIndex", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "setTypicalCellHeight",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Sets the preferred bounds height of the grid's typicalItem for the specified column.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "columnIndex", "type": "int"},
        { "name": "value", "type": "Number"}]}
      ,
      { "type": "method",
        "qname": "clearTypicalCellWidthsAndHeights",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Clears the typical cell for every column and row.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "insertRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Inserts count number of rows starting from startRow. This shifts any rows after startRow down by count and will increment rowCount.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "startRow", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "insertColumns",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Inserts count number of columns starting from startColumn. This shifts any columns after startColumn down by count and will increment columnCount.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "startColumn", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "removeRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes count number of rows starting from startRow. This shifts any rows after startRow up by count and will decrement rowCount.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "startRow", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "removeColumns",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes count number of columns starting from startColumn. This shifts any columns after startColumn up by count and will decrement columnCount.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "startColumn", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "clearRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Removes any nodes that occupy the indices between startRow and startRow + count.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "startRow", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "clearColumns",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Clears any columns that occupy the indices between startColumn and startColumn + count.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "startColumn", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "moveRows",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Moves count number of rows from the fromRow index to the toRow index. This operation will not affect rowCount.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "fromRow", "type": "int"},
        { "name": "toRow", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "moveColumns",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Moves count number of columns from the fromCol index to the toCol index. This operation will not affect colCount.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "fromCol", "type": "int"},
        { "name": "toCol", "type": "int"},
        { "name": "count", "type": "int"}]}
      ,
      { "type": "method",
        "qname": "clearHeights",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Clears all cached heights.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ,
      { "type": "method",
        "qname": "dataProviderCollectionChanged",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Handles changes in the dataProvider.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.events.CollectionEvent"}]}
      ,
      { "type": "method",
        "qname": "columnsCollectionChanged",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Handles changes in columns.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.0"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": [{ "name": "event", "type": "mx.events.CollectionEvent"}]}
      ]
  ,
  "events": [
  ]
  }
