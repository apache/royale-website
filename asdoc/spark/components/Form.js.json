{ "type": "class",
  "qname": "spark.components.Form",
  "baseClassname": "spark.components.SkinnableContainer"
  ,
    "description": "The Spark Form container lets you control the layout of a form, mark form fields as required or optional, handle error messages, and bind your form data to the Flex data model to perform data checking and validation. It also lets you use style sheets to configure the appearance of your forms.  <p>The following table describes the components you use to create forms in Flex:</p> <table class=&quot;innertable&quot;> <tr> <th>Component</th> <th>Tag</th> <th>Description</th> </tr> <tr> <td>Form</td> <td><code>&lt;s:Form&gt;</code></td> <td>Defines the container for the entire form, including the overall form layout. Use the FormHeading control and FormItem control to define content. You can also insert other types of components in a Form container.</td> </tr> <tr> <td>FormHeading</td> <td><code>&lt;s:FormHeading&gt;</code></td> <td>Defines a heading within your form. </td> </tr> <tr> <td>FormItem</td> <td><code>&lt;s:FormItem&gt;</code></td> <td>Contains one or more form children arranged horizontally or vertically. Children can be controls or other containers. A single Form container can hold multiple FormItem containers.</td> </tr> <tr> <td>FormLayout</td> <td><code>&lt;s:FormLayout&gt;</code></td> <td>Defines the default layout for Spark Form skins.</td> </tr> </table>   <p>The <code>&lt;s:Form&gt;</code> tag inherits all the tag attributes of its superclass and adds no new tag attributes:</p>  <pre>\\n &lt;s:Form&gt;\\n ...\\n <i>child tags</i>\\n ...\\n &lt;/s:Form&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/FormExample.mxml", "examples/StackedFormSkinExample.mxml"]},
      {  "tagName": "see",
         "values": ["spark.components.FormHeading", "spark.components.FormItem", "spark.layouts.FormLayout", "spark.skins.spark.FormSkin"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 2.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.Form",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "field",
        "qname": "_invalidElements",
        "return": "Array",
        "namespace": "mx_internal",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royalesuppresspublicvarwarning",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "Array",
        "qname": "invalidElements",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "A sorted Array of descendant elements that are in an invalid state. The items in the array are Objects with the following properties:  <ul> <li>element:UIComponent - the invalid descendant element</li>  <li>position:Vector.&lt;int&gt; - a Vector of integers representing the position of the element in the display list tree. This property is used for sorting the Array.</li> </ul>  <p>If a descendant is removed from the Form, the dictionary is not updated.</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
