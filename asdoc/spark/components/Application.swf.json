{ "type": "class",
  "qname": "spark.components.Application",
  "baseClassname": "spark.components.SkinnableContainer"
  ,
    "description": "Flex defines a default, or Application, container that lets you start adding content to your application without explicitly defining another container.  <p>The Application container has the following default characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td>375 pixels high and 500 pixels wide in the Standalone Flash Player, and all available space in a browser</td> </tr> <tr> <td>Minimum size</td> <td>0 pixels wide and 0 pixels high</td> </tr> <tr> <td>Maximum size</td> <td>No limit</td> </tr> <tr> <td>Default skin class</td> <td>spark.skins.spark.ApplicationSkin</td> </tr> </table>   <p>The <code>&lt;s:Application&gt;</code> tag inherits all of the tag attributes of its superclass and adds the following tag attributes:</p>  <pre>\\n &lt;s:Application\\n <strong>Properties</strong>\\n applicationDPI=<i>Device dependent</i>&quot;\\n backgroundColor=&quot;0xFFFFFF&quot;\\n colorCorrection=&quot;default&quot;\\n controlBarContent=&quot;null&quot;\\n controlBarLayout=&quot;HorizontalLayout&quot;\\n controlBarVisible=&quot;true&quot;\\n frameRate=&quot;24&quot;\\n pageTitle&quot;&quot;\\n preloader=&quot;<i>No default</i>&quot;\\n preloaderChromeColor=&quot;<i>No default</i>&quot;\\n resizeForSoftKeyboard=true&quot;\\n runtimeDPIProvider=&quot;RuntimeDPIProvider&quot;\\n scriptRecursionLimit=&quot;1000&quot;\\n scriptTimeLimit=&quot;60&quot;\\n splashScreenImage=&quot;&quot;\\n splashScreenMinimumDisplayTime=&quot;1000&quot;\\n splashScreenScaleMode=&quot;none&quot;\\n usePreloader=&quot;true&quot;\\n viewSourceURL=&quot;&quot;\\n xmlns:<i>No default</i>=&quot;<i>No default</i>&quot;\\n \\n <strong>Events</strong>\\n applicationComplete=&quot;<i>No default</i>&quot;\\n error=&quot;<i>No default</i>&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/ApplicationContainerExample.mxml"]},
      {  "tagName": "see",
         "values": ["spark.skins.spark.ApplicationSkin"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.Application",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "method",
        "qname": "info",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "An Object containing information generated by the compiler that is useful at startup time.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "Object",
          "params": []}
      ,
      { "type": "accessor",
        "access": "write-only",
        "return": "org.apache.royale.core.IValuesImpl",
        "qname": "valuesImpl",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The org.apache.royale.core.IValuesImpl that will determine the default values and other values for the application.  The most common choice is org.apache.royale.core.SimpleCSSValuesImpl.",
        "tags": [
        {  "tagName": "see",
               "values": ["org.apache.royale.core.SimpleCSSValuesImpl"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "controlBarVisible",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "If <code>true</code>, the control bar is visible. The flag has no affect if there is no value set for the <code>controlBarContent</code> property.  <p><b>Note:</b> The Application container does not monitor the <code>controlBarGroup</code> property. If other code makes it invisible, the Application container might not update correctly.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["true"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "parameters",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The parameters property returns an Object containing name-value pairs representing the parameters provided to this Application.  <p>You can use a for-in loop to extract all the names and values from the parameters Object.</p>  <p>There are two sources of parameters: the query string of the Application's URL, and the value of the FlashVars HTML parameter (this affects only the main Application).</p>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 9", "AIR 1.1"]},
            {  "tagName": "productversion",
               "values": ["Flex 3"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "String",
        "qname": "url",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The URL from which this Application's SWF file was loaded.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.IPopUpHostParent",
        "qname": "popUpParent",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Application can host popups but in the strandChildren",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "mx.managers.ISystemManager",
        "qname": "systemManager",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "private",
               "values": []}  ]},
      { "type": "accessor",
        "access": "read-only",
        "return": "org.apache.royale.core.IPopUpHost",
        "qname": "popUpHost",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "",
        "tags": [
          ]}]
  ,
  "events": [
  { "qname": "applicationComplete",
        "type": "mx.events.FlexEvent"
      ,
          "description": "Dispatched after the Application has been initialized, processed by the LayoutManager, and attached to the display list.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["mx.events.FlexEvent.APPLICATION_COMPLETE"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "error",
        "type": "flash.events.ErrorEvent"
      ,
          "description": "Dispatched when an HTTPService call fails.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["flash.events.ErrorEvent.ERROR"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "qname": "uncaughtError",
        "type": "flash.events.UncaughtErrorEvent"
      ,
          "description": "Dispatched when an uncaught error is caught by the Global Exception Handler",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.1", "AIR 2.0"]},
            {  "tagName": "eventType",
               "values": ["flash.events.UncaughtErrorEvent.UNCAUGHT_ERROR"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
