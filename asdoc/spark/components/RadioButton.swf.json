{ "type": "class",
  "qname": "spark.components.RadioButton",
  "baseClassname": "spark.components.supportClasses.ToggleButtonBase"
  ,
    "description": "The RadioButton component allows the user make a single choice within a set of mutually exclusive choices. A RadioButtonGroup is composed of two or more RadioButton components with the same <code>groupName</code> property. While grouping RadioButton instances in a RadioButtonGroup is optional, a group lets you do things like set a single event handler on a group of RadioButtons, rather than on each individual RadioButton.  <p>The RadioButton group can refer to the a group created by the <code>&lt;s:RadioButtonGroup&gt;</code> tag. The user selects only one member of the group at a time. Selecting an unselected group member deselects the currently selected RadioButton component within that group.</p>  <p>To use this component in a list-based component, such as a List or DataGrid, create an item renderer. For information about creating an item renderer, see <a href=&quot;http://help.adobe.com/en_US/flex/using/WS4bebcd66a74275c3-fc6548e124e49b51c4-8000.html&quot;> Custom Spark item renderers</a>. </p>  <p>The RadioButton component has the following default characteristics:</p> <table class=&quot;innertable&quot;> <tr> <th>Characteristic</th> <th>Description</th> </tr> <tr> <td>Default size</td> <td>Wide enough to display the text label of the component</td> </tr> <tr> <td>Minimum size</td> <td>18 pixels wide and 18 pixels high</td> </tr> <tr> <td>Maximum size</td> <td>10000 pixels wide and 10000 pixels high</td> </tr> <tr> <td>Default skin class</td> <td>spark.skins.spark.RadioButtonSkin</td> </tr> </table>   <p>The <code>&lt;s:RadioButton&gt;</code> tag inherits all of the tag attributes of its superclass, and adds the following tag attributes:</p>  <pre>\\n &lt;s:RadioButton\\n <strong>Properties</strong>\\n enabled=&quot;&quot;\\n group=&quot;<i>the automatically created default RadioButtonGroup</i>&quot;\\n groupName=&quot;radioGroup&quot;\\n value=&quot;null&quot;\\n /&gt;\\n </pre>",
  "tags": [
  {  "tagName": "includeExample",
         "values": ["examples/RadioButtonExample.mxml"]},
      {  "tagName": "see",
         "values": ["spark.components.RadioButtonGroup", "spark.skins.spark.RadioButtonSkin"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "mxml",
         "values": []},
      {  "tagName": "productversion",
         "values": ["Royale 0.9.4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "method",
        "qname": "spark.components.RadioButton",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": []}
      ,
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "selected",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "",
        "tags": [
        {  "tagName": "royaleignorecoercion",
               "values": ["HTMLInputElement"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Boolean",
        "qname": "enabled",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "The RadioButton component is enabled if the RadioButtonGroup is enabled and the RadioButton itself is enabled.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "spark.components.RadioButtonGroup",
        "qname": "group",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The RadioButtonGroup component to which this RadioButton belongs. When creating RadioButtons to put in a RadioButtonGroup, you should use either the <code>group</code> property or the <code>groupName</code> property for all of the buttons.",
        "tags": [
        {  "tagName": "default",
               "values": ["the automatically created default RadioButtonGroup"]},
            {  "tagName": "see",
               "values": ["#groupName"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "String",
        "qname": "groupName",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Specifies the name of the group to which this RadioButton component belongs, or specifies the value of the <code>id</code> property of a RadioButtonGroup component if this RadioButton is part of a group defined by a RadioButtonGroup component. All radio buttons with the same <code>groupName</code> property will be in the same tab group.  <p>When creating radio buttons to put in a RadioButtonGroup, it is advisable to use either the <code>group</code> property or the <code>groupName</code> property for all of the buttons.</p>",
        "tags": [
        {  "tagName": "default",
               "values": ["\"radioGroup\""]},
            {  "tagName": "see",
               "values": ["#group", "mx.manager.IFocusManagerGroup#groupName"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "accessor",
        "access": "read-write",
        "return": "Object",
        "qname": "value",
        "namespace": "public",
        "bindable": ["valueChanged","change"],
        "details": [],
        "deprecated": {},
          "description": "Optional user-defined value that is associated with a RadioButton component.",
        "tags": [
        {  "tagName": "default",
               "values": ["null"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.9.4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "addedToParent",
        "namespace": "public",
        "bindable": [],
        "details": ["override"],
        "deprecated": {},
          "description": "The method called when added to a parent. The DateField class uses this opportunity to install additional beads.",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10.2", "AIR 2.6"]},
            {  "tagName": "productversion",
               "values": ["Royale 0.0"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "void",
          "params": []}
      ]
  ,
  "events": [
  ]
  }
