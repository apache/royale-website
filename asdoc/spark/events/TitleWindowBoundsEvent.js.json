{ "type": "class",
  "qname": "spark.events.TitleWindowBoundsEvent",
  "baseClassname": "org.apache.royale.events.Event"
  ,
    "description": "The TitleWindowBoundsEvent class represents event objects that are dispatched when bounds of a Spark TitleWindow changes, either by moving or resizing.",
  "tags": [
  {  "tagName": "see",
         "values": ["spark.components.TitleWindow"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 1.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4"]},
      {  "tagName": "langversion",
         "values": ["3.0"]}  ],
  "members": [
  { "type": "field",
        "qname": "WINDOW_MOVE_START",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>TitleWindowBoundsEvent.WINDOW_MOVE_START</code> constant defines the value of the <code>type</code> property of the event object for a <code>windowMoveStart</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>true</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>beforeBounds</code></td><td>The starting bounds of the object.</td></tr> <tr><td><code>afterBounds</code></td><td>null</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["windowMoveStart"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "WINDOW_MOVING",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>TitleWindowBoundsEvent.WINDOW_MOVING</code> constant defines the value of the <code>type</code> property of the event object for a <code>windowMoving</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>true</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>beforeBounds</code></td><td>The current bounds of the object.</td></tr> <tr><td><code>afterBounds</code></td><td>The future bounds of the object if the object moves to the current cursor position.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["windowMoving"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "WINDOW_MOVE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>TitleWindowBoundsEvent.WINDOW_MOVE</code> constant defines the value of the <code>type</code> property of the event object for a <code>windowMove</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>beforeBounds</code></td><td>The previous bounds of the object.</td></tr> <tr><td><code>afterBounds</code></td><td>The current bounds of the object.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["windowMove"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "WINDOW_MOVE_END",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>TitleWindowBoundsEvent.WINDOW_MOVE_END</code> constant defines the value of the <code>type</code> property of the event object for a <code>windowMoveEnd</code> event.  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td><code>beforeBounds</code></td><td>The starting bounds of the object.</td></tr> <tr><td><code>afterBounds</code></td><td>The final bounds of the object.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> </table>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "eventType",
               "values": ["windowMoveEnd"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "spark.events.TitleWindowBoundsEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.   up the display list hierarchy.  associated with the event can be prevented.  this event is cancelable, <code>beforeBounds</code> is the current bounds of the window. Otherwise, it is the bounds before a change occurred.  this event is cancelable, <code>afterBounds</code> is the future bounds of the window. Otherwise, it is the current bounds.",
        "tags": [
        {  "tagName": "param",
               "values": ["type The event type; indicates the action that caused the event.", "bubbles Specifies whether the event can bubble", "cancelable Specifies whether the behavior", "beforeBounds The bounds of the window before the action. If", "afterBounds The bounds of the window after the action. If"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "beforeBounds", "type": "org.apache.royale.geom.Rectangle"},
        { "name": "afterBounds", "type": "org.apache.royale.geom.Rectangle"}]}
      ,
      { "type": "field",
        "qname": "beforeBounds",
        "return": "org.apache.royale.geom.Rectangle",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The bounds of the object before the action. If this event is cancelable, <code>beforeBounds</code> is the current bounds of the window. Otherwise, it is the bounds before a change occurred.  <p>The following list shows how this property is set for the different event types:</p>  <ul> <li><code>WINDOW_MOVE</code> - The previous bounds of the window.</li> <li><code>WINDOW_MOVE_END</code> - The starting bounds of the window, before the drag.</li> <li><code>WINDOW_MOVE_START   </code> - The starting bounds of the window.</li> <li><code>WINDOW_MOVING</code> - The current bounds of the window.</li> </ul>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "afterBounds",
        "return": "org.apache.royale.geom.Rectangle",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The bounds of the object after the action. If this event is cancelable, <code>afterBounds</code> is the future bounds of the window. Otherwise, it is the current bounds.  <p>The following list shows how this property is set for the different event types:</p>  <ul> <li><code>WINDOW_MOVE</code> - The current bounds of the window.</li> <li><code>WINDOW_MOVE_END</code> - The final bounds of the window, before the drag.</li> <li><code>WINDOW_MOVE_START   </code> - null.</li> <li><code>WINDOW_MOVING</code> - The future bounds of the window if the window moves to the current cursor position.</li> </ul>",
        "tags": [
        {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  }
