{ "type": "class",
  "qname": "spark.events.GridSelectionEvent",
  "baseClassname": "org.apache.royale.events.Event"
  ,
    "description": "The GridSelectionEvent class represents events that are dispatched when the selection changes in a Spark DataGrid control as the result of user interaction.",
  "tags": [
  {  "tagName": "see",
         "values": ["spark.events.GridSelectionEventKind", "spark.components.DataGrid", "spark.components.Grid"]},
      {  "tagName": "playerversion",
         "values": ["Flash 10", "AIR 2.5"]},
      {  "tagName": "productversion",
         "values": ["Flex 4.5"]},
      {  "tagName": "langversion",
         "values": ["3.0"]},
      {  "tagName": "royalesuppresspublicvarwarning",
         "values": []}  ],
  "members": [
  { "type": "field",
        "qname": "SELECTION_CHANGE",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>GridSelectionEvent.SELECTION_CHANGE</code> constant defines the value of the <code>type</code> property of the event object for a <code>selectionChange</code> event, which indicates that the current selection has just been changed.  <p>This event is dispatched when the user interacts with the control. When you sort the data provider's collection programmatically, the component does not dispatch the <code>selectionChange</code> event. </p>  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td>kind<code></code></td><td>The kind of changing event. The valid values are defined in GridSelectionEventKind class as constants.  This value determines which properties in the event are used.</td></tr> <tr><td><code>selectionChange</code></td><td>The just completed selection change that was triggered by a user gesture. Use the DataGrid selection methods to determine the current selection.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>type</code></td><td>GridSelectionEvent.SELECTION_CHANGE</td></tr> </table>",
        "tags": [
        {  "tagName": "see",
               "values": ["spark.components.DataGrid#selectedCells", "spark.components.DataGrid#selectedIndices"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "eventType",
               "values": ["selectionChange"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "SELECTION_CHANGING",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": ["static"],
        "deprecated": {},
          "description": "The <code>GridSelectionEvent.SELECTION_CHANGING</code> constant defines the value of the <code>type</code> property of the event object for a <code>selectionChanging</code> event, which indicates that the current selection is about to change. Call preventDefault() on this event to prevent the selection from changing.  <p>This event is dispatched when the user interacts with the control. When you sort the data provider's collection programmatically, the component does not dispatch the <code>selectionChanging</code> event. </p>  <p>The properties of the event object have the following values:</p> <table class=&quot;innertable&quot;> <tr><th>Property</th><th>Value</th></tr> <tr><td><code>bubbles</code></td><td>false</td></tr> <tr><td><code>cancelable</code></td><td>false</td></tr> <tr><td><code>currentTarget</code></td><td>The Object that defines the event listener that handles the event. For example, if you use <code>myButton.addEventListener()</code> to register an event listener, myButton is the value of the <code>currentTarget</code>. </td></tr> <tr><td>kind<code></code></td><td>The kind of changing event. The valid values are defined in GridSelectionEventKind class as constants.  This value determines which properties in the event are used.</td></tr> <tr><td><code>selectionChange</code></td><td>The upcoming selection change that is triggered by a user gesture.</td></tr> <tr><td><code>target</code></td><td>The Object that dispatched the event; it is not always the Object listening for the event. Use the <code>currentTarget</code> property to always access the Object listening for the event.</td></tr> <tr><td><code>type</code></td><td>GridSelectionEvent.SELECTION_CHANGING</td></tr> </table>",
        "tags": [
        {  "tagName": "see",
               "values": ["spark.components.DataGrid#selectedCells", "spark.components.DataGrid#selectedIndices"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "eventType",
               "values": ["selectionChanging"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "method",
        "qname": "spark.events.GridSelectionEvent",
        "namespace": "",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Constructor.   up the display list hierarchy.  associated with the event can be prevented.  <code>GridSelectionEventKind</code> class as constants.  This value determines which properties in the event are used.  current selection.  Use the Spark DataGrid selection methods to determine the current selection.",
        "tags": [
        {  "tagName": "see",
               "values": ["spark.components.DataGrid#selectedCells", "spark.components.DataGrid#selectedIndices"]},
            {  "tagName": "param",
               "values": ["type The event type; indicates the action that caused the event.", "bubbles Specifies whether the event can bubble", "cancelable Specifies whether the behavior", "kind The kind of changing event.  The valid values are defined in", "selectionChange The proposed or accepted change to the"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 1.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4"]},
            {  "tagName": "spark.events.GridSelectionEventKind",
               "values": []},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ],
          "return": "",
          "params": [{ "name": "type", "type": "String"},
        { "name": "bubbles", "type": "Boolean"},
        { "name": "cancelable", "type": "Boolean"},
        { "name": "kind", "type": "String"},
        { "name": "selectionChange", "type": "spark.components.gridClasses.CellRegion"}]}
      ,
      { "type": "field",
        "qname": "kind",
        "return": "String",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "Indicates the kind of event that occurred. The property value can be one of the values in the GridSelectionEventKind class, or <code>null</code>, which indicates that the kind is unknown.",
        "tags": [
        {  "tagName": "see",
               "values": ["spark.events.GridSelectionEventKind"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]},
      { "type": "field",
        "qname": "selectionChange",
        "return": "spark.components.gridClasses.CellRegion",
        "namespace": "public",
        "bindable": [],
        "details": [],
        "deprecated": {},
          "description": "The upcoming or just-completed selection changes triggered by some user gesture.  If this change is adding to the current selection, it will not represent the complete selection.  Use the DataGrid selection methods to determine the selection.",
        "tags": [
        {  "tagName": "see",
               "values": ["spark.components.DataGrid"]},
            {  "tagName": "playerversion",
               "values": ["Flash 10", "AIR 2.5"]},
            {  "tagName": "productversion",
               "values": ["Flex 4.5"]},
            {  "tagName": "langversion",
               "values": ["3.0"]}  ]}]
  ,
  "events": [
  ]
  }
